Component: Arm Compiler for Embedded 6.19 Tool: armlink [5e73cb00]

==============================================================================

Section Cross References

    main.o(.ARM.exidx.text.exit) refers to main.o(.text.exit) for [Anonymous Symbol]
    main.o(.text.main) refers to main.o(.rodata.str1.1) for .L.str
    main.o(.text.main) refers to printfa.o(i.__0printf) for printf
    main.o(.text.main) refers to test_osapi.o(.text._Z14taskOSAPI_TESTPv) for taskOSAPI_TEST(void*)
    main.o(.text.main) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    main.o(.text.main) refers to tasks.o(.text.vTaskStartScheduler) for vTaskStartScheduler
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    basic.o(.text.CU_basic_run_tests) refers to testdb.o(.text.CU_get_registry) for CU_get_registry
    basic.o(.text.CU_basic_run_tests) refers to basic.o(.bss.f_run_mode) for f_run_mode
    basic.o(.text.CU_basic_run_tests) refers to stderr.o(.data) for __stderr
    basic.o(.text.CU_basic_run_tests) refers to basic.o(.rodata.str1.1) for .L.str
    basic.o(.text.CU_basic_run_tests) refers to printfa.o(i.__0fprintf) for fprintf
    basic.o(.text.CU_basic_run_tests) refers to basic.o(.text.basic_initialize) for basic_initialize
    basic.o(.text.CU_basic_run_tests) refers to basic.o(.text.basic_run_all_tests) for basic_run_all_tests
    basic.o(.ARM.exidx.text.CU_basic_run_tests) refers to basic.o(.text.CU_basic_run_tests) for [Anonymous Symbol]
    basic.o(.text.basic_initialize) refers to stdout.o(.data) for __stdout
    basic.o(.text.basic_initialize) refers to stderr.o(.data) for __stderr
    basic.o(.text.basic_initialize) refers to cuerror.o(.text.CU_set_error) for CU_set_error
    basic.o(.text.basic_initialize) refers to basic.o(.bss.f_run_mode) for f_run_mode
    basic.o(.text.basic_initialize) refers to basic.o(.rodata.str1.1) for .L.str.4
    basic.o(.text.basic_initialize) refers to printfa.o(i.__0fprintf) for fprintf
    basic.o(.text.basic_initialize) refers to basic.o(.text.basic_test_start_message_handler) for basic_test_start_message_handler
    basic.o(.text.basic_initialize) refers to testrun.o(.text.CU_set_test_start_handler) for CU_set_test_start_handler
    basic.o(.text.basic_initialize) refers to basic.o(.text.basic_test_complete_message_handler) for basic_test_complete_message_handler
    basic.o(.text.basic_initialize) refers to testrun.o(.text.CU_set_test_complete_handler) for CU_set_test_complete_handler
    basic.o(.text.basic_initialize) refers to basic.o(.text.basic_all_tests_complete_message_handler) for basic_all_tests_complete_message_handler
    basic.o(.text.basic_initialize) refers to testrun.o(.text.CU_set_all_test_complete_handler) for CU_set_all_test_complete_handler
    basic.o(.text.basic_initialize) refers to basic.o(.text.basic_suite_init_failure_message_handler) for basic_suite_init_failure_message_handler
    basic.o(.text.basic_initialize) refers to testrun.o(.text.CU_set_suite_init_failure_handler) for CU_set_suite_init_failure_handler
    basic.o(.text.basic_initialize) refers to basic.o(.text.basic_suite_cleanup_failure_message_handler) for basic_suite_cleanup_failure_message_handler
    basic.o(.text.basic_initialize) refers to testrun.o(.text.CU_set_suite_cleanup_failure_handler) for CU_set_suite_cleanup_failure_handler
    basic.o(.text.basic_initialize) refers to cuerror.o(.text.CU_get_error) for CU_get_error
    basic.o(.ARM.exidx.text.basic_initialize) refers to basic.o(.text.basic_initialize) for [Anonymous Symbol]
    basic.o(.text.basic_run_all_tests) refers to basic.o(.bss.f_pRunningSuite) for f_pRunningSuite
    basic.o(.text.basic_run_all_tests) refers to testdb.o(.text.CU_set_registry) for CU_set_registry
    basic.o(.text.basic_run_all_tests) refers to testrun.o(.text.CU_run_all_tests) for CU_run_all_tests
    basic.o(.ARM.exidx.text.basic_run_all_tests) refers to basic.o(.text.basic_run_all_tests) for [Anonymous Symbol]
    basic.o(.text.CU_basic_run_suite) refers to basic.o(.text.basic_initialize) for basic_initialize
    basic.o(.text.CU_basic_run_suite) refers to basic.o(.text.basic_run_suite) for basic_run_suite
    basic.o(.ARM.exidx.text.CU_basic_run_suite) refers to basic.o(.text.CU_basic_run_suite) for [Anonymous Symbol]
    basic.o(.text.basic_run_suite) refers to basic.o(.bss.f_pRunningSuite) for f_pRunningSuite
    basic.o(.text.basic_run_suite) refers to testrun.o(.text.CU_run_suite) for CU_run_suite
    basic.o(.ARM.exidx.text.basic_run_suite) refers to basic.o(.text.basic_run_suite) for [Anonymous Symbol]
    basic.o(.text.CU_basic_run_test) refers to basic.o(.text.basic_initialize) for basic_initialize
    basic.o(.text.CU_basic_run_test) refers to basic.o(.text.basic_run_single_test) for basic_run_single_test
    basic.o(.ARM.exidx.text.CU_basic_run_test) refers to basic.o(.text.CU_basic_run_test) for [Anonymous Symbol]
    basic.o(.text.basic_run_single_test) refers to basic.o(.bss.f_pRunningSuite) for f_pRunningSuite
    basic.o(.text.basic_run_single_test) refers to testrun.o(.text.CU_run_test) for CU_run_test
    basic.o(.ARM.exidx.text.basic_run_single_test) refers to basic.o(.text.basic_run_single_test) for [Anonymous Symbol]
    basic.o(.text.CU_basic_set_mode) refers to basic.o(.bss.f_run_mode) for f_run_mode
    basic.o(.ARM.exidx.text.CU_basic_set_mode) refers to basic.o(.text.CU_basic_set_mode) for [Anonymous Symbol]
    basic.o(.text.CU_basic_get_mode) refers to basic.o(.bss.f_run_mode) for f_run_mode
    basic.o(.ARM.exidx.text.CU_basic_get_mode) refers to basic.o(.text.CU_basic_get_mode) for [Anonymous Symbol]
    basic.o(.text.CU_basic_show_failures) refers to basic.o(.rodata.str1.1) for .L.str.3
    basic.o(.text.CU_basic_show_failures) refers to stdout.o(.data) for __stdout
    basic.o(.text.CU_basic_show_failures) refers to printfa.o(i.__0fprintf) for fprintf
    basic.o(.ARM.exidx.text.CU_basic_show_failures) refers to basic.o(.text.CU_basic_show_failures) for [Anonymous Symbol]
    basic.o(.text.basic_test_start_message_handler) refers to basic.o(.rodata.str1.1) for .L.str.7
    basic.o(.text.basic_test_start_message_handler) refers to retarget_io.o(.text.__aeabi_assert) for __aeabi_assert
    basic.o(.text.basic_test_start_message_handler) refers to basic.o(.bss.f_run_mode) for f_run_mode
    basic.o(.text.basic_test_start_message_handler) refers to basic.o(.bss.f_pRunningSuite) for f_pRunningSuite
    basic.o(.text.basic_test_start_message_handler) refers to stdout.o(.data) for __stdout
    basic.o(.text.basic_test_start_message_handler) refers to printfa.o(i.__0fprintf) for fprintf
    basic.o(.ARM.exidx.text.basic_test_start_message_handler) refers to basic.o(.text.basic_test_start_message_handler) for [Anonymous Symbol]
    basic.o(.text.basic_test_complete_message_handler) refers to basic.o(.rodata.str1.1) for .L.str.7
    basic.o(.text.basic_test_complete_message_handler) refers to retarget_io.o(.text.__aeabi_assert) for __aeabi_assert
    basic.o(.text.basic_test_complete_message_handler) refers to basic.o(.bss.f_run_mode) for f_run_mode
    basic.o(.text.basic_test_complete_message_handler) refers to stdout.o(.data) for __stdout
    basic.o(.text.basic_test_complete_message_handler) refers to printfa.o(i.__0fprintf) for fprintf
    basic.o(.ARM.exidx.text.basic_test_complete_message_handler) refers to basic.o(.text.basic_test_complete_message_handler) for [Anonymous Symbol]
    basic.o(.text.basic_all_tests_complete_message_handler) refers to basic.o(.rodata.str1.1) for .L.str.20
    basic.o(.text.basic_all_tests_complete_message_handler) refers to printfa.o(i.__0printf) for printf
    basic.o(.text.basic_all_tests_complete_message_handler) refers to stdout.o(.data) for __stdout
    basic.o(.text.basic_all_tests_complete_message_handler) refers to testrun.o(.text.CU_print_run_results) for CU_print_run_results
    basic.o(.ARM.exidx.text.basic_all_tests_complete_message_handler) refers to basic.o(.text.basic_all_tests_complete_message_handler) for [Anonymous Symbol]
    basic.o(.text.basic_suite_init_failure_message_handler) refers to basic.o(.rodata.str1.1) for .L.str.7
    basic.o(.text.basic_suite_init_failure_message_handler) refers to retarget_io.o(.text.__aeabi_assert) for __aeabi_assert
    basic.o(.text.basic_suite_init_failure_message_handler) refers to basic.o(.bss.f_run_mode) for f_run_mode
    basic.o(.text.basic_suite_init_failure_message_handler) refers to stdout.o(.data) for __stdout
    basic.o(.text.basic_suite_init_failure_message_handler) refers to printfa.o(i.__0fprintf) for fprintf
    basic.o(.ARM.exidx.text.basic_suite_init_failure_message_handler) refers to basic.o(.text.basic_suite_init_failure_message_handler) for [Anonymous Symbol]
    basic.o(.text.basic_suite_cleanup_failure_message_handler) refers to basic.o(.rodata.str1.1) for .L.str.7
    basic.o(.text.basic_suite_cleanup_failure_message_handler) refers to retarget_io.o(.text.__aeabi_assert) for __aeabi_assert
    basic.o(.text.basic_suite_cleanup_failure_message_handler) refers to basic.o(.bss.f_run_mode) for f_run_mode
    basic.o(.text.basic_suite_cleanup_failure_message_handler) refers to stdout.o(.data) for __stdout
    basic.o(.text.basic_suite_cleanup_failure_message_handler) refers to printfa.o(i.__0fprintf) for fprintf
    basic.o(.ARM.exidx.text.basic_suite_cleanup_failure_message_handler) refers to basic.o(.text.basic_suite_cleanup_failure_message_handler) for [Anonymous Symbol]
    cuerror.o(.text.CU_set_error) refers to cuerror.o(.bss.g_error_action) for g_error_action
    cuerror.o(.text.CU_set_error) refers to cuerror.o(.text.get_error_desc) for get_error_desc
    cuerror.o(.text.CU_set_error) refers to stderr.o(.data) for __stderr
    cuerror.o(.text.CU_set_error) refers to cuerror.o(.rodata.str1.1) for .L.str
    cuerror.o(.text.CU_set_error) refers to printfa.o(i.__0fprintf) for fprintf
    cuerror.o(.text.CU_set_error) refers to main.o(.text.exit) for exit
    cuerror.o(.text.CU_set_error) refers to cuerror.o(.bss.g_error_number) for g_error_number
    cuerror.o(.ARM.exidx.text.CU_set_error) refers to cuerror.o(.text.CU_set_error) for [Anonymous Symbol]
    cuerror.o(.text.get_error_desc) refers to cuerror.o(.data.get_error_desc.ErrorDescription) for get_error_desc.ErrorDescription
    cuerror.o(.ARM.exidx.text.get_error_desc) refers to cuerror.o(.text.get_error_desc) for [Anonymous Symbol]
    cuerror.o(.text.CU_get_error) refers to cuerror.o(.bss.g_error_number) for g_error_number
    cuerror.o(.ARM.exidx.text.CU_get_error) refers to cuerror.o(.text.CU_get_error) for [Anonymous Symbol]
    cuerror.o(.text.CU_get_error_msg) refers to cuerror.o(.bss.g_error_number) for g_error_number
    cuerror.o(.text.CU_get_error_msg) refers to cuerror.o(.text.get_error_desc) for get_error_desc
    cuerror.o(.ARM.exidx.text.CU_get_error_msg) refers to cuerror.o(.text.CU_get_error_msg) for [Anonymous Symbol]
    cuerror.o(.text.CU_set_error_action) refers to cuerror.o(.bss.g_error_action) for g_error_action
    cuerror.o(.ARM.exidx.text.CU_set_error_action) refers to cuerror.o(.text.CU_set_error_action) for [Anonymous Symbol]
    cuerror.o(.text.CU_get_error_action) refers to cuerror.o(.bss.g_error_action) for g_error_action
    cuerror.o(.ARM.exidx.text.CU_get_error_action) refers to cuerror.o(.text.CU_get_error_action) for [Anonymous Symbol]
    cuerror.o(.data.get_error_desc.ErrorDescription) refers to cuerror.o(.rodata.str1.1) for [Anonymous Symbol]
    testdb.o(.text.CU_initialize_registry) refers to testrun.o(.text.CU_is_test_running) for CU_is_test_running
    testdb.o(.text.CU_initialize_registry) refers to testdb.o(.rodata.str1.1) for .L.str
    testdb.o(.text.CU_initialize_registry) refers to retarget_io.o(.text.__aeabi_assert) for __aeabi_assert
    testdb.o(.text.CU_initialize_registry) refers to cuerror.o(.text.CU_set_error) for CU_set_error
    testdb.o(.text.CU_initialize_registry) refers to testdb.o(.bss.f_pTestRegistry) for f_pTestRegistry
    testdb.o(.text.CU_initialize_registry) refers to testdb.o(.text.CU_cleanup_registry) for CU_cleanup_registry
    testdb.o(.text.CU_initialize_registry) refers to testdb.o(.text.CU_create_new_registry) for CU_create_new_registry
    testdb.o(.ARM.exidx.text.CU_initialize_registry) refers to testdb.o(.text.CU_initialize_registry) for [Anonymous Symbol]
    testdb.o(.text.CU_cleanup_registry) refers to testrun.o(.text.CU_is_test_running) for CU_is_test_running
    testdb.o(.text.CU_cleanup_registry) refers to testdb.o(.rodata.str1.1) for .L.str
    testdb.o(.text.CU_cleanup_registry) refers to retarget_io.o(.text.__aeabi_assert) for __aeabi_assert
    testdb.o(.text.CU_cleanup_registry) refers to cuerror.o(.text.CU_set_error) for CU_set_error
    testdb.o(.text.CU_cleanup_registry) refers to testdb.o(.bss.f_pTestRegistry) for f_pTestRegistry
    testdb.o(.text.CU_cleanup_registry) refers to testdb.o(.text.CU_destroy_existing_registry) for CU_destroy_existing_registry
    testdb.o(.text.CU_cleanup_registry) refers to testrun.o(.text.CU_clear_previous_results) for CU_clear_previous_results
    testdb.o(.ARM.exidx.text.CU_cleanup_registry) refers to testdb.o(.text.CU_cleanup_registry) for [Anonymous Symbol]
    testdb.o(.text.CU_create_new_registry) refers to malloca.o(i.__malloc$memalign) for malloc
    testdb.o(.ARM.exidx.text.CU_create_new_registry) refers to testdb.o(.text.CU_create_new_registry) for [Anonymous Symbol]
    testdb.o(.text.CU_registry_initialized) refers to testdb.o(.bss.f_pTestRegistry) for f_pTestRegistry
    testdb.o(.ARM.exidx.text.CU_registry_initialized) refers to testdb.o(.text.CU_registry_initialized) for [Anonymous Symbol]
    testdb.o(.text.CU_destroy_existing_registry) refers to testdb.o(.rodata.str1.1) for .L.str.2
    testdb.o(.text.CU_destroy_existing_registry) refers to retarget_io.o(.text.__aeabi_assert) for __aeabi_assert
    testdb.o(.text.CU_destroy_existing_registry) refers to testdb.o(.text.cleanup_test_registry) for cleanup_test_registry
    testdb.o(.text.CU_destroy_existing_registry) refers to malloca.o(i.__free$memalign) for free
    testdb.o(.ARM.exidx.text.CU_destroy_existing_registry) refers to testdb.o(.text.CU_destroy_existing_registry) for [Anonymous Symbol]
    testdb.o(.text.CU_get_registry) refers to testdb.o(.bss.f_pTestRegistry) for f_pTestRegistry
    testdb.o(.ARM.exidx.text.CU_get_registry) refers to testdb.o(.text.CU_get_registry) for [Anonymous Symbol]
    testdb.o(.text.CU_set_registry) refers to testdb.o(.bss.f_pTestRegistry) for f_pTestRegistry
    testdb.o(.text.CU_set_registry) refers to testrun.o(.text.CU_is_test_running) for CU_is_test_running
    testdb.o(.text.CU_set_registry) refers to testdb.o(.rodata.str1.1) for .L.str
    testdb.o(.text.CU_set_registry) refers to retarget_io.o(.text.__aeabi_assert) for __aeabi_assert
    testdb.o(.text.CU_set_registry) refers to cuerror.o(.text.CU_set_error) for CU_set_error
    testdb.o(.ARM.exidx.text.CU_set_registry) refers to testdb.o(.text.CU_set_registry) for [Anonymous Symbol]
    testdb.o(.text.CU_add_suite_with_setup_and_teardown) refers to testrun.o(.text.CU_is_test_running) for CU_is_test_running
    testdb.o(.text.CU_add_suite_with_setup_and_teardown) refers to testdb.o(.rodata.str1.1) for .L.str
    testdb.o(.text.CU_add_suite_with_setup_and_teardown) refers to retarget_io.o(.text.__aeabi_assert) for __aeabi_assert
    testdb.o(.text.CU_add_suite_with_setup_and_teardown) refers to testdb.o(.bss.f_pTestRegistry) for f_pTestRegistry
    testdb.o(.text.CU_add_suite_with_setup_and_teardown) refers to testdb.o(.text.create_suite) for create_suite
    testdb.o(.text.CU_add_suite_with_setup_and_teardown) refers to testdb.o(.text.suite_exists) for suite_exists
    testdb.o(.text.CU_add_suite_with_setup_and_teardown) refers to testdb.o(.text.insert_suite) for insert_suite
    testdb.o(.text.CU_add_suite_with_setup_and_teardown) refers to cuerror.o(.text.CU_set_error) for CU_set_error
    testdb.o(.ARM.exidx.text.CU_add_suite_with_setup_and_teardown) refers to testdb.o(.text.CU_add_suite_with_setup_and_teardown) for [Anonymous Symbol]
    testdb.o(.text.create_suite) refers to malloca.o(i.__malloc$memalign) for malloc
    testdb.o(.text.create_suite) refers to testdb.o(.rodata.str1.1) for .L.str.7
    testdb.o(.text.create_suite) refers to retarget_io.o(.text.__aeabi_assert) for __aeabi_assert
    testdb.o(.text.create_suite) refers to strlen.o(.text) for strlen
    testdb.o(.text.create_suite) refers to strcpy.o(.text) for strcpy
    testdb.o(.text.create_suite) refers to malloca.o(i.__free$memalign) for free
    testdb.o(.ARM.exidx.text.create_suite) refers to testdb.o(.text.create_suite) for [Anonymous Symbol]
    testdb.o(.text.suite_exists) refers to testdb.o(.rodata.str1.1) for .L.str.3
    testdb.o(.text.suite_exists) refers to retarget_io.o(.text.__aeabi_assert) for __aeabi_assert
    testdb.o(.text.suite_exists) refers to util.o(.text.CU_compare_strings) for CU_compare_strings
    testdb.o(.ARM.exidx.text.suite_exists) refers to testdb.o(.text.suite_exists) for [Anonymous Symbol]
    testdb.o(.text.insert_suite) refers to testdb.o(.rodata.str1.1) for .L.str.3
    testdb.o(.text.insert_suite) refers to retarget_io.o(.text.__aeabi_assert) for __aeabi_assert
    testdb.o(.ARM.exidx.text.insert_suite) refers to testdb.o(.text.insert_suite) for [Anonymous Symbol]
    testdb.o(.text.CU_add_suite) refers to testdb.o(.text.CU_add_suite_with_setup_and_teardown) for CU_add_suite_with_setup_and_teardown
    testdb.o(.ARM.exidx.text.CU_add_suite) refers to testdb.o(.text.CU_add_suite) for [Anonymous Symbol]
    testdb.o(.text.CU_set_suite_active) refers to cuerror.o(.text.CU_set_error) for CU_set_error
    testdb.o(.ARM.exidx.text.CU_set_suite_active) refers to testdb.o(.text.CU_set_suite_active) for [Anonymous Symbol]
    testdb.o(.text.CU_set_suite_name) refers to malloca.o(i.__free$memalign) for free
    testdb.o(.text.CU_set_suite_name) refers to strlen.o(.text) for strlen
    testdb.o(.text.CU_set_suite_name) refers to malloca.o(i.__malloc$memalign) for malloc
    testdb.o(.text.CU_set_suite_name) refers to strcpy.o(.text) for strcpy
    testdb.o(.text.CU_set_suite_name) refers to cuerror.o(.text.CU_set_error) for CU_set_error
    testdb.o(.ARM.exidx.text.CU_set_suite_name) refers to testdb.o(.text.CU_set_suite_name) for [Anonymous Symbol]
    testdb.o(.text.CU_set_suite_initfunc) refers to cuerror.o(.text.CU_set_error) for CU_set_error
    testdb.o(.ARM.exidx.text.CU_set_suite_initfunc) refers to testdb.o(.text.CU_set_suite_initfunc) for [Anonymous Symbol]
    testdb.o(.text.CU_set_suite_cleanupfunc) refers to cuerror.o(.text.CU_set_error) for CU_set_error
    testdb.o(.ARM.exidx.text.CU_set_suite_cleanupfunc) refers to testdb.o(.text.CU_set_suite_cleanupfunc) for [Anonymous Symbol]
    testdb.o(.text.CU_get_suite) refers to testdb.o(.bss.f_pTestRegistry) for f_pTestRegistry
    testdb.o(.text.CU_get_suite) refers to testdb.o(.text.CU_get_suite_by_name) for CU_get_suite_by_name
    testdb.o(.text.CU_get_suite) refers to cuerror.o(.text.CU_set_error) for CU_set_error
    testdb.o(.ARM.exidx.text.CU_get_suite) refers to testdb.o(.text.CU_get_suite) for [Anonymous Symbol]
    testdb.o(.text.CU_get_suite_by_name) refers to testdb.o(.rodata.str1.1) for .L.str.3
    testdb.o(.text.CU_get_suite_by_name) refers to retarget_io.o(.text.__aeabi_assert) for __aeabi_assert
    testdb.o(.text.CU_get_suite_by_name) refers to util.o(.text.CU_compare_strings) for CU_compare_strings
    testdb.o(.ARM.exidx.text.CU_get_suite_by_name) refers to testdb.o(.text.CU_get_suite_by_name) for [Anonymous Symbol]
    testdb.o(.text.CU_get_suite_at_pos) refers to testdb.o(.bss.f_pTestRegistry) for f_pTestRegistry
    testdb.o(.text.CU_get_suite_at_pos) refers to testdb.o(.text.CU_get_suite_by_index) for CU_get_suite_by_index
    testdb.o(.text.CU_get_suite_at_pos) refers to cuerror.o(.text.CU_set_error) for CU_set_error
    testdb.o(.ARM.exidx.text.CU_get_suite_at_pos) refers to testdb.o(.text.CU_get_suite_at_pos) for [Anonymous Symbol]
    testdb.o(.text.CU_get_suite_by_index) refers to testdb.o(.rodata.str1.1) for .L.str.3
    testdb.o(.text.CU_get_suite_by_index) refers to retarget_io.o(.text.__aeabi_assert) for __aeabi_assert
    testdb.o(.text.CU_get_suite_by_index) refers to testdb.o(.bss.f_pTestRegistry) for f_pTestRegistry
    testdb.o(.ARM.exidx.text.CU_get_suite_by_index) refers to testdb.o(.text.CU_get_suite_by_index) for [Anonymous Symbol]
    testdb.o(.text.CU_get_suite_pos) refers to testdb.o(.bss.f_pTestRegistry) for f_pTestRegistry
    testdb.o(.text.CU_get_suite_pos) refers to cuerror.o(.text.CU_set_error) for CU_set_error
    testdb.o(.ARM.exidx.text.CU_get_suite_pos) refers to testdb.o(.text.CU_get_suite_pos) for [Anonymous Symbol]
    testdb.o(.text.CU_get_suite_pos_by_name) refers to testdb.o(.bss.f_pTestRegistry) for f_pTestRegistry
    testdb.o(.text.CU_get_suite_pos_by_name) refers to strcmp.o(.text) for strcmp
    testdb.o(.text.CU_get_suite_pos_by_name) refers to cuerror.o(.text.CU_set_error) for CU_set_error
    testdb.o(.ARM.exidx.text.CU_get_suite_pos_by_name) refers to testdb.o(.text.CU_get_suite_pos_by_name) for [Anonymous Symbol]
    testdb.o(.text.CU_add_test) refers to testrun.o(.text.CU_is_test_running) for CU_is_test_running
    testdb.o(.text.CU_add_test) refers to testdb.o(.rodata.str1.1) for .L.str
    testdb.o(.text.CU_add_test) refers to retarget_io.o(.text.__aeabi_assert) for __aeabi_assert
    testdb.o(.text.CU_add_test) refers to testdb.o(.bss.f_pTestRegistry) for f_pTestRegistry
    testdb.o(.text.CU_add_test) refers to testdb.o(.text.create_test) for create_test
    testdb.o(.text.CU_add_test) refers to testdb.o(.text.test_exists) for test_exists
    testdb.o(.text.CU_add_test) refers to testdb.o(.text.insert_test) for insert_test
    testdb.o(.text.CU_add_test) refers to cuerror.o(.text.CU_set_error) for CU_set_error
    testdb.o(.ARM.exidx.text.CU_add_test) refers to testdb.o(.text.CU_add_test) for [Anonymous Symbol]
    testdb.o(.text.create_test) refers to malloca.o(i.__malloc$memalign) for malloc
    testdb.o(.text.create_test) refers to testdb.o(.rodata.str1.1) for .L.str.7
    testdb.o(.text.create_test) refers to retarget_io.o(.text.__aeabi_assert) for __aeabi_assert
    testdb.o(.text.create_test) refers to strlen.o(.text) for strlen
    testdb.o(.text.create_test) refers to strcpy.o(.text) for strcpy
    testdb.o(.text.create_test) refers to malloca.o(i.__free$memalign) for free
    testdb.o(.ARM.exidx.text.create_test) refers to testdb.o(.text.create_test) for [Anonymous Symbol]
    testdb.o(.text.test_exists) refers to testdb.o(.rodata.str1.1) for .L.str.5
    testdb.o(.text.test_exists) refers to retarget_io.o(.text.__aeabi_assert) for __aeabi_assert
    testdb.o(.text.test_exists) refers to util.o(.text.CU_compare_strings) for CU_compare_strings
    testdb.o(.ARM.exidx.text.test_exists) refers to testdb.o(.text.test_exists) for [Anonymous Symbol]
    testdb.o(.text.insert_test) refers to testdb.o(.rodata.str1.1) for .L.str.5
    testdb.o(.text.insert_test) refers to retarget_io.o(.text.__aeabi_assert) for __aeabi_assert
    testdb.o(.ARM.exidx.text.insert_test) refers to testdb.o(.text.insert_test) for [Anonymous Symbol]
    testdb.o(.text.CU_set_test_active) refers to cuerror.o(.text.CU_set_error) for CU_set_error
    testdb.o(.ARM.exidx.text.CU_set_test_active) refers to testdb.o(.text.CU_set_test_active) for [Anonymous Symbol]
    testdb.o(.text.CU_set_test_name) refers to malloca.o(i.__free$memalign) for free
    testdb.o(.text.CU_set_test_name) refers to strlen.o(.text) for strlen
    testdb.o(.text.CU_set_test_name) refers to malloca.o(i.__malloc$memalign) for malloc
    testdb.o(.text.CU_set_test_name) refers to strcpy.o(.text) for strcpy
    testdb.o(.text.CU_set_test_name) refers to cuerror.o(.text.CU_set_error) for CU_set_error
    testdb.o(.ARM.exidx.text.CU_set_test_name) refers to testdb.o(.text.CU_set_test_name) for [Anonymous Symbol]
    testdb.o(.text.CU_set_test_func) refers to cuerror.o(.text.CU_set_error) for CU_set_error
    testdb.o(.ARM.exidx.text.CU_set_test_func) refers to testdb.o(.text.CU_set_test_func) for [Anonymous Symbol]
    testdb.o(.text.CU_get_test) refers to testdb.o(.bss.f_pTestRegistry) for f_pTestRegistry
    testdb.o(.text.CU_get_test) refers to testdb.o(.text.CU_get_test_by_name) for CU_get_test_by_name
    testdb.o(.text.CU_get_test) refers to cuerror.o(.text.CU_set_error) for CU_set_error
    testdb.o(.ARM.exidx.text.CU_get_test) refers to testdb.o(.text.CU_get_test) for [Anonymous Symbol]
    testdb.o(.text.CU_get_test_by_name) refers to testdb.o(.rodata.str1.1) for .L.str.5
    testdb.o(.text.CU_get_test_by_name) refers to retarget_io.o(.text.__aeabi_assert) for __aeabi_assert
    testdb.o(.text.CU_get_test_by_name) refers to util.o(.text.CU_compare_strings) for CU_compare_strings
    testdb.o(.ARM.exidx.text.CU_get_test_by_name) refers to testdb.o(.text.CU_get_test_by_name) for [Anonymous Symbol]
    testdb.o(.text.CU_get_test_at_pos) refers to testdb.o(.bss.f_pTestRegistry) for f_pTestRegistry
    testdb.o(.text.CU_get_test_at_pos) refers to testdb.o(.text.CU_get_test_by_index) for CU_get_test_by_index
    testdb.o(.text.CU_get_test_at_pos) refers to cuerror.o(.text.CU_set_error) for CU_set_error
    testdb.o(.ARM.exidx.text.CU_get_test_at_pos) refers to testdb.o(.text.CU_get_test_at_pos) for [Anonymous Symbol]
    testdb.o(.text.CU_get_test_by_index) refers to testdb.o(.rodata.str1.1) for .L.str.5
    testdb.o(.text.CU_get_test_by_index) refers to retarget_io.o(.text.__aeabi_assert) for __aeabi_assert
    testdb.o(.ARM.exidx.text.CU_get_test_by_index) refers to testdb.o(.text.CU_get_test_by_index) for [Anonymous Symbol]
    testdb.o(.text.CU_get_test_pos) refers to testdb.o(.bss.f_pTestRegistry) for f_pTestRegistry
    testdb.o(.text.CU_get_test_pos) refers to cuerror.o(.text.CU_set_error) for CU_set_error
    testdb.o(.ARM.exidx.text.CU_get_test_pos) refers to testdb.o(.text.CU_get_test_pos) for [Anonymous Symbol]
    testdb.o(.text.CU_get_test_pos_by_name) refers to testdb.o(.bss.f_pTestRegistry) for f_pTestRegistry
    testdb.o(.text.CU_get_test_pos_by_name) refers to strcmp.o(.text) for strcmp
    testdb.o(.text.CU_get_test_pos_by_name) refers to cuerror.o(.text.CU_set_error) for CU_set_error
    testdb.o(.ARM.exidx.text.CU_get_test_pos_by_name) refers to testdb.o(.text.CU_get_test_pos_by_name) for [Anonymous Symbol]
    testdb.o(.text.CU_register_nsuites) refers to testdb.o(.text.CU_add_suite_with_setup_and_teardown) for CU_add_suite_with_setup_and_teardown
    testdb.o(.text.CU_register_nsuites) refers to testdb.o(.text.CU_add_test) for CU_add_test
    testdb.o(.text.CU_register_nsuites) refers to cuerror.o(.text.CU_get_error) for CU_get_error
    testdb.o(.ARM.exidx.text.CU_register_nsuites) refers to testdb.o(.text.CU_register_nsuites) for [Anonymous Symbol]
    testdb.o(.text.CU_register_suites) refers to testdb.o(.text.CU_register_nsuites) for CU_register_nsuites
    testdb.o(.ARM.exidx.text.CU_register_suites) refers to testdb.o(.text.CU_register_suites) for [Anonymous Symbol]
    testdb.o(.text.cleanup_test_registry) refers to testdb.o(.rodata.str1.1) for .L.str.3
    testdb.o(.text.cleanup_test_registry) refers to retarget_io.o(.text.__aeabi_assert) for __aeabi_assert
    testdb.o(.text.cleanup_test_registry) refers to testdb.o(.text.cleanup_suite) for cleanup_suite
    testdb.o(.text.cleanup_test_registry) refers to malloca.o(i.__free$memalign) for free
    testdb.o(.ARM.exidx.text.cleanup_test_registry) refers to testdb.o(.text.cleanup_test_registry) for [Anonymous Symbol]
    testdb.o(.text.cleanup_suite) refers to testdb.o(.rodata.str1.1) for .L.str.5
    testdb.o(.text.cleanup_suite) refers to retarget_io.o(.text.__aeabi_assert) for __aeabi_assert
    testdb.o(.text.cleanup_suite) refers to testdb.o(.text.cleanup_test) for cleanup_test
    testdb.o(.text.cleanup_suite) refers to malloca.o(i.__free$memalign) for free
    testdb.o(.ARM.exidx.text.cleanup_suite) refers to testdb.o(.text.cleanup_suite) for [Anonymous Symbol]
    testdb.o(.text.cleanup_test) refers to testdb.o(.rodata.str1.1) for .L.str.9
    testdb.o(.text.cleanup_test) refers to retarget_io.o(.text.__aeabi_assert) for __aeabi_assert
    testdb.o(.text.cleanup_test) refers to malloca.o(i.__free$memalign) for free
    testdb.o(.ARM.exidx.text.cleanup_test) refers to testdb.o(.text.cleanup_test) for [Anonymous Symbol]
    testrun.o(.text.CU_assertImplementation) refers to testrun.o(.bss.f_pCurSuite) for f_pCurSuite
    testrun.o(.text.CU_assertImplementation) refers to testrun.o(.rodata.str1.1) for .L.str
    testrun.o(.text.CU_assertImplementation) refers to retarget_io.o(.text.__aeabi_assert) for __aeabi_assert
    testrun.o(.text.CU_assertImplementation) refers to testrun.o(.bss.f_pCurTest) for f_pCurTest
    testrun.o(.text.CU_assertImplementation) refers to testrun.o(.bss.f_run_summary) for f_run_summary
    testrun.o(.text.CU_assertImplementation) refers to testrun.o(.bss.f_failure_list) for f_failure_list
    testrun.o(.text.CU_assertImplementation) refers to testrun.o(.text.add_failure) for add_failure
    testrun.o(.text.CU_assertImplementation) refers to setjmp.o(.text) for longjmp
    testrun.o(.ARM.exidx.text.CU_assertImplementation) refers to testrun.o(.text.CU_assertImplementation) for [Anonymous Symbol]
    testrun.o(.text.add_failure) refers to testrun.o(.rodata.str1.1) for .L.str.27
    testrun.o(.text.add_failure) refers to retarget_io.o(.text.__aeabi_assert) for __aeabi_assert
    testrun.o(.text.add_failure) refers to malloca.o(i.__malloc$memalign) for malloc
    testrun.o(.text.add_failure) refers to strlen.o(.text) for strlen
    testrun.o(.text.add_failure) refers to malloca.o(i.__free$memalign) for free
    testrun.o(.text.add_failure) refers to strcpy.o(.text) for strcpy
    testrun.o(.text.add_failure) refers to testrun.o(.bss.f_last_failure) for f_last_failure
    testrun.o(.ARM.exidx.text.add_failure) refers to testrun.o(.text.add_failure) for [Anonymous Symbol]
    testrun.o(.text.CU_set_suite_start_handler) refers to testrun.o(.bss.f_pSuiteStartMessageHandler) for f_pSuiteStartMessageHandler
    testrun.o(.ARM.exidx.text.CU_set_suite_start_handler) refers to testrun.o(.text.CU_set_suite_start_handler) for [Anonymous Symbol]
    testrun.o(.text.CU_set_test_start_handler) refers to testrun.o(.bss.f_pTestStartMessageHandler) for f_pTestStartMessageHandler
    testrun.o(.ARM.exidx.text.CU_set_test_start_handler) refers to testrun.o(.text.CU_set_test_start_handler) for [Anonymous Symbol]
    testrun.o(.text.CU_set_test_complete_handler) refers to testrun.o(.bss.f_pTestCompleteMessageHandler) for f_pTestCompleteMessageHandler
    testrun.o(.ARM.exidx.text.CU_set_test_complete_handler) refers to testrun.o(.text.CU_set_test_complete_handler) for [Anonymous Symbol]
    testrun.o(.text.CU_set_suite_complete_handler) refers to testrun.o(.bss.f_pSuiteCompleteMessageHandler) for f_pSuiteCompleteMessageHandler
    testrun.o(.ARM.exidx.text.CU_set_suite_complete_handler) refers to testrun.o(.text.CU_set_suite_complete_handler) for [Anonymous Symbol]
    testrun.o(.text.CU_set_all_test_complete_handler) refers to testrun.o(.bss.f_pAllTestsCompleteMessageHandler) for f_pAllTestsCompleteMessageHandler
    testrun.o(.ARM.exidx.text.CU_set_all_test_complete_handler) refers to testrun.o(.text.CU_set_all_test_complete_handler) for [Anonymous Symbol]
    testrun.o(.text.CU_set_suite_init_failure_handler) refers to testrun.o(.bss.f_pSuiteInitFailureMessageHandler) for f_pSuiteInitFailureMessageHandler
    testrun.o(.ARM.exidx.text.CU_set_suite_init_failure_handler) refers to testrun.o(.text.CU_set_suite_init_failure_handler) for [Anonymous Symbol]
    testrun.o(.text.CU_set_suite_cleanup_failure_handler) refers to testrun.o(.bss.f_pSuiteCleanupFailureMessageHandler) for f_pSuiteCleanupFailureMessageHandler
    testrun.o(.ARM.exidx.text.CU_set_suite_cleanup_failure_handler) refers to testrun.o(.text.CU_set_suite_cleanup_failure_handler) for [Anonymous Symbol]
    testrun.o(.text.CU_get_suite_start_handler) refers to testrun.o(.bss.f_pSuiteStartMessageHandler) for f_pSuiteStartMessageHandler
    testrun.o(.ARM.exidx.text.CU_get_suite_start_handler) refers to testrun.o(.text.CU_get_suite_start_handler) for [Anonymous Symbol]
    testrun.o(.text.CU_get_test_start_handler) refers to testrun.o(.bss.f_pTestStartMessageHandler) for f_pTestStartMessageHandler
    testrun.o(.ARM.exidx.text.CU_get_test_start_handler) refers to testrun.o(.text.CU_get_test_start_handler) for [Anonymous Symbol]
    testrun.o(.text.CU_get_test_complete_handler) refers to testrun.o(.bss.f_pTestCompleteMessageHandler) for f_pTestCompleteMessageHandler
    testrun.o(.ARM.exidx.text.CU_get_test_complete_handler) refers to testrun.o(.text.CU_get_test_complete_handler) for [Anonymous Symbol]
    testrun.o(.text.CU_get_suite_complete_handler) refers to testrun.o(.bss.f_pSuiteCompleteMessageHandler) for f_pSuiteCompleteMessageHandler
    testrun.o(.ARM.exidx.text.CU_get_suite_complete_handler) refers to testrun.o(.text.CU_get_suite_complete_handler) for [Anonymous Symbol]
    testrun.o(.text.CU_get_all_test_complete_handler) refers to testrun.o(.bss.f_pAllTestsCompleteMessageHandler) for f_pAllTestsCompleteMessageHandler
    testrun.o(.ARM.exidx.text.CU_get_all_test_complete_handler) refers to testrun.o(.text.CU_get_all_test_complete_handler) for [Anonymous Symbol]
    testrun.o(.text.CU_get_suite_init_failure_handler) refers to testrun.o(.bss.f_pSuiteInitFailureMessageHandler) for f_pSuiteInitFailureMessageHandler
    testrun.o(.ARM.exidx.text.CU_get_suite_init_failure_handler) refers to testrun.o(.text.CU_get_suite_init_failure_handler) for [Anonymous Symbol]
    testrun.o(.text.CU_get_suite_cleanup_failure_handler) refers to testrun.o(.bss.f_pSuiteCleanupFailureMessageHandler) for f_pSuiteCleanupFailureMessageHandler
    testrun.o(.ARM.exidx.text.CU_get_suite_cleanup_failure_handler) refers to testrun.o(.text.CU_get_suite_cleanup_failure_handler) for [Anonymous Symbol]
    testrun.o(.text.CU_get_number_of_suites_run) refers to testrun.o(.bss.f_run_summary) for f_run_summary
    testrun.o(.ARM.exidx.text.CU_get_number_of_suites_run) refers to testrun.o(.text.CU_get_number_of_suites_run) for [Anonymous Symbol]
    testrun.o(.text.CU_get_number_of_suites_failed) refers to testrun.o(.bss.f_run_summary) for f_run_summary
    testrun.o(.ARM.exidx.text.CU_get_number_of_suites_failed) refers to testrun.o(.text.CU_get_number_of_suites_failed) for [Anonymous Symbol]
    testrun.o(.text.CU_get_number_of_suites_inactive) refers to testrun.o(.bss.f_run_summary) for f_run_summary
    testrun.o(.ARM.exidx.text.CU_get_number_of_suites_inactive) refers to testrun.o(.text.CU_get_number_of_suites_inactive) for [Anonymous Symbol]
    testrun.o(.text.CU_get_number_of_tests_run) refers to testrun.o(.bss.f_run_summary) for f_run_summary
    testrun.o(.ARM.exidx.text.CU_get_number_of_tests_run) refers to testrun.o(.text.CU_get_number_of_tests_run) for [Anonymous Symbol]
    testrun.o(.text.CU_get_number_of_tests_failed) refers to testrun.o(.bss.f_run_summary) for f_run_summary
    testrun.o(.ARM.exidx.text.CU_get_number_of_tests_failed) refers to testrun.o(.text.CU_get_number_of_tests_failed) for [Anonymous Symbol]
    testrun.o(.text.CU_get_number_of_tests_inactive) refers to testrun.o(.bss.f_run_summary) for f_run_summary
    testrun.o(.ARM.exidx.text.CU_get_number_of_tests_inactive) refers to testrun.o(.text.CU_get_number_of_tests_inactive) for [Anonymous Symbol]
    testrun.o(.text.CU_get_number_of_asserts) refers to testrun.o(.bss.f_run_summary) for f_run_summary
    testrun.o(.ARM.exidx.text.CU_get_number_of_asserts) refers to testrun.o(.text.CU_get_number_of_asserts) for [Anonymous Symbol]
    testrun.o(.text.CU_get_number_of_successes) refers to testrun.o(.bss.f_run_summary) for f_run_summary
    testrun.o(.ARM.exidx.text.CU_get_number_of_successes) refers to testrun.o(.text.CU_get_number_of_successes) for [Anonymous Symbol]
    testrun.o(.text.CU_get_number_of_failures) refers to testrun.o(.bss.f_run_summary) for f_run_summary
    testrun.o(.ARM.exidx.text.CU_get_number_of_failures) refers to testrun.o(.text.CU_get_number_of_failures) for [Anonymous Symbol]
    testrun.o(.text.CU_get_number_of_failure_records) refers to testrun.o(.bss.f_run_summary) for f_run_summary
    testrun.o(.ARM.exidx.text.CU_get_number_of_failure_records) refers to testrun.o(.text.CU_get_number_of_failure_records) for [Anonymous Symbol]
    testrun.o(.text.CU_get_elapsed_time) refers to testrun.o(.bss.f_bTestIsRunning) for f_bTestIsRunning
    testrun.o(.text.CU_get_elapsed_time) refers to dfltui.o(.text) for __aeabi_ui2d
    testrun.o(.text.CU_get_elapsed_time) refers to testrun.o(.bss.f_start_time) for f_start_time
    testrun.o(.text.CU_get_elapsed_time) refers to dadd.o(.text) for __aeabi_dsub
    testrun.o(.text.CU_get_elapsed_time) refers to ddiv.o(.text) for __aeabi_ddiv
    testrun.o(.text.CU_get_elapsed_time) refers to testrun.o(.bss.f_run_summary) for f_run_summary
    testrun.o(.ARM.exidx.text.CU_get_elapsed_time) refers to testrun.o(.text.CU_get_elapsed_time) for [Anonymous Symbol]
    testrun.o(.text.CU_get_failure_list) refers to testrun.o(.bss.f_failure_list) for f_failure_list
    testrun.o(.ARM.exidx.text.CU_get_failure_list) refers to testrun.o(.text.CU_get_failure_list) for [Anonymous Symbol]
    testrun.o(.text.CU_get_run_summary) refers to testrun.o(.bss.f_run_summary) for f_run_summary
    testrun.o(.ARM.exidx.text.CU_get_run_summary) refers to testrun.o(.text.CU_get_run_summary) for [Anonymous Symbol]
    testrun.o(.text.CU_run_all_tests) refers to testdb.o(.text.CU_get_registry) for CU_get_registry
    testrun.o(.text.CU_run_all_tests) refers to testrun.o(.bss.f_run_summary) for f_run_summary
    testrun.o(.text.CU_run_all_tests) refers to testrun.o(.bss.f_failure_list) for f_failure_list
    testrun.o(.text.CU_run_all_tests) refers to testrun.o(.text.clear_previous_results) for clear_previous_results
    testrun.o(.text.CU_run_all_tests) refers to testrun.o(.bss.f_bTestIsRunning) for f_bTestIsRunning
    testrun.o(.text.CU_run_all_tests) refers to testrun.o(.bss.f_start_time) for f_start_time
    testrun.o(.text.CU_run_all_tests) refers to cuerror.o(.text.CU_get_error_action) for CU_get_error_action
    testrun.o(.text.CU_run_all_tests) refers to testrun.o(.text.run_single_suite) for run_single_suite
    testrun.o(.text.CU_run_all_tests) refers to dfltui.o(.text) for __aeabi_ui2d
    testrun.o(.text.CU_run_all_tests) refers to dadd.o(.text) for __aeabi_dsub
    testrun.o(.text.CU_run_all_tests) refers to ddiv.o(.text) for __aeabi_ddiv
    testrun.o(.text.CU_run_all_tests) refers to testrun.o(.bss.f_pAllTestsCompleteMessageHandler) for f_pAllTestsCompleteMessageHandler
    testrun.o(.text.CU_run_all_tests) refers to cuerror.o(.text.CU_set_error) for CU_set_error
    testrun.o(.ARM.exidx.text.CU_run_all_tests) refers to testrun.o(.text.CU_run_all_tests) for [Anonymous Symbol]
    testrun.o(.text.clear_previous_results) refers to testrun.o(.rodata.str1.1) for .L.str.10
    testrun.o(.text.clear_previous_results) refers to retarget_io.o(.text.__aeabi_assert) for __aeabi_assert
    testrun.o(.text.clear_previous_results) refers to testrun.o(.text.cleanup_failure_list) for cleanup_failure_list
    testrun.o(.text.clear_previous_results) refers to testrun.o(.bss.f_last_failure) for f_last_failure
    testrun.o(.ARM.exidx.text.clear_previous_results) refers to testrun.o(.text.clear_previous_results) for [Anonymous Symbol]
    testrun.o(.text.run_single_suite) refers to testrun.o(.bss.f_last_failure) for f_last_failure
    testrun.o(.text.run_single_suite) refers to testrun.o(.rodata.str1.1) for .L.str.28
    testrun.o(.text.run_single_suite) refers to retarget_io.o(.text.__aeabi_assert) for __aeabi_assert
    testrun.o(.text.run_single_suite) refers to testrun.o(.bss.f_pCurTest) for f_pCurTest
    testrun.o(.text.run_single_suite) refers to testrun.o(.bss.f_pCurSuite) for f_pCurSuite
    testrun.o(.text.run_single_suite) refers to testrun.o(.bss.f_pSuiteStartMessageHandler) for f_pSuiteStartMessageHandler
    testrun.o(.text.run_single_suite) refers to testrun.o(.bss.f_pSuiteInitFailureMessageHandler) for f_pSuiteInitFailureMessageHandler
    testrun.o(.text.run_single_suite) refers to testrun.o(.bss.f_failure_list) for f_failure_list
    testrun.o(.text.run_single_suite) refers to testrun.o(.bss.f_run_summary) for f_run_summary
    testrun.o(.text.run_single_suite) refers to testrun.o(.text.add_failure) for add_failure
    testrun.o(.text.run_single_suite) refers to cuerror.o(.text.CU_get_error_action) for CU_get_error_action
    testrun.o(.text.run_single_suite) refers to testrun.o(.text.run_single_test) for run_single_test
    testrun.o(.text.run_single_suite) refers to testrun.o(.data.f_failure_on_inactive) for f_failure_on_inactive
    testrun.o(.text.run_single_suite) refers to testrun.o(.bss.f_pSuiteCleanupFailureMessageHandler) for f_pSuiteCleanupFailureMessageHandler
    testrun.o(.text.run_single_suite) refers to testrun.o(.bss.f_pSuiteCompleteMessageHandler) for f_pSuiteCompleteMessageHandler
    testrun.o(.ARM.exidx.text.run_single_suite) refers to testrun.o(.text.run_single_suite) for [Anonymous Symbol]
    testrun.o(.text.CU_run_suite) refers to testrun.o(.bss.f_run_summary) for f_run_summary
    testrun.o(.text.CU_run_suite) refers to testrun.o(.bss.f_failure_list) for f_failure_list
    testrun.o(.text.CU_run_suite) refers to testrun.o(.text.clear_previous_results) for clear_previous_results
    testrun.o(.text.CU_run_suite) refers to testrun.o(.bss.f_bTestIsRunning) for f_bTestIsRunning
    testrun.o(.text.CU_run_suite) refers to testrun.o(.bss.f_start_time) for f_start_time
    testrun.o(.text.CU_run_suite) refers to testrun.o(.text.run_single_suite) for run_single_suite
    testrun.o(.text.CU_run_suite) refers to dfltui.o(.text) for __aeabi_ui2d
    testrun.o(.text.CU_run_suite) refers to dadd.o(.text) for __aeabi_dsub
    testrun.o(.text.CU_run_suite) refers to ddiv.o(.text) for __aeabi_ddiv
    testrun.o(.text.CU_run_suite) refers to testrun.o(.bss.f_pAllTestsCompleteMessageHandler) for f_pAllTestsCompleteMessageHandler
    testrun.o(.text.CU_run_suite) refers to cuerror.o(.text.CU_set_error) for CU_set_error
    testrun.o(.ARM.exidx.text.CU_run_suite) refers to testrun.o(.text.CU_run_suite) for [Anonymous Symbol]
    testrun.o(.text.CU_run_test) refers to testrun.o(.bss.f_run_summary) for f_run_summary
    testrun.o(.text.CU_run_test) refers to testrun.o(.bss.f_failure_list) for f_failure_list
    testrun.o(.text.CU_run_test) refers to testrun.o(.text.clear_previous_results) for clear_previous_results
    testrun.o(.text.CU_run_test) refers to testrun.o(.data.f_failure_on_inactive) for f_failure_on_inactive
    testrun.o(.text.CU_run_test) refers to testrun.o(.rodata.str1.1) for .L.str.4
    testrun.o(.text.CU_run_test) refers to testrun.o(.text.add_failure) for add_failure
    testrun.o(.text.CU_run_test) refers to testdb.o(.text.CU_get_test_by_name) for CU_get_test_by_name
    testrun.o(.text.CU_run_test) refers to testrun.o(.bss.f_bTestIsRunning) for f_bTestIsRunning
    testrun.o(.text.CU_run_test) refers to testrun.o(.bss.f_start_time) for f_start_time
    testrun.o(.text.CU_run_test) refers to testrun.o(.bss.f_pCurTest) for f_pCurTest
    testrun.o(.text.CU_run_test) refers to testrun.o(.bss.f_pCurSuite) for f_pCurSuite
    testrun.o(.text.CU_run_test) refers to testrun.o(.bss.f_pSuiteStartMessageHandler) for f_pSuiteStartMessageHandler
    testrun.o(.text.CU_run_test) refers to testrun.o(.bss.f_pSuiteInitFailureMessageHandler) for f_pSuiteInitFailureMessageHandler
    testrun.o(.text.CU_run_test) refers to testrun.o(.text.run_single_test) for run_single_test
    testrun.o(.text.CU_run_test) refers to testrun.o(.bss.f_pSuiteCleanupFailureMessageHandler) for f_pSuiteCleanupFailureMessageHandler
    testrun.o(.text.CU_run_test) refers to testrun.o(.bss.f_pSuiteCompleteMessageHandler) for f_pSuiteCompleteMessageHandler
    testrun.o(.text.CU_run_test) refers to dfltui.o(.text) for __aeabi_ui2d
    testrun.o(.text.CU_run_test) refers to dadd.o(.text) for __aeabi_dsub
    testrun.o(.text.CU_run_test) refers to ddiv.o(.text) for __aeabi_ddiv
    testrun.o(.text.CU_run_test) refers to testrun.o(.bss.f_pAllTestsCompleteMessageHandler) for f_pAllTestsCompleteMessageHandler
    testrun.o(.text.CU_run_test) refers to cuerror.o(.text.CU_set_error) for CU_set_error
    testrun.o(.ARM.exidx.text.CU_run_test) refers to testrun.o(.text.CU_run_test) for [Anonymous Symbol]
    testrun.o(.text.run_single_test) refers to testrun.o(.bss.f_last_failure) for f_last_failure
    testrun.o(.text.run_single_test) refers to testrun.o(.bss.f_pCurSuite) for f_pCurSuite
    testrun.o(.text.run_single_test) refers to testrun.o(.rodata.str1.1) for .L.str
    testrun.o(.text.run_single_test) refers to retarget_io.o(.text.__aeabi_assert) for __aeabi_assert
    testrun.o(.text.run_single_test) refers to testrun.o(.bss.f_pCurTest) for f_pCurTest
    testrun.o(.text.run_single_test) refers to testrun.o(.bss.f_pTestStartMessageHandler) for f_pTestStartMessageHandler
    testrun.o(.text.run_single_test) refers to setjmp.o(.text) for setjmp
    testrun.o(.text.run_single_test) refers to testrun.o(.bss.f_run_summary) for f_run_summary
    testrun.o(.text.run_single_test) refers to testrun.o(.data.f_failure_on_inactive) for f_failure_on_inactive
    testrun.o(.text.run_single_test) refers to testrun.o(.bss.f_failure_list) for f_failure_list
    testrun.o(.text.run_single_test) refers to testrun.o(.text.add_failure) for add_failure
    testrun.o(.text.run_single_test) refers to testrun.o(.bss.f_pTestCompleteMessageHandler) for f_pTestCompleteMessageHandler
    testrun.o(.ARM.exidx.text.run_single_test) refers to testrun.o(.text.run_single_test) for [Anonymous Symbol]
    testrun.o(.text.CU_clear_previous_results) refers to testrun.o(.bss.f_run_summary) for f_run_summary
    testrun.o(.text.CU_clear_previous_results) refers to testrun.o(.bss.f_failure_list) for f_failure_list
    testrun.o(.text.CU_clear_previous_results) refers to testrun.o(.text.clear_previous_results) for clear_previous_results
    testrun.o(.ARM.exidx.text.CU_clear_previous_results) refers to testrun.o(.text.CU_clear_previous_results) for [Anonymous Symbol]
    testrun.o(.text.CU_get_current_suite) refers to testrun.o(.bss.f_pCurSuite) for f_pCurSuite
    testrun.o(.ARM.exidx.text.CU_get_current_suite) refers to testrun.o(.text.CU_get_current_suite) for [Anonymous Symbol]
    testrun.o(.text.CU_get_current_test) refers to testrun.o(.bss.f_pCurTest) for f_pCurTest
    testrun.o(.ARM.exidx.text.CU_get_current_test) refers to testrun.o(.text.CU_get_current_test) for [Anonymous Symbol]
    testrun.o(.text.CU_is_test_running) refers to testrun.o(.bss.f_bTestIsRunning) for f_bTestIsRunning
    testrun.o(.ARM.exidx.text.CU_is_test_running) refers to testrun.o(.text.CU_is_test_running) for [Anonymous Symbol]
    testrun.o(.text.CU_set_fail_on_inactive) refers to testrun.o(.data.f_failure_on_inactive) for f_failure_on_inactive
    testrun.o(.ARM.exidx.text.CU_set_fail_on_inactive) refers to testrun.o(.text.CU_set_fail_on_inactive) for [Anonymous Symbol]
    testrun.o(.text.CU_get_fail_on_inactive) refers to testrun.o(.data.f_failure_on_inactive) for f_failure_on_inactive
    testrun.o(.ARM.exidx.text.CU_get_fail_on_inactive) refers to testrun.o(.text.CU_get_fail_on_inactive) for [Anonymous Symbol]
    testrun.o(.text.CU_print_run_results) refers to testrun.o(.rodata.str1.1) for .L.str.7
    testrun.o(.text.CU_print_run_results) refers to retarget_io.o(.text.__aeabi_assert) for __aeabi_assert
    testrun.o(.text.CU_print_run_results) refers to testrun.o(.text.CU_get_run_results_string) for CU_get_run_results_string
    testrun.o(.text.CU_print_run_results) refers to printfa.o(i.__0fprintf) for fprintf
    testrun.o(.text.CU_print_run_results) refers to malloca.o(i.__free$memalign) for free
    testrun.o(.ARM.exidx.text.CU_print_run_results) refers to testrun.o(.text.CU_print_run_results) for [Anonymous Symbol]
    testrun.o(.text.CU_get_run_results_string) refers to testrun.o(.bss.f_run_summary) for f_run_summary
    testrun.o(.text.CU_get_run_results_string) refers to testdb.o(.text.CU_get_registry) for CU_get_registry
    testrun.o(.text.CU_get_run_results_string) refers to testrun.o(.rodata.str1.1) for .L.str.10
    testrun.o(.text.CU_get_run_results_string) refers to retarget_io.o(.text.__aeabi_assert) for __aeabi_assert
    testrun.o(.text.CU_get_run_results_string) refers to util.o(.text.CU_number_width) for CU_number_width
    testrun.o(.text.CU_get_run_results_string) refers to malloca.o(i.__malloc$memalign) for malloc
    testrun.o(.text.CU_get_run_results_string) refers to testrun.o(.text.CU_get_elapsed_time) for CU_get_elapsed_time
    testrun.o(.text.CU_get_run_results_string) refers to printfa.o(i.__0snprintf) for snprintf
    testrun.o(.ARM.exidx.text.CU_get_run_results_string) refers to testrun.o(.text.CU_get_run_results_string) for [Anonymous Symbol]
    testrun.o(.text.cleanup_failure_list) refers to malloca.o(i.__free$memalign) for free
    testrun.o(.ARM.exidx.text.cleanup_failure_list) refers to testrun.o(.text.cleanup_failure_list) for [Anonymous Symbol]
    util.o(.text.CU_translate_special_characters) refers to util.o(.rodata.str1.1) for .L.str
    util.o(.text.CU_translate_special_characters) refers to retarget_io.o(.text.__aeabi_assert) for __aeabi_assert
    util.o(.text.CU_translate_special_characters) refers to util.o(.text.get_index) for get_index
    util.o(.text.CU_translate_special_characters) refers to util.o(.rodata.CU_bindings) for CU_bindings
    util.o(.text.CU_translate_special_characters) refers to strlen.o(.text) for strlen
    util.o(.text.CU_translate_special_characters) refers to memcpya.o(.text) for __aeabi_memcpy
    util.o(.ARM.exidx.text.CU_translate_special_characters) refers to util.o(.text.CU_translate_special_characters) for [Anonymous Symbol]
    util.o(.text.get_index) refers to util.o(.rodata.CU_bindings) for CU_bindings
    util.o(.ARM.exidx.text.get_index) refers to util.o(.text.get_index) for [Anonymous Symbol]
    util.o(.text.CU_translated_strlen) refers to util.o(.rodata.str1.1) for .L.str
    util.o(.text.CU_translated_strlen) refers to retarget_io.o(.text.__aeabi_assert) for __aeabi_assert
    util.o(.text.CU_translated_strlen) refers to util.o(.text.get_index) for get_index
    util.o(.text.CU_translated_strlen) refers to util.o(.rodata.CU_bindings) for CU_bindings
    util.o(.text.CU_translated_strlen) refers to strlen.o(.text) for strlen
    util.o(.ARM.exidx.text.CU_translated_strlen) refers to util.o(.text.CU_translated_strlen) for [Anonymous Symbol]
    util.o(.text.CU_compare_strings) refers to util.o(.rodata.str1.1) for .L.str
    util.o(.text.CU_compare_strings) refers to retarget_io.o(.text.__aeabi_assert) for __aeabi_assert
    util.o(.text.CU_compare_strings) refers to toupper.o(.text) for toupper
    util.o(.ARM.exidx.text.CU_compare_strings) refers to util.o(.text.CU_compare_strings) for [Anonymous Symbol]
    util.o(.text.CU_trim) refers to util.o(.text.CU_trim_left) for CU_trim_left
    util.o(.text.CU_trim) refers to util.o(.text.CU_trim_right) for CU_trim_right
    util.o(.ARM.exidx.text.CU_trim) refers to util.o(.text.CU_trim) for [Anonymous Symbol]
    util.o(.text.CU_trim_left) refers to util.o(.rodata.str1.1) for .L.str.3
    util.o(.text.CU_trim_left) refers to retarget_io.o(.text.__aeabi_assert) for __aeabi_assert
    util.o(.text.CU_trim_left) refers to ctype_o.o(.text) for __rt_ctype_table
    util.o(.ARM.exidx.text.CU_trim_left) refers to util.o(.text.CU_trim_left) for [Anonymous Symbol]
    util.o(.text.CU_trim_right) refers to util.o(.rodata.str1.1) for .L.str.3
    util.o(.text.CU_trim_right) refers to retarget_io.o(.text.__aeabi_assert) for __aeabi_assert
    util.o(.text.CU_trim_right) refers to strlen.o(.text) for strlen
    util.o(.text.CU_trim_right) refers to ctype_o.o(.text) for __rt_ctype_table
    util.o(.ARM.exidx.text.CU_trim_right) refers to util.o(.text.CU_trim_right) for [Anonymous Symbol]
    util.o(.text.CU_number_width) refers to util.o(.rodata.str1.1) for .L.str.4
    util.o(.text.CU_number_width) refers to printfa.o(i.__0snprintf) for snprintf
    util.o(.text.CU_number_width) refers to strlen.o(.text) for strlen
    util.o(.ARM.exidx.text.CU_number_width) refers to util.o(.text.CU_number_width) for [Anonymous Symbol]
    util.o(.rodata.CU_bindings) refers to util.o(.rodata.str1.1) for [Anonymous Symbol]
    osapi_freertos.o(.text._ZN5osapi13getSystemTimeEv) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    osapi_freertos.o(.ARM.exidx.text._ZN5osapi13getSystemTimeEv) refers to osapi_freertos.o(.text._ZN5osapi13getSystemTimeEv) for [Anonymous Symbol]
    test_00_thread_name.o(.text._Z15TEST_ThreadNamev) refers to test_00_thread_name.o(.rodata.str1.1) for .L.str
    test_00_thread_name.o(.text._Z15TEST_ThreadNamev) refers to printfa.o(i.__0printf) for printf
    test_00_thread_name.o(.text._Z15TEST_ThreadNamev) refers to test_00_thread_name.o(.text._ZN11TestThread0C2Ev) for TestThread0::TestThread0__sub_object()
    test_00_thread_name.o(.text._Z15TEST_ThreadNamev) refers to test_00_thread_name.o(.data._ZL8testName) for testName
    test_00_thread_name.o(.text._Z15TEST_ThreadNamev) refers to test_00_thread_name.o(.text._ZN5osapi6Thread7getNameEv) for osapi::Thread::getName()
    test_00_thread_name.o(.text._Z15TEST_ThreadNamev) refers to strcmp.o(.text) for strcmp
    test_00_thread_name.o(.text._Z15TEST_ThreadNamev) refers to testrun.o(.text.CU_assertImplementation) for CU_assertImplementation
    test_00_thread_name.o(.text._Z15TEST_ThreadNamev) refers to test_00_thread_name.o(.text._ZN11TestThread0D2Ev) for TestThread0::~TestThread0__sub_object()
    test_00_thread_name.o(.ARM.exidx.text._Z15TEST_ThreadNamev) refers to test_00_thread_name.o(.text._Z15TEST_ThreadNamev) for [Anonymous Symbol]
    test_00_thread_name.o(.data._ZL8testName) refers to test_00_thread_name.o(.rodata.str1.1) for [Anonymous Symbol]
    test_01_thread_creation.o(.text._Z19TEST_ThreadCreationv) refers to test_01_thread_creation.o(.rodata.str1.1) for .L.str
    test_01_thread_creation.o(.text._Z19TEST_ThreadCreationv) refers to printfa.o(i.__0printf) for printf
    test_01_thread_creation.o(.text._Z19TEST_ThreadCreationv) refers to test_01_thread_creation.o(.bss._ZL8testFlag) for testFlag
    test_01_thread_creation.o(.text._Z19TEST_ThreadCreationv) refers to test_01_thread_creation.o(.text._ZN11TestThread1C2Ev) for TestThread1::TestThread1__sub_object()
    test_01_thread_creation.o(.text._Z19TEST_ThreadCreationv) refers to test_00_thread_name.o(.text._ZN5osapi6Thread3runEv) for osapi::Thread::run()
    test_01_thread_creation.o(.text._Z19TEST_ThreadCreationv) refers to testrun.o(.text.CU_assertImplementation) for CU_assertImplementation
    test_01_thread_creation.o(.text._Z19TEST_ThreadCreationv) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    test_01_thread_creation.o(.text._Z19TEST_ThreadCreationv) refers to test_01_thread_creation.o(.text._ZN11TestThread1D2Ev) for TestThread1::~TestThread1__sub_object()
    test_01_thread_creation.o(.ARM.exidx.text._Z19TEST_ThreadCreationv) refers to test_01_thread_creation.o(.text._Z19TEST_ThreadCreationv) for [Anonymous Symbol]
    test_02_thread_join.o(.text._Z15TEST_ThreadJoinv) refers to test_02_thread_join.o(.rodata.str1.1) for .L.str
    test_02_thread_join.o(.text._Z15TEST_ThreadJoinv) refers to printfa.o(i.__0printf) for printf
    test_02_thread_join.o(.text._Z15TEST_ThreadJoinv) refers to test_02_thread_join.o(.bss._ZL8testFlag) for testFlag
    test_02_thread_join.o(.text._Z15TEST_ThreadJoinv) refers to test_02_thread_join.o(.bss._ZL7runFlag) for runFlag
    test_02_thread_join.o(.text._Z15TEST_ThreadJoinv) refers to test_02_thread_join.o(.text._ZN11TestThread2C2Ev) for TestThread2::TestThread2__sub_object()
    test_02_thread_join.o(.text._Z15TEST_ThreadJoinv) refers to test_00_thread_name.o(.text._ZN5osapi6Thread9isRunningEv) for osapi::Thread::isRunning()
    test_02_thread_join.o(.text._Z15TEST_ThreadJoinv) refers to testrun.o(.text.CU_assertImplementation) for CU_assertImplementation
    test_02_thread_join.o(.text._Z15TEST_ThreadJoinv) refers to test_00_thread_name.o(.text._ZN5osapi6Thread10isJoinableEv) for osapi::Thread::isJoinable()
    test_02_thread_join.o(.text._Z15TEST_ThreadJoinv) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    test_02_thread_join.o(.text._Z15TEST_ThreadJoinv) refers to test_00_thread_name.o(.text._ZN5osapi6Thread4joinEj) for osapi::Thread::join(unsigned int)
    test_02_thread_join.o(.text._Z15TEST_ThreadJoinv) refers to test_02_thread_join.o(.text._ZN11TestThread2D2Ev) for TestThread2::~TestThread2__sub_object()
    test_02_thread_join.o(.ARM.exidx.text._Z15TEST_ThreadJoinv) refers to test_02_thread_join.o(.text._Z15TEST_ThreadJoinv) for [Anonymous Symbol]
    test_03_thread_suspend_resume.o(.text._Z24TEST_ThreadSuspendResumev) refers to test_03_thread_suspend_resume.o(.rodata.str1.1) for .L.str
    test_03_thread_suspend_resume.o(.text._Z24TEST_ThreadSuspendResumev) refers to printfa.o(i.__0printf) for printf
    test_03_thread_suspend_resume.o(.text._Z24TEST_ThreadSuspendResumev) refers to test_03_thread_suspend_resume.o(.bss._ZL8testFlag) for testFlag
    test_03_thread_suspend_resume.o(.text._Z24TEST_ThreadSuspendResumev) refers to test_03_thread_suspend_resume.o(.bss._ZL7runFlag) for runFlag
    test_03_thread_suspend_resume.o(.text._Z24TEST_ThreadSuspendResumev) refers to test_03_thread_suspend_resume.o(.text._ZN11TestThread3C2Ev) for TestThread3::TestThread3__sub_object()
    test_03_thread_suspend_resume.o(.text._Z24TEST_ThreadSuspendResumev) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    test_03_thread_suspend_resume.o(.text._Z24TEST_ThreadSuspendResumev) refers to testrun.o(.text.CU_assertImplementation) for CU_assertImplementation
    test_03_thread_suspend_resume.o(.text._Z24TEST_ThreadSuspendResumev) refers to test_00_thread_name.o(.text._ZN5osapi6Thread7suspendEv) for osapi::Thread::suspend()
    test_03_thread_suspend_resume.o(.text._Z24TEST_ThreadSuspendResumev) refers to test_00_thread_name.o(.text._ZN5osapi6Thread6resumeEv) for osapi::Thread::resume()
    test_03_thread_suspend_resume.o(.text._Z24TEST_ThreadSuspendResumev) refers to test_00_thread_name.o(.text._ZN5osapi6Thread4joinEj) for osapi::Thread::join(unsigned int)
    test_03_thread_suspend_resume.o(.text._Z24TEST_ThreadSuspendResumev) refers to test_03_thread_suspend_resume.o(.text._ZN11TestThread3D2Ev) for TestThread3::~TestThread3__sub_object()
    test_03_thread_suspend_resume.o(.ARM.exidx.text._Z24TEST_ThreadSuspendResumev) refers to test_03_thread_suspend_resume.o(.text._Z24TEST_ThreadSuspendResumev) for [Anonymous Symbol]
    test_04_thread_priority.o(.text._Z19TEST_ThreadPriorityv) refers to test_04_thread_priority.o(.rodata.str1.1) for .L.str
    test_04_thread_priority.o(.text._Z19TEST_ThreadPriorityv) refers to printfa.o(i.__0printf) for printf
    test_04_thread_priority.o(.text._Z19TEST_ThreadPriorityv) refers to test_04_thread_priority.o(.bss._ZL7runFlag) for runFlag
    test_04_thread_priority.o(.text._Z19TEST_ThreadPriorityv) refers to test_04_thread_priority.o(.text._ZN11TestThread4C2Ev) for TestThread4::TestThread4__sub_object()
    test_04_thread_priority.o(.text._Z19TEST_ThreadPriorityv) refers to test_00_thread_name.o(.text._ZN5osapi6Thread11setPriorityEi) for osapi::Thread::setPriority(int)
    test_04_thread_priority.o(.text._Z19TEST_ThreadPriorityv) refers to testrun.o(.text.CU_assertImplementation) for CU_assertImplementation
    test_04_thread_priority.o(.text._Z19TEST_ThreadPriorityv) refers to test_00_thread_name.o(.text._ZN5osapi6Thread11getPriorityEv) for osapi::Thread::getPriority()
    test_04_thread_priority.o(.text._Z19TEST_ThreadPriorityv) refers to test_00_thread_name.o(.text._ZN5osapi6Thread4joinEj) for osapi::Thread::join(unsigned int)
    test_04_thread_priority.o(.text._Z19TEST_ThreadPriorityv) refers to test_04_thread_priority.o(.text._ZN11TestThread4D2Ev) for TestThread4::~TestThread4__sub_object()
    test_04_thread_priority.o(.ARM.exidx.text._Z19TEST_ThreadPriorityv) refers to test_04_thread_priority.o(.text._Z19TEST_ThreadPriorityv) for [Anonymous Symbol]
    test_05_thread_delay.o(.text._Z16TEST_ThreadDelayv) refers to test_05_thread_delay.o(.rodata.str1.1) for .L.str
    test_05_thread_delay.o(.text._Z16TEST_ThreadDelayv) refers to printfa.o(i.__0printf) for printf
    test_05_thread_delay.o(.text._Z16TEST_ThreadDelayv) refers to osapi_freertos.o(.text._ZN5osapi13getSystemTimeEv) for osapi::getSystemTime()
    test_05_thread_delay.o(.text._Z16TEST_ThreadDelayv) refers to test_05_thread_delay.o(.text._ZN11TestThread5C2Ev) for TestThread5::TestThread5__sub_object()
    test_05_thread_delay.o(.text._Z16TEST_ThreadDelayv) refers to test_00_thread_name.o(.text._ZN5osapi6Thread4joinEj) for osapi::Thread::join(unsigned int)
    test_05_thread_delay.o(.text._Z16TEST_ThreadDelayv) refers to testrun.o(.text.CU_assertImplementation) for CU_assertImplementation
    test_05_thread_delay.o(.text._Z16TEST_ThreadDelayv) refers to test_05_thread_delay.o(.text._ZN11TestThread5D2Ev) for TestThread5::~TestThread5__sub_object()
    test_05_thread_delay.o(.ARM.exidx.text._Z16TEST_ThreadDelayv) refers to test_05_thread_delay.o(.text._Z16TEST_ThreadDelayv) for [Anonymous Symbol]
    test_06_mutex.o(.text._Z10TEST_Mutexv) refers to test_06_mutex.o(.rodata.str1.1) for .L.str
    test_06_mutex.o(.text._Z10TEST_Mutexv) refers to printfa.o(i.__0printf) for printf
    test_06_mutex.o(.text._Z10TEST_Mutexv) refers to test_06_mutex.o(.bss._ZL1m) for m
    test_06_mutex.o(.text._Z10TEST_Mutexv) refers to test_06_mutex.o(.text._ZN5osapi5Mutex4lockEj) for osapi::Mutex::lock(unsigned int)
    test_06_mutex.o(.text._Z10TEST_Mutexv) refers to testrun.o(.text.CU_assertImplementation) for CU_assertImplementation
    test_06_mutex.o(.text._Z10TEST_Mutexv) refers to test_06_mutex.o(.text._ZN5osapi5Mutex6unlockEv) for osapi::Mutex::unlock()
    test_06_mutex.o(.ARM.exidx.text._Z10TEST_Mutexv) refers to test_06_mutex.o(.text._Z10TEST_Mutexv) for [Anonymous Symbol]
    test_07_recursive_mutex.o(.text._Z19TEST_RecursiveMutexv) refers to test_07_recursive_mutex.o(.rodata.str1.1) for .L.str
    test_07_recursive_mutex.o(.text._Z19TEST_RecursiveMutexv) refers to printfa.o(i.__0printf) for printf
    test_07_recursive_mutex.o(.text._Z19TEST_RecursiveMutexv) refers to test_07_recursive_mutex.o(.bss._ZL1m) for m
    test_07_recursive_mutex.o(.text._Z19TEST_RecursiveMutexv) refers to test_07_recursive_mutex.o(.text._ZN5osapi14RecursiveMutex4lockEj) for osapi::RecursiveMutex::lock(unsigned int)
    test_07_recursive_mutex.o(.text._Z19TEST_RecursiveMutexv) refers to testrun.o(.text.CU_assertImplementation) for CU_assertImplementation
    test_07_recursive_mutex.o(.text._Z19TEST_RecursiveMutexv) refers to test_07_recursive_mutex.o(.text._ZN5osapi14RecursiveMutex6unlockEv) for osapi::RecursiveMutex::unlock()
    test_07_recursive_mutex.o(.ARM.exidx.text._Z19TEST_RecursiveMutexv) refers to test_07_recursive_mutex.o(.text._Z19TEST_RecursiveMutexv) for [Anonymous Symbol]
    test_08_mortal_thread.o(.text._Z17TEST_MortalThreadv) refers to test_08_mortal_thread.o(.rodata.str1.1) for .L.str
    test_08_mortal_thread.o(.text._Z17TEST_MortalThreadv) refers to printfa.o(i.__0printf) for printf
    test_08_mortal_thread.o(.text._Z17TEST_MortalThreadv) refers to test_08_mortal_thread.o(.bss._ZL13testFlagBegin) for testFlagBegin
    test_08_mortal_thread.o(.text._Z17TEST_MortalThreadv) refers to test_08_mortal_thread.o(.bss._ZL12testFlagLoop) for testFlagLoop
    test_08_mortal_thread.o(.text._Z17TEST_MortalThreadv) refers to test_08_mortal_thread.o(.bss._ZL11testFlagEnd) for testFlagEnd
    test_08_mortal_thread.o(.text._Z17TEST_MortalThreadv) refers to test_08_mortal_thread.o(.text._ZN14MyMortalThreadC2Ev) for MyMortalThread::MyMortalThread__sub_object()
    test_08_mortal_thread.o(.text._Z17TEST_MortalThreadv) refers to test_00_thread_name.o(.text._ZN5osapi6Thread3runEv) for osapi::Thread::run()
    test_08_mortal_thread.o(.text._Z17TEST_MortalThreadv) refers to testrun.o(.text.CU_assertImplementation) for CU_assertImplementation
    test_08_mortal_thread.o(.text._Z17TEST_MortalThreadv) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    test_08_mortal_thread.o(.text._Z17TEST_MortalThreadv) refers to test_08_mortal_thread.o(.text._ZN5osapi12MortalThread4killEv) for osapi::MortalThread::kill()
    test_08_mortal_thread.o(.text._Z17TEST_MortalThreadv) refers to test_00_thread_name.o(.text._ZN5osapi6Thread4joinEj) for osapi::Thread::join(unsigned int)
    test_08_mortal_thread.o(.text._Z17TEST_MortalThreadv) refers to test_08_mortal_thread.o(.text._ZN14MyMortalThreadD2Ev) for MyMortalThread::~MyMortalThread__sub_object()
    test_08_mortal_thread.o(.ARM.exidx.text._Z17TEST_MortalThreadv) refers to test_08_mortal_thread.o(.text._Z17TEST_MortalThreadv) for [Anonymous Symbol]
    test_osapi.o(.text._Z14taskOSAPI_TESTPv) refers to testdb.o(.text.CU_initialize_registry) for CU_initialize_registry
    test_osapi.o(.text._Z14taskOSAPI_TESTPv) refers to test_osapi.o(.rodata.str1.1) for .L.str
    test_osapi.o(.text._Z14taskOSAPI_TESTPv) refers to testdb.o(.text.CU_add_suite) for CU_add_suite
    test_osapi.o(.text._Z14taskOSAPI_TESTPv) refers to test_00_thread_name.o(.text._Z15TEST_ThreadNamev) for TEST_ThreadName()
    test_osapi.o(.text._Z14taskOSAPI_TESTPv) refers to testdb.o(.text.CU_add_test) for CU_add_test
    test_osapi.o(.text._Z14taskOSAPI_TESTPv) refers to test_01_thread_creation.o(.text._Z19TEST_ThreadCreationv) for TEST_ThreadCreation()
    test_osapi.o(.text._Z14taskOSAPI_TESTPv) refers to test_02_thread_join.o(.text._Z15TEST_ThreadJoinv) for TEST_ThreadJoin()
    test_osapi.o(.text._Z14taskOSAPI_TESTPv) refers to test_03_thread_suspend_resume.o(.text._Z24TEST_ThreadSuspendResumev) for TEST_ThreadSuspendResume()
    test_osapi.o(.text._Z14taskOSAPI_TESTPv) refers to test_04_thread_priority.o(.text._Z19TEST_ThreadPriorityv) for TEST_ThreadPriority()
    test_osapi.o(.text._Z14taskOSAPI_TESTPv) refers to test_05_thread_delay.o(.text._Z16TEST_ThreadDelayv) for TEST_ThreadDelay()
    test_osapi.o(.text._Z14taskOSAPI_TESTPv) refers to test_06_mutex.o(.text._Z10TEST_Mutexv) for TEST_Mutex()
    test_osapi.o(.text._Z14taskOSAPI_TESTPv) refers to test_07_recursive_mutex.o(.text._Z19TEST_RecursiveMutexv) for TEST_RecursiveMutex()
    test_osapi.o(.text._Z14taskOSAPI_TESTPv) refers to test_08_mortal_thread.o(.text._Z17TEST_MortalThreadv) for TEST_MortalThread()
    test_osapi.o(.text._Z14taskOSAPI_TESTPv) refers to test_10_thread_priority_change.o(.text._Z25TEST_ThreadPriorityChangev) for TEST_ThreadPriorityChange()
    test_osapi.o(.text._Z14taskOSAPI_TESTPv) refers to test_11_thread_run_detailed.o(.text._Z22TEST_ThreadRunDetailedv) for TEST_ThreadRunDetailed()
    test_osapi.o(.text._Z14taskOSAPI_TESTPv) refers to test_12_thread_state.o(.text._Z24TEST_ThreadStateCheckingv) for TEST_ThreadStateChecking()
    test_osapi.o(.text._Z14taskOSAPI_TESTPv) refers to test_13_thread_suspend_inactive.o(.text._Z26TEST_ThreadSuspendInactivev) for TEST_ThreadSuspendInactive()
    test_osapi.o(.text._Z14taskOSAPI_TESTPv) refers to test_14_thread_stack_size.o(.text._Z20TEST_ThreadStackSizev) for TEST_ThreadStackSize()
    test_osapi.o(.text._Z14taskOSAPI_TESTPv) refers to basic.o(.text.CU_basic_set_mode) for CU_basic_set_mode
    test_osapi.o(.text._Z14taskOSAPI_TESTPv) refers to basic.o(.text.CU_basic_run_tests) for CU_basic_run_tests
    test_osapi.o(.text._Z14taskOSAPI_TESTPv) refers to printfa.o(i.__0printf) for printf
    test_osapi.o(.text._Z14taskOSAPI_TESTPv) refers to testrun.o(.text.CU_get_failure_list) for CU_get_failure_list
    test_osapi.o(.text._Z14taskOSAPI_TESTPv) refers to basic.o(.text.CU_basic_show_failures) for CU_basic_show_failures
    test_osapi.o(.text._Z14taskOSAPI_TESTPv) refers to testdb.o(.text.CU_cleanup_registry) for CU_cleanup_registry
    test_osapi.o(.text._Z14taskOSAPI_TESTPv) refers to tasks.o(.text.vTaskDelete) for vTaskDelete
    test_osapi.o(.ARM.exidx.text._Z14taskOSAPI_TESTPv) refers to test_osapi.o(.text._Z14taskOSAPI_TESTPv) for [Anonymous Symbol]
    test_14_thread_stack_size.o(.text._Z20TEST_ThreadStackSizev) refers to test_14_thread_stack_size.o(.rodata.str1.1) for .L.str
    test_14_thread_stack_size.o(.text._Z20TEST_ThreadStackSizev) refers to printfa.o(i.__0printf) for printf
    test_14_thread_stack_size.o(.text._Z20TEST_ThreadStackSizev) refers to test_14_thread_stack_size.o(.text._ZN12TestThread14C2Ev) for TestThread14::TestThread14__sub_object()
    test_14_thread_stack_size.o(.text._Z20TEST_ThreadStackSizev) refers to test_00_thread_name.o(.text._ZN5osapi6Thread17getTotalStackSizeEv) for osapi::Thread::getTotalStackSize()
    test_14_thread_stack_size.o(.text._Z20TEST_ThreadStackSizev) refers to testrun.o(.text.CU_assertImplementation) for CU_assertImplementation
    test_14_thread_stack_size.o(.text._Z20TEST_ThreadStackSizev) refers to test_00_thread_name.o(.text._ZN5osapi6Thread16getUsedStackSizeEv) for osapi::Thread::getUsedStackSize()
    test_14_thread_stack_size.o(.text._Z20TEST_ThreadStackSizev) refers to test_00_thread_name.o(.text._ZN5osapi6Thread3runEv) for osapi::Thread::run()
    test_14_thread_stack_size.o(.text._Z20TEST_ThreadStackSizev) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    test_14_thread_stack_size.o(.text._Z20TEST_ThreadStackSizev) refers to test_14_thread_stack_size.o(.data._ZL7runFlag) for runFlag
    test_14_thread_stack_size.o(.text._Z20TEST_ThreadStackSizev) refers to test_00_thread_name.o(.text._ZN5osapi6Thread4joinEj) for osapi::Thread::join(unsigned int)
    test_14_thread_stack_size.o(.text._Z20TEST_ThreadStackSizev) refers to test_14_thread_stack_size.o(.text._ZN12TestThread14D2Ev) for TestThread14::~TestThread14__sub_object()
    test_14_thread_stack_size.o(.ARM.exidx.text._Z20TEST_ThreadStackSizev) refers to test_14_thread_stack_size.o(.text._Z20TEST_ThreadStackSizev) for [Anonymous Symbol]
    test_13_thread_suspend_inactive.o(.text._Z26TEST_ThreadSuspendInactivev) refers to test_13_thread_suspend_inactive.o(.rodata.str1.1) for .L.str
    test_13_thread_suspend_inactive.o(.text._Z26TEST_ThreadSuspendInactivev) refers to printfa.o(i.__0printf) for printf
    test_13_thread_suspend_inactive.o(.text._Z26TEST_ThreadSuspendInactivev) refers to test_13_thread_suspend_inactive.o(.text._ZN12TestThread13C2Ev) for TestThread13::TestThread13__sub_object()
    test_13_thread_suspend_inactive.o(.text._Z26TEST_ThreadSuspendInactivev) refers to test_00_thread_name.o(.text._ZN5osapi6Thread8getStateEv) for osapi::Thread::getState()
    test_13_thread_suspend_inactive.o(.text._Z26TEST_ThreadSuspendInactivev) refers to testrun.o(.text.CU_assertImplementation) for CU_assertImplementation
    test_13_thread_suspend_inactive.o(.text._Z26TEST_ThreadSuspendInactivev) refers to test_00_thread_name.o(.text._ZN5osapi6Thread7suspendEv) for osapi::Thread::suspend()
    test_13_thread_suspend_inactive.o(.text._Z26TEST_ThreadSuspendInactivev) refers to test_00_thread_name.o(.text._ZN5osapi6Thread6resumeEv) for osapi::Thread::resume()
    test_13_thread_suspend_inactive.o(.text._Z26TEST_ThreadSuspendInactivev) refers to test_13_thread_suspend_inactive.o(.text._ZN12TestThread13D2Ev) for TestThread13::~TestThread13__sub_object()
    test_13_thread_suspend_inactive.o(.ARM.exidx.text._Z26TEST_ThreadSuspendInactivev) refers to test_13_thread_suspend_inactive.o(.text._Z26TEST_ThreadSuspendInactivev) for [Anonymous Symbol]
    test_12_thread_state.o(.text._Z24TEST_ThreadStateCheckingv) refers to test_12_thread_state.o(.rodata.str1.1) for .L.str
    test_12_thread_state.o(.text._Z24TEST_ThreadStateCheckingv) refers to printfa.o(i.__0printf) for printf
    test_12_thread_state.o(.text._Z24TEST_ThreadStateCheckingv) refers to test_12_thread_state.o(.text._ZN12TestThread12C2Ev) for TestThread12::TestThread12__sub_object()
    test_12_thread_state.o(.text._Z24TEST_ThreadStateCheckingv) refers to test_00_thread_name.o(.text._ZN5osapi6Thread8getStateEv) for osapi::Thread::getState()
    test_12_thread_state.o(.text._Z24TEST_ThreadStateCheckingv) refers to testrun.o(.text.CU_assertImplementation) for CU_assertImplementation
    test_12_thread_state.o(.text._Z24TEST_ThreadStateCheckingv) refers to test_00_thread_name.o(.text._ZN5osapi6Thread3runEv) for osapi::Thread::run()
    test_12_thread_state.o(.text._Z24TEST_ThreadStateCheckingv) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    test_12_thread_state.o(.text._Z24TEST_ThreadStateCheckingv) refers to test_12_thread_state.o(.bss._ZL8runState) for runState
    test_12_thread_state.o(.text._Z24TEST_ThreadStateCheckingv) refers to test_00_thread_name.o(.text._ZN5osapi6Thread7suspendEv) for osapi::Thread::suspend()
    test_12_thread_state.o(.text._Z24TEST_ThreadStateCheckingv) refers to test_00_thread_name.o(.text._ZN5osapi6Thread6resumeEv) for osapi::Thread::resume()
    test_12_thread_state.o(.text._Z24TEST_ThreadStateCheckingv) refers to test_12_thread_state.o(.data._ZL7runFlag) for runFlag
    test_12_thread_state.o(.text._Z24TEST_ThreadStateCheckingv) refers to test_00_thread_name.o(.text._ZN5osapi6Thread4joinEj) for osapi::Thread::join(unsigned int)
    test_12_thread_state.o(.text._Z24TEST_ThreadStateCheckingv) refers to test_12_thread_state.o(.text._ZN12TestThread12D2Ev) for TestThread12::~TestThread12__sub_object()
    test_12_thread_state.o(.ARM.exidx.text._Z24TEST_ThreadStateCheckingv) refers to test_12_thread_state.o(.text._Z24TEST_ThreadStateCheckingv) for [Anonymous Symbol]
    test_11_thread_run_detailed.o(.text._Z22TEST_ThreadRunDetailedv) refers to test_11_thread_run_detailed.o(.rodata.str1.1) for .L.str
    test_11_thread_run_detailed.o(.text._Z22TEST_ThreadRunDetailedv) refers to printfa.o(i.__0printf) for printf
    test_11_thread_run_detailed.o(.text._Z22TEST_ThreadRunDetailedv) refers to test_11_thread_run_detailed.o(.bss._ZL8testFlag) for testFlag
    test_11_thread_run_detailed.o(.text._Z22TEST_ThreadRunDetailedv) refers to test_11_thread_run_detailed.o(.text._ZN12TestThread11C2Ev) for TestThread11::TestThread11__sub_object()
    test_11_thread_run_detailed.o(.text._Z22TEST_ThreadRunDetailedv) refers to test_00_thread_name.o(.text._ZN5osapi6Thread9isRunningEv) for osapi::Thread::isRunning()
    test_11_thread_run_detailed.o(.text._Z22TEST_ThreadRunDetailedv) refers to testrun.o(.text.CU_assertImplementation) for CU_assertImplementation
    test_11_thread_run_detailed.o(.text._Z22TEST_ThreadRunDetailedv) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    test_11_thread_run_detailed.o(.text._Z22TEST_ThreadRunDetailedv) refers to test_00_thread_name.o(.text._ZN5osapi6Thread3runEv) for osapi::Thread::run()
    test_11_thread_run_detailed.o(.text._Z22TEST_ThreadRunDetailedv) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    test_11_thread_run_detailed.o(.text._Z22TEST_ThreadRunDetailedv) refers to test_11_thread_run_detailed.o(.data._ZL7runFlag) for runFlag
    test_11_thread_run_detailed.o(.text._Z22TEST_ThreadRunDetailedv) refers to test_00_thread_name.o(.text._ZN5osapi6Thread4joinEj) for osapi::Thread::join(unsigned int)
    test_11_thread_run_detailed.o(.text._Z22TEST_ThreadRunDetailedv) refers to test_11_thread_run_detailed.o(.text._ZN12TestThread11D2Ev) for TestThread11::~TestThread11__sub_object()
    test_11_thread_run_detailed.o(.ARM.exidx.text._Z22TEST_ThreadRunDetailedv) refers to test_11_thread_run_detailed.o(.text._Z22TEST_ThreadRunDetailedv) for [Anonymous Symbol]
    test_10_thread_priority_change.o(.text._Z25TEST_ThreadPriorityChangev) refers to test_10_thread_priority_change.o(.rodata.str1.1) for .L.str
    test_10_thread_priority_change.o(.text._Z25TEST_ThreadPriorityChangev) refers to printfa.o(i.__0printf) for printf
    test_10_thread_priority_change.o(.text._Z25TEST_ThreadPriorityChangev) refers to test_10_thread_priority_change.o(.text._ZN13TestThread10AC2Ev) for TestThread10A::TestThread10A__sub_object()
    test_10_thread_priority_change.o(.text._Z25TEST_ThreadPriorityChangev) refers to test_10_thread_priority_change.o(.text._ZN13TestThread10BC2Ev) for TestThread10B::TestThread10B__sub_object()
    test_10_thread_priority_change.o(.text._Z25TEST_ThreadPriorityChangev) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    test_10_thread_priority_change.o(.text._Z25TEST_ThreadPriorityChangev) refers to test_10_thread_priority_change.o(.data._ZL21osapiInitialPriorityA) for osapiInitialPriorityA
    test_10_thread_priority_change.o(.text._Z25TEST_ThreadPriorityChangev) refers to testrun.o(.text.CU_assertImplementation) for CU_assertImplementation
    test_10_thread_priority_change.o(.text._Z25TEST_ThreadPriorityChangev) refers to test_10_thread_priority_change.o(.data._ZL21osapiInitialPriorityB) for osapiInitialPriorityB
    test_10_thread_priority_change.o(.text._Z25TEST_ThreadPriorityChangev) refers to test_00_thread_name.o(.text._ZN5osapi6Thread11getPriorityEv) for osapi::Thread::getPriority()
    test_10_thread_priority_change.o(.text._Z25TEST_ThreadPriorityChangev) refers to test_10_thread_priority_change.o(.bss._ZL19priorityDifferenceA) for priorityDifferenceA
    test_10_thread_priority_change.o(.text._Z25TEST_ThreadPriorityChangev) refers to test_10_thread_priority_change.o(.bss._ZL19priorityDifferenceB) for priorityDifferenceB
    test_10_thread_priority_change.o(.text._Z25TEST_ThreadPriorityChangev) refers to test_10_thread_priority_change.o(.data._ZL7runFlag) for runFlag
    test_10_thread_priority_change.o(.text._Z25TEST_ThreadPriorityChangev) refers to test_00_thread_name.o(.text._ZN5osapi6Thread4joinEj) for osapi::Thread::join(unsigned int)
    test_10_thread_priority_change.o(.text._Z25TEST_ThreadPriorityChangev) refers to test_10_thread_priority_change.o(.text._ZN13TestThread10BD2Ev) for TestThread10B::~TestThread10B__sub_object()
    test_10_thread_priority_change.o(.text._Z25TEST_ThreadPriorityChangev) refers to test_10_thread_priority_change.o(.text._ZN13TestThread10AD2Ev) for TestThread10A::~TestThread10A__sub_object()
    test_10_thread_priority_change.o(.ARM.exidx.text._Z25TEST_ThreadPriorityChangev) refers to test_10_thread_priority_change.o(.text._Z25TEST_ThreadPriorityChangev) for [Anonymous Symbol]
    cmsis_os2.o(.text.SysTick_Handler) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.SysTick_Handler) refers to port.o(.text.xPortSysTickHandler) for xPortSysTickHandler
    cmsis_os2.o(.ARM.exidx.text.SysTick_Handler) refers to cmsis_os2.o(.text.SysTick_Handler) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelInitialize) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osKernelInitialize) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osKernelInitialize) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.ARM.exidx.text.osKernelInitialize) refers to cmsis_os2.o(.text.osKernelInitialize) for [Anonymous Symbol]
    cmsis_os2.o(.text.IRQ_Context) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.ARM.exidx.text.IRQ_Context) refers to cmsis_os2.o(.text.IRQ_Context) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelGetInfo) refers to cmsis_os2.o(.rodata.str1.1) for .L.str
    cmsis_os2.o(.text.osKernelGetInfo) refers to memcpya.o(.text) for __aeabi_memcpy
    cmsis_os2.o(.ARM.exidx.text.osKernelGetInfo) refers to cmsis_os2.o(.text.osKernelGetInfo) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelGetState) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osKernelGetState) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.ARM.exidx.text.osKernelGetState) refers to cmsis_os2.o(.text.osKernelGetState) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelStart) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osKernelStart) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osKernelStart) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osKernelStart) refers to cmsis_os2.o(.text.SVC_Setup) for SVC_Setup
    cmsis_os2.o(.text.osKernelStart) refers to tasks.o(.text.vTaskStartScheduler) for vTaskStartScheduler
    cmsis_os2.o(.ARM.exidx.text.osKernelStart) refers to cmsis_os2.o(.text.osKernelStart) for [Anonymous Symbol]
    cmsis_os2.o(.text.SVC_Setup) refers to cmsis_os2.o(.text.__NVIC_SetPriority) for __NVIC_SetPriority
    cmsis_os2.o(.ARM.exidx.text.SVC_Setup) refers to cmsis_os2.o(.text.SVC_Setup) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelLock) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osKernelLock) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osKernelLock) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    cmsis_os2.o(.ARM.exidx.text.osKernelLock) refers to cmsis_os2.o(.text.osKernelLock) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelUnlock) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osKernelUnlock) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osKernelUnlock) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    cmsis_os2.o(.ARM.exidx.text.osKernelUnlock) refers to cmsis_os2.o(.text.osKernelUnlock) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelRestoreLock) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osKernelRestoreLock) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osKernelRestoreLock) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    cmsis_os2.o(.text.osKernelRestoreLock) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    cmsis_os2.o(.ARM.exidx.text.osKernelRestoreLock) refers to cmsis_os2.o(.text.osKernelRestoreLock) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelGetTickCount) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osKernelGetTickCount) refers to tasks.o(.text.xTaskGetTickCountFromISR) for xTaskGetTickCountFromISR
    cmsis_os2.o(.text.osKernelGetTickCount) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    cmsis_os2.o(.ARM.exidx.text.osKernelGetTickCount) refers to cmsis_os2.o(.text.osKernelGetTickCount) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.osKernelGetTickFreq) refers to cmsis_os2.o(.text.osKernelGetTickFreq) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelGetSysTimerCount) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    cmsis_os2.o(.text.osKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetCount) for OS_Tick_GetCount
    cmsis_os2.o(.text.osKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetOverflow) for OS_Tick_GetOverflow
    cmsis_os2.o(.text.osKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetInterval) for OS_Tick_GetInterval
    cmsis_os2.o(.ARM.exidx.text.osKernelGetSysTimerCount) refers to cmsis_os2.o(.text.osKernelGetSysTimerCount) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelGetSysTimerFreq) refers to system_stm32f4xx.o(.data.SystemCoreClock) for SystemCoreClock
    cmsis_os2.o(.ARM.exidx.text.osKernelGetSysTimerFreq) refers to cmsis_os2.o(.text.osKernelGetSysTimerFreq) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadNew) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadNew) refers to tasks.o(.text.xTaskCreateStatic) for xTaskCreateStatic
    cmsis_os2.o(.text.osThreadNew) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    cmsis_os2.o(.ARM.exidx.text.osThreadNew) refers to cmsis_os2.o(.text.osThreadNew) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadGetName) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadGetName) refers to tasks.o(.text.pcTaskGetName) for pcTaskGetName
    cmsis_os2.o(.ARM.exidx.text.osThreadGetName) refers to cmsis_os2.o(.text.osThreadGetName) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadGetId) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    cmsis_os2.o(.ARM.exidx.text.osThreadGetId) refers to cmsis_os2.o(.text.osThreadGetId) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadGetState) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadGetState) refers to tasks.o(.text.eTaskGetState) for eTaskGetState
    cmsis_os2.o(.ARM.exidx.text.osThreadGetState) refers to cmsis_os2.o(.text.osThreadGetState) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadGetStackSpace) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadGetStackSpace) refers to tasks.o(.text.uxTaskGetStackHighWaterMark) for uxTaskGetStackHighWaterMark
    cmsis_os2.o(.ARM.exidx.text.osThreadGetStackSpace) refers to cmsis_os2.o(.text.osThreadGetStackSpace) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadSetPriority) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadSetPriority) refers to tasks.o(.text.vTaskPrioritySet) for vTaskPrioritySet
    cmsis_os2.o(.ARM.exidx.text.osThreadSetPriority) refers to cmsis_os2.o(.text.osThreadSetPriority) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadGetPriority) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadGetPriority) refers to tasks.o(.text.uxTaskPriorityGet) for uxTaskPriorityGet
    cmsis_os2.o(.ARM.exidx.text.osThreadGetPriority) refers to cmsis_os2.o(.text.osThreadGetPriority) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadYield) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.ARM.exidx.text.osThreadYield) refers to cmsis_os2.o(.text.osThreadYield) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadSuspend) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadSuspend) refers to tasks.o(.text.vTaskSuspend) for vTaskSuspend
    cmsis_os2.o(.ARM.exidx.text.osThreadSuspend) refers to cmsis_os2.o(.text.osThreadSuspend) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadResume) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadResume) refers to tasks.o(.text.vTaskResume) for vTaskResume
    cmsis_os2.o(.ARM.exidx.text.osThreadResume) refers to cmsis_os2.o(.text.osThreadResume) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadExit) refers to tasks.o(.text.vTaskDelete) for vTaskDelete
    cmsis_os2.o(.ARM.exidx.text.osThreadExit) refers to cmsis_os2.o(.text.osThreadExit) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadTerminate) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadTerminate) refers to tasks.o(.text.eTaskGetState) for eTaskGetState
    cmsis_os2.o(.text.osThreadTerminate) refers to tasks.o(.text.vTaskDelete) for vTaskDelete
    cmsis_os2.o(.ARM.exidx.text.osThreadTerminate) refers to cmsis_os2.o(.text.osThreadTerminate) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadGetCount) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadGetCount) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    cmsis_os2.o(.ARM.exidx.text.osThreadGetCount) refers to cmsis_os2.o(.text.osThreadGetCount) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadEnumerate) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadEnumerate) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    cmsis_os2.o(.text.osThreadEnumerate) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    cmsis_os2.o(.text.osThreadEnumerate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    cmsis_os2.o(.text.osThreadEnumerate) refers to tasks.o(.text.uxTaskGetSystemState) for uxTaskGetSystemState
    cmsis_os2.o(.text.osThreadEnumerate) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    cmsis_os2.o(.text.osThreadEnumerate) refers to heap_4.o(.text.vPortFree) for vPortFree
    cmsis_os2.o(.ARM.exidx.text.osThreadEnumerate) refers to cmsis_os2.o(.text.osThreadEnumerate) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadFlagsSet) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadFlagsSet) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for xTaskGenericNotifyFromISR
    cmsis_os2.o(.text.osThreadFlagsSet) refers to tasks.o(.text.xTaskGenericNotify) for xTaskGenericNotify
    cmsis_os2.o(.ARM.exidx.text.osThreadFlagsSet) refers to cmsis_os2.o(.text.osThreadFlagsSet) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadFlagsClear) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadFlagsClear) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    cmsis_os2.o(.text.osThreadFlagsClear) refers to tasks.o(.text.xTaskGenericNotify) for xTaskGenericNotify
    cmsis_os2.o(.ARM.exidx.text.osThreadFlagsClear) refers to cmsis_os2.o(.text.osThreadFlagsClear) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadFlagsGet) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadFlagsGet) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    cmsis_os2.o(.text.osThreadFlagsGet) refers to tasks.o(.text.xTaskGenericNotify) for xTaskGenericNotify
    cmsis_os2.o(.ARM.exidx.text.osThreadFlagsGet) refers to cmsis_os2.o(.text.osThreadFlagsGet) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadFlagsWait) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadFlagsWait) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    cmsis_os2.o(.text.osThreadFlagsWait) refers to tasks.o(.text.xTaskGenericNotifyWait) for xTaskGenericNotifyWait
    cmsis_os2.o(.ARM.exidx.text.osThreadFlagsWait) refers to cmsis_os2.o(.text.osThreadFlagsWait) for [Anonymous Symbol]
    cmsis_os2.o(.text.osDelay) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osDelay) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    cmsis_os2.o(.ARM.exidx.text.osDelay) refers to cmsis_os2.o(.text.osDelay) for [Anonymous Symbol]
    cmsis_os2.o(.text.osDelayUntil) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osDelayUntil) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    cmsis_os2.o(.text.osDelayUntil) refers to tasks.o(.text.xTaskDelayUntil) for xTaskDelayUntil
    cmsis_os2.o(.ARM.exidx.text.osDelayUntil) refers to cmsis_os2.o(.text.osDelayUntil) for [Anonymous Symbol]
    cmsis_os2.o(.text.osTimerNew) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osTimerNew) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    cmsis_os2.o(.text.osTimerNew) refers to cmsis_os2.o(.text.TimerCallback) for TimerCallback
    cmsis_os2.o(.text.osTimerNew) refers to timers.o(.text.xTimerCreateStatic) for xTimerCreateStatic
    cmsis_os2.o(.text.osTimerNew) refers to timers.o(.text.xTimerCreate) for xTimerCreate
    cmsis_os2.o(.text.osTimerNew) refers to heap_4.o(.text.vPortFree) for vPortFree
    cmsis_os2.o(.ARM.exidx.text.osTimerNew) refers to cmsis_os2.o(.text.osTimerNew) for [Anonymous Symbol]
    cmsis_os2.o(.text.TimerCallback) refers to timers.o(.text.pvTimerGetTimerID) for pvTimerGetTimerID
    cmsis_os2.o(.ARM.exidx.text.TimerCallback) refers to cmsis_os2.o(.text.TimerCallback) for [Anonymous Symbol]
    cmsis_os2.o(.text.osTimerGetName) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osTimerGetName) refers to timers.o(.text.pcTimerGetName) for pcTimerGetName
    cmsis_os2.o(.ARM.exidx.text.osTimerGetName) refers to cmsis_os2.o(.text.osTimerGetName) for [Anonymous Symbol]
    cmsis_os2.o(.text.osTimerStart) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osTimerStart) refers to timers.o(.text.xTimerGenericCommand) for xTimerGenericCommand
    cmsis_os2.o(.ARM.exidx.text.osTimerStart) refers to cmsis_os2.o(.text.osTimerStart) for [Anonymous Symbol]
    cmsis_os2.o(.text.osTimerStop) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osTimerStop) refers to timers.o(.text.xTimerIsTimerActive) for xTimerIsTimerActive
    cmsis_os2.o(.text.osTimerStop) refers to timers.o(.text.xTimerGenericCommand) for xTimerGenericCommand
    cmsis_os2.o(.ARM.exidx.text.osTimerStop) refers to cmsis_os2.o(.text.osTimerStop) for [Anonymous Symbol]
    cmsis_os2.o(.text.osTimerIsRunning) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osTimerIsRunning) refers to timers.o(.text.xTimerIsTimerActive) for xTimerIsTimerActive
    cmsis_os2.o(.ARM.exidx.text.osTimerIsRunning) refers to cmsis_os2.o(.text.osTimerIsRunning) for [Anonymous Symbol]
    cmsis_os2.o(.text.osTimerDelete) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osTimerDelete) refers to timers.o(.text.pvTimerGetTimerID) for pvTimerGetTimerID
    cmsis_os2.o(.text.osTimerDelete) refers to timers.o(.text.xTimerGenericCommand) for xTimerGenericCommand
    cmsis_os2.o(.text.osTimerDelete) refers to heap_4.o(.text.vPortFree) for vPortFree
    cmsis_os2.o(.ARM.exidx.text.osTimerDelete) refers to cmsis_os2.o(.text.osTimerDelete) for [Anonymous Symbol]
    cmsis_os2.o(.text.osEventFlagsNew) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osEventFlagsNew) refers to event_groups.o(.text.xEventGroupCreateStatic) for xEventGroupCreateStatic
    cmsis_os2.o(.text.osEventFlagsNew) refers to event_groups.o(.text.xEventGroupCreate) for xEventGroupCreate
    cmsis_os2.o(.ARM.exidx.text.osEventFlagsNew) refers to cmsis_os2.o(.text.osEventFlagsNew) for [Anonymous Symbol]
    cmsis_os2.o(.text.osEventFlagsSet) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osEventFlagsSet) refers to event_groups.o(.text.xEventGroupSetBitsFromISR) for xEventGroupSetBitsFromISR
    cmsis_os2.o(.text.osEventFlagsSet) refers to event_groups.o(.text.xEventGroupSetBits) for xEventGroupSetBits
    cmsis_os2.o(.ARM.exidx.text.osEventFlagsSet) refers to cmsis_os2.o(.text.osEventFlagsSet) for [Anonymous Symbol]
    cmsis_os2.o(.text.osEventFlagsClear) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osEventFlagsClear) refers to event_groups.o(.text.xEventGroupGetBitsFromISR) for xEventGroupGetBitsFromISR
    cmsis_os2.o(.text.osEventFlagsClear) refers to event_groups.o(.text.xEventGroupClearBitsFromISR) for xEventGroupClearBitsFromISR
    cmsis_os2.o(.text.osEventFlagsClear) refers to event_groups.o(.text.xEventGroupClearBits) for xEventGroupClearBits
    cmsis_os2.o(.ARM.exidx.text.osEventFlagsClear) refers to cmsis_os2.o(.text.osEventFlagsClear) for [Anonymous Symbol]
    cmsis_os2.o(.text.osEventFlagsGet) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osEventFlagsGet) refers to event_groups.o(.text.xEventGroupGetBitsFromISR) for xEventGroupGetBitsFromISR
    cmsis_os2.o(.text.osEventFlagsGet) refers to event_groups.o(.text.xEventGroupClearBits) for xEventGroupClearBits
    cmsis_os2.o(.ARM.exidx.text.osEventFlagsGet) refers to cmsis_os2.o(.text.osEventFlagsGet) for [Anonymous Symbol]
    cmsis_os2.o(.text.osEventFlagsWait) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osEventFlagsWait) refers to event_groups.o(.text.xEventGroupWaitBits) for xEventGroupWaitBits
    cmsis_os2.o(.ARM.exidx.text.osEventFlagsWait) refers to cmsis_os2.o(.text.osEventFlagsWait) for [Anonymous Symbol]
    cmsis_os2.o(.text.osEventFlagsDelete) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osEventFlagsDelete) refers to event_groups.o(.text.vEventGroupDelete) for vEventGroupDelete
    cmsis_os2.o(.ARM.exidx.text.osEventFlagsDelete) refers to cmsis_os2.o(.text.osEventFlagsDelete) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMutexNew) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMutexNew) refers to queue.o(.text.xQueueCreateMutexStatic) for xQueueCreateMutexStatic
    cmsis_os2.o(.text.osMutexNew) refers to queue.o(.text.xQueueCreateMutex) for xQueueCreateMutex
    cmsis_os2.o(.ARM.exidx.text.osMutexNew) refers to cmsis_os2.o(.text.osMutexNew) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMutexAcquire) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMutexAcquire) refers to queue.o(.text.xQueueTakeMutexRecursive) for xQueueTakeMutexRecursive
    cmsis_os2.o(.text.osMutexAcquire) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    cmsis_os2.o(.ARM.exidx.text.osMutexAcquire) refers to cmsis_os2.o(.text.osMutexAcquire) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMutexRelease) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMutexRelease) refers to queue.o(.text.xQueueGiveMutexRecursive) for xQueueGiveMutexRecursive
    cmsis_os2.o(.text.osMutexRelease) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    cmsis_os2.o(.ARM.exidx.text.osMutexRelease) refers to cmsis_os2.o(.text.osMutexRelease) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMutexGetOwner) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMutexGetOwner) refers to queue.o(.text.xQueueGetMutexHolder) for xQueueGetMutexHolder
    cmsis_os2.o(.ARM.exidx.text.osMutexGetOwner) refers to cmsis_os2.o(.text.osMutexGetOwner) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMutexDelete) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMutexDelete) refers to queue.o(.text.vQueueDelete) for vQueueDelete
    cmsis_os2.o(.ARM.exidx.text.osMutexDelete) refers to cmsis_os2.o(.text.osMutexDelete) for [Anonymous Symbol]
    cmsis_os2.o(.text.osSemaphoreNew) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osSemaphoreNew) refers to queue.o(.text.xQueueGenericCreateStatic) for xQueueGenericCreateStatic
    cmsis_os2.o(.text.osSemaphoreNew) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    cmsis_os2.o(.text.osSemaphoreNew) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    cmsis_os2.o(.text.osSemaphoreNew) refers to queue.o(.text.vQueueDelete) for vQueueDelete
    cmsis_os2.o(.text.osSemaphoreNew) refers to queue.o(.text.xQueueCreateCountingSemaphoreStatic) for xQueueCreateCountingSemaphoreStatic
    cmsis_os2.o(.text.osSemaphoreNew) refers to queue.o(.text.xQueueCreateCountingSemaphore) for xQueueCreateCountingSemaphore
    cmsis_os2.o(.ARM.exidx.text.osSemaphoreNew) refers to cmsis_os2.o(.text.osSemaphoreNew) for [Anonymous Symbol]
    cmsis_os2.o(.text.osSemaphoreAcquire) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osSemaphoreAcquire) refers to queue.o(.text.xQueueReceiveFromISR) for xQueueReceiveFromISR
    cmsis_os2.o(.text.osSemaphoreAcquire) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    cmsis_os2.o(.ARM.exidx.text.osSemaphoreAcquire) refers to cmsis_os2.o(.text.osSemaphoreAcquire) for [Anonymous Symbol]
    cmsis_os2.o(.text.osSemaphoreRelease) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osSemaphoreRelease) refers to queue.o(.text.xQueueGiveFromISR) for xQueueGiveFromISR
    cmsis_os2.o(.text.osSemaphoreRelease) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    cmsis_os2.o(.ARM.exidx.text.osSemaphoreRelease) refers to cmsis_os2.o(.text.osSemaphoreRelease) for [Anonymous Symbol]
    cmsis_os2.o(.text.osSemaphoreGetCount) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osSemaphoreGetCount) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for uxQueueMessagesWaitingFromISR
    cmsis_os2.o(.text.osSemaphoreGetCount) refers to queue.o(.text.uxQueueMessagesWaiting) for uxQueueMessagesWaiting
    cmsis_os2.o(.ARM.exidx.text.osSemaphoreGetCount) refers to cmsis_os2.o(.text.osSemaphoreGetCount) for [Anonymous Symbol]
    cmsis_os2.o(.text.osSemaphoreDelete) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osSemaphoreDelete) refers to queue.o(.text.vQueueDelete) for vQueueDelete
    cmsis_os2.o(.ARM.exidx.text.osSemaphoreDelete) refers to cmsis_os2.o(.text.osSemaphoreDelete) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMessageQueueNew) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMessageQueueNew) refers to queue.o(.text.xQueueGenericCreateStatic) for xQueueGenericCreateStatic
    cmsis_os2.o(.text.osMessageQueueNew) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueNew) refers to cmsis_os2.o(.text.osMessageQueueNew) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMessageQueuePut) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMessageQueuePut) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    cmsis_os2.o(.text.osMessageQueuePut) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    cmsis_os2.o(.ARM.exidx.text.osMessageQueuePut) refers to cmsis_os2.o(.text.osMessageQueuePut) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMessageQueueGet) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMessageQueueGet) refers to queue.o(.text.xQueueReceiveFromISR) for xQueueReceiveFromISR
    cmsis_os2.o(.text.osMessageQueueGet) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueGet) refers to cmsis_os2.o(.text.osMessageQueueGet) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetCapacity) refers to cmsis_os2.o(.text.osMessageQueueGetCapacity) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetMsgSize) refers to cmsis_os2.o(.text.osMessageQueueGetMsgSize) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMessageQueueGetCount) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMessageQueueGetCount) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for uxQueueMessagesWaitingFromISR
    cmsis_os2.o(.text.osMessageQueueGetCount) refers to queue.o(.text.uxQueueMessagesWaiting) for uxQueueMessagesWaiting
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetCount) refers to cmsis_os2.o(.text.osMessageQueueGetCount) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMessageQueueGetSpace) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMessageQueueGetSpace) refers to queue.o(.text.uxQueueSpacesAvailable) for uxQueueSpacesAvailable
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetSpace) refers to cmsis_os2.o(.text.osMessageQueueGetSpace) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMessageQueueReset) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMessageQueueReset) refers to queue.o(.text.xQueueGenericReset) for xQueueGenericReset
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueReset) refers to cmsis_os2.o(.text.osMessageQueueReset) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMessageQueueDelete) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMessageQueueDelete) refers to queue.o(.text.vQueueDelete) for vQueueDelete
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueDelete) refers to cmsis_os2.o(.text.osMessageQueueDelete) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMemoryPoolNew) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMemoryPoolNew) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    cmsis_os2.o(.text.osMemoryPoolNew) refers to queue.o(.text.xQueueCreateCountingSemaphoreStatic) for xQueueCreateCountingSemaphoreStatic
    cmsis_os2.o(.text.osMemoryPoolNew) refers to heap_4.o(.text.vPortFree) for vPortFree
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolNew) refers to cmsis_os2.o(.text.osMemoryPoolNew) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMemoryPoolGetName) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetName) refers to cmsis_os2.o(.text.osMemoryPoolGetName) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMemoryPoolAlloc) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMemoryPoolAlloc) refers to queue.o(.text.xQueueReceiveFromISR) for xQueueReceiveFromISR
    cmsis_os2.o(.text.osMemoryPoolAlloc) refers to cmsis_os2.o(.text.AllocBlock) for AllocBlock
    cmsis_os2.o(.text.osMemoryPoolAlloc) refers to cmsis_os2.o(.text.CreateBlock) for CreateBlock
    cmsis_os2.o(.text.osMemoryPoolAlloc) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    cmsis_os2.o(.text.osMemoryPoolAlloc) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    cmsis_os2.o(.text.osMemoryPoolAlloc) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolAlloc) refers to cmsis_os2.o(.text.osMemoryPoolAlloc) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.AllocBlock) refers to cmsis_os2.o(.text.AllocBlock) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.CreateBlock) refers to cmsis_os2.o(.text.CreateBlock) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMemoryPoolFree) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMemoryPoolFree) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for uxQueueMessagesWaitingFromISR
    cmsis_os2.o(.text.osMemoryPoolFree) refers to cmsis_os2.o(.text.FreeBlock) for FreeBlock
    cmsis_os2.o(.text.osMemoryPoolFree) refers to queue.o(.text.xQueueGiveFromISR) for xQueueGiveFromISR
    cmsis_os2.o(.text.osMemoryPoolFree) refers to queue.o(.text.uxQueueMessagesWaiting) for uxQueueMessagesWaiting
    cmsis_os2.o(.text.osMemoryPoolFree) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    cmsis_os2.o(.text.osMemoryPoolFree) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    cmsis_os2.o(.text.osMemoryPoolFree) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolFree) refers to cmsis_os2.o(.text.osMemoryPoolFree) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.FreeBlock) refers to cmsis_os2.o(.text.FreeBlock) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetCapacity) refers to cmsis_os2.o(.text.osMemoryPoolGetCapacity) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetBlockSize) refers to cmsis_os2.o(.text.osMemoryPoolGetBlockSize) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMemoryPoolGetCount) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMemoryPoolGetCount) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for uxQueueMessagesWaitingFromISR
    cmsis_os2.o(.text.osMemoryPoolGetCount) refers to queue.o(.text.uxQueueMessagesWaiting) for uxQueueMessagesWaiting
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetCount) refers to cmsis_os2.o(.text.osMemoryPoolGetCount) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMemoryPoolGetSpace) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMemoryPoolGetSpace) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for uxQueueMessagesWaitingFromISR
    cmsis_os2.o(.text.osMemoryPoolGetSpace) refers to queue.o(.text.uxQueueMessagesWaiting) for uxQueueMessagesWaiting
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetSpace) refers to cmsis_os2.o(.text.osMemoryPoolGetSpace) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMemoryPoolDelete) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMemoryPoolDelete) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    cmsis_os2.o(.text.osMemoryPoolDelete) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    cmsis_os2.o(.text.osMemoryPoolDelete) refers to heap_4.o(.text.vPortFree) for vPortFree
    cmsis_os2.o(.text.osMemoryPoolDelete) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolDelete) refers to cmsis_os2.o(.text.osMemoryPoolDelete) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.vApplicationStackOverflowHook) refers to cmsis_os2.o(.text.vApplicationStackOverflowHook) for [Anonymous Symbol]
    cmsis_os2.o(.text.vApplicationGetIdleTaskMemory) refers to cmsis_os2.o(.bss.vApplicationGetIdleTaskMemory.Idle_TCB) for vApplicationGetIdleTaskMemory.Idle_TCB
    cmsis_os2.o(.text.vApplicationGetIdleTaskMemory) refers to cmsis_os2.o(.bss.vApplicationGetIdleTaskMemory.Idle_Stack) for vApplicationGetIdleTaskMemory.Idle_Stack
    cmsis_os2.o(.ARM.exidx.text.vApplicationGetIdleTaskMemory) refers to cmsis_os2.o(.text.vApplicationGetIdleTaskMemory) for [Anonymous Symbol]
    cmsis_os2.o(.text.vApplicationGetTimerTaskMemory) refers to cmsis_os2.o(.bss.vApplicationGetTimerTaskMemory.Timer_TCB) for vApplicationGetTimerTaskMemory.Timer_TCB
    cmsis_os2.o(.text.vApplicationGetTimerTaskMemory) refers to cmsis_os2.o(.bss.vApplicationGetTimerTaskMemory.Timer_Stack) for vApplicationGetTimerTaskMemory.Timer_Stack
    cmsis_os2.o(.ARM.exidx.text.vApplicationGetTimerTaskMemory) refers to cmsis_os2.o(.text.vApplicationGetTimerTaskMemory) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.__NVIC_SetPriority) refers to cmsis_os2.o(.text.__NVIC_SetPriority) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Setup) refers to system_stm32f4xx.o(.data.SystemCoreClock) for SystemCoreClock
    os_systick.o(.text.OS_Tick_Setup) refers to os_systick.o(.text.__NVIC_SetPriority) for __NVIC_SetPriority
    os_systick.o(.text.OS_Tick_Setup) refers to os_systick.o(.bss.PendST) for PendST
    os_systick.o(.ARM.exidx.text.OS_Tick_Setup) refers to os_systick.o(.text.OS_Tick_Setup) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.__NVIC_SetPriority) refers to os_systick.o(.text.__NVIC_SetPriority) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Enable) refers to os_systick.o(.bss.PendST) for PendST
    os_systick.o(.ARM.exidx.text.OS_Tick_Enable) refers to os_systick.o(.text.OS_Tick_Enable) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Disable) refers to os_systick.o(.bss.PendST) for PendST
    os_systick.o(.ARM.exidx.text.OS_Tick_Disable) refers to os_systick.o(.text.OS_Tick_Disable) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ) refers to os_systick.o(.text.OS_Tick_AcknowledgeIRQ) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn) refers to os_systick.o(.text.OS_Tick_GetIRQn) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_GetClock) refers to system_stm32f4xx.o(.data.SystemCoreClock) for SystemCoreClock
    os_systick.o(.ARM.exidx.text.OS_Tick_GetClock) refers to os_systick.o(.text.OS_Tick_GetClock) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval) refers to os_systick.o(.text.OS_Tick_GetInterval) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetCount) refers to os_systick.o(.text.OS_Tick_GetCount) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow) refers to os_systick.o(.text.OS_Tick_GetOverflow) for [Anonymous Symbol]
    retarget_io.o(.ARM.exidx.text.ITM_SendChar) refers to retarget_io.o(.text.ITM_SendChar) for [Anonymous Symbol]
    retarget_io.o(.text.ITM_ReceiveChar) refers to retarget_io.o(.data.ITM_RxBuffer) for ITM_RxBuffer
    retarget_io.o(.ARM.exidx.text.ITM_ReceiveChar) refers to retarget_io.o(.text.ITM_ReceiveChar) for [Anonymous Symbol]
    retarget_io.o(.text.fputc) refers to stdout.o(.data) for __stdout
    retarget_io.o(.text.fputc) refers to retarget_io.o(.text.stdout_putchar) for stdout_putchar
    retarget_io.o(.ARM.exidx.text.fputc) refers to retarget_io.o(.text.fputc) for [Anonymous Symbol]
    retarget_io.o(.text.stdout_putchar) refers to retarget_io.o(.text.ITM_SendChar) for ITM_SendChar
    retarget_io.o(.ARM.exidx.text.stdout_putchar) refers to retarget_io.o(.text.stdout_putchar) for [Anonymous Symbol]
    retarget_io.o(.ARM.exidx.text.fgetc) refers to retarget_io.o(.text.fgetc) for [Anonymous Symbol]
    retarget_io.o(.ARM.exidx.text.__backspace) refers to retarget_io.o(.text.__backspace) for [Anonymous Symbol]
    retarget_io.o(.text.__aeabi_assert) refers to retarget_io.o(.rodata.str1.1) for .L.str
    retarget_io.o(.text.__aeabi_assert) refers to stderr.o(.data) for __stderr
    retarget_io.o(.text.__aeabi_assert) refers to fputs.o(i.fputs) for fputs
    retarget_io.o(.text.__aeabi_assert) refers to retarget_io.o(.text.abort) for abort
    retarget_io.o(.ARM.exidx.text.__aeabi_assert) refers to retarget_io.o(.text.__aeabi_assert) for [Anonymous Symbol]
    retarget_io.o(.ARM.exidx.text.abort) refers to retarget_io.o(.text.abort) for [Anonymous Symbol]
    stm32f4xx_hal.o(.text.HAL_Init) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SetPriorityGrouping) for HAL_NVIC_SetPriorityGrouping
    stm32f4xx_hal.o(.text.HAL_Init) refers to stm32f4xx_hal.o(.text.HAL_InitTick) for HAL_InitTick
    stm32f4xx_hal.o(.text.HAL_Init) refers to stm32f4xx_hal.o(.text.HAL_MspInit) for HAL_MspInit
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_Init) refers to stm32f4xx_hal.o(.text.HAL_Init) for [Anonymous Symbol]
    stm32f4xx_hal.o(.text.HAL_InitTick) refers to system_stm32f4xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f4xx_hal.o(.text.HAL_InitTick) refers to stm32f4xx_hal.o(.data.uwTickFreq) for uwTickFreq
    stm32f4xx_hal.o(.text.HAL_InitTick) refers to stm32f4xx_hal_cortex.o(.text.HAL_SYSTICK_Config) for HAL_SYSTICK_Config
    stm32f4xx_hal.o(.text.HAL_InitTick) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SetPriority) for HAL_NVIC_SetPriority
    stm32f4xx_hal.o(.text.HAL_InitTick) refers to stm32f4xx_hal.o(.data.uwTickPrio) for uwTickPrio
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_InitTick) refers to stm32f4xx_hal.o(.text.HAL_InitTick) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_MspInit) refers to stm32f4xx_hal.o(.text.HAL_MspInit) for [Anonymous Symbol]
    stm32f4xx_hal.o(.text.HAL_DeInit) refers to stm32f4xx_hal.o(.text.HAL_MspDeInit) for HAL_MspDeInit
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_DeInit) refers to stm32f4xx_hal.o(.text.HAL_DeInit) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_MspDeInit) refers to stm32f4xx_hal.o(.text.HAL_MspDeInit) for [Anonymous Symbol]
    stm32f4xx_hal.o(.text.HAL_IncTick) refers to stm32f4xx_hal.o(.data.uwTickFreq) for uwTickFreq
    stm32f4xx_hal.o(.text.HAL_IncTick) refers to stm32f4xx_hal.o(.bss.uwTick) for uwTick
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_IncTick) refers to stm32f4xx_hal.o(.text.HAL_IncTick) for [Anonymous Symbol]
    stm32f4xx_hal.o(.text.HAL_GetTick) refers to stm32f4xx_hal.o(.bss.uwTick) for uwTick
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetTick) refers to stm32f4xx_hal.o(.text.HAL_GetTick) for [Anonymous Symbol]
    stm32f4xx_hal.o(.text.HAL_GetTickPrio) refers to stm32f4xx_hal.o(.data.uwTickPrio) for uwTickPrio
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetTickPrio) refers to stm32f4xx_hal.o(.text.HAL_GetTickPrio) for [Anonymous Symbol]
    stm32f4xx_hal.o(.text.HAL_SetTickFreq) refers to stm32f4xx_hal.o(.data.uwTickFreq) for uwTickFreq
    stm32f4xx_hal.o(.text.HAL_SetTickFreq) refers to stm32f4xx_hal.o(.data.uwTickPrio) for uwTickPrio
    stm32f4xx_hal.o(.text.HAL_SetTickFreq) refers to stm32f4xx_hal.o(.text.HAL_InitTick) for HAL_InitTick
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_SetTickFreq) refers to stm32f4xx_hal.o(.text.HAL_SetTickFreq) for [Anonymous Symbol]
    stm32f4xx_hal.o(.text.HAL_GetTickFreq) refers to stm32f4xx_hal.o(.data.uwTickFreq) for uwTickFreq
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetTickFreq) refers to stm32f4xx_hal.o(.text.HAL_GetTickFreq) for [Anonymous Symbol]
    stm32f4xx_hal.o(.text.HAL_Delay) refers to stm32f4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal.o(.text.HAL_Delay) refers to stm32f4xx_hal.o(.data.uwTickFreq) for uwTickFreq
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_Delay) refers to stm32f4xx_hal.o(.text.HAL_Delay) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_SuspendTick) refers to stm32f4xx_hal.o(.text.HAL_SuspendTick) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_ResumeTick) refers to stm32f4xx_hal.o(.text.HAL_ResumeTick) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetHalVersion) refers to stm32f4xx_hal.o(.text.HAL_GetHalVersion) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetREVID) refers to stm32f4xx_hal.o(.text.HAL_GetREVID) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetDEVID) refers to stm32f4xx_hal.o(.text.HAL_GetDEVID) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_EnableDBGSleepMode) refers to stm32f4xx_hal.o(.text.HAL_DBGMCU_EnableDBGSleepMode) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_DisableDBGSleepMode) refers to stm32f4xx_hal.o(.text.HAL_DBGMCU_DisableDBGSleepMode) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_EnableDBGStopMode) refers to stm32f4xx_hal.o(.text.HAL_DBGMCU_EnableDBGStopMode) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_DisableDBGStopMode) refers to stm32f4xx_hal.o(.text.HAL_DBGMCU_DisableDBGStopMode) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_EnableDBGStandbyMode) refers to stm32f4xx_hal.o(.text.HAL_DBGMCU_EnableDBGStandbyMode) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_DisableDBGStandbyMode) refers to stm32f4xx_hal.o(.text.HAL_DBGMCU_DisableDBGStandbyMode) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_EnableCompensationCell) refers to stm32f4xx_hal.o(.text.HAL_EnableCompensationCell) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_DisableCompensationCell) refers to stm32f4xx_hal.o(.text.HAL_DisableCompensationCell) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetUIDw0) refers to stm32f4xx_hal.o(.text.HAL_GetUIDw0) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetUIDw1) refers to stm32f4xx_hal.o(.text.HAL_GetUIDw1) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetUIDw2) refers to stm32f4xx_hal.o(.text.HAL_GetUIDw2) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_EnableMemorySwappingBank) refers to stm32f4xx_hal.o(.text.HAL_EnableMemorySwappingBank) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_DisableMemorySwappingBank) refers to stm32f4xx_hal.o(.text.HAL_DisableMemorySwappingBank) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SetPriorityGrouping) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_SetPriorityGrouping) for __NVIC_SetPriorityGrouping
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SetPriorityGrouping) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SetPriorityGrouping) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_SetPriorityGrouping) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_SetPriorityGrouping) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SetPriority) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_GetPriorityGrouping) for __NVIC_GetPriorityGrouping
    stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SetPriority) refers to stm32f4xx_hal_cortex.o(.text.NVIC_EncodePriority) for NVIC_EncodePriority
    stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SetPriority) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_SetPriority) for __NVIC_SetPriority
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SetPriority) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SetPriority) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_GetPriorityGrouping) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_GetPriorityGrouping) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_SetPriority) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_SetPriority) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.NVIC_EncodePriority) refers to stm32f4xx_hal_cortex.o(.text.NVIC_EncodePriority) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.text.HAL_NVIC_EnableIRQ) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_EnableIRQ) for __NVIC_EnableIRQ
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_EnableIRQ) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_EnableIRQ) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_EnableIRQ) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_EnableIRQ) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.text.HAL_NVIC_DisableIRQ) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_DisableIRQ) for __NVIC_DisableIRQ
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_DisableIRQ) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_DisableIRQ) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_DisableIRQ) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_DisableIRQ) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SystemReset) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_SystemReset) for __NVIC_SystemReset
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SystemReset) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SystemReset) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_SystemReset) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_SystemReset) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.text.HAL_SYSTICK_Config) refers to stm32f4xx_hal_cortex.o(.text.SysTick_Config) for SysTick_Config
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_Config) refers to stm32f4xx_hal_cortex.o(.text.HAL_SYSTICK_Config) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.text.SysTick_Config) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_SetPriority) for __NVIC_SetPriority
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.SysTick_Config) refers to stm32f4xx_hal_cortex.o(.text.SysTick_Config) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_MPU_Disable) refers to stm32f4xx_hal_cortex.o(.text.HAL_MPU_Disable) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_MPU_Enable) refers to stm32f4xx_hal_cortex.o(.text.HAL_MPU_Enable) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_MPU_ConfigRegion) refers to stm32f4xx_hal_cortex.o(.text.HAL_MPU_ConfigRegion) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.text.HAL_NVIC_GetPriorityGrouping) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_GetPriorityGrouping) for __NVIC_GetPriorityGrouping
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetPriorityGrouping) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_GetPriorityGrouping) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.text.HAL_NVIC_GetPriority) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_GetPriority) for __NVIC_GetPriority
    stm32f4xx_hal_cortex.o(.text.HAL_NVIC_GetPriority) refers to stm32f4xx_hal_cortex.o(.text.NVIC_DecodePriority) for NVIC_DecodePriority
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetPriority) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_GetPriority) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.NVIC_DecodePriority) refers to stm32f4xx_hal_cortex.o(.text.NVIC_DecodePriority) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_GetPriority) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_GetPriority) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SetPendingIRQ) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_SetPendingIRQ) for __NVIC_SetPendingIRQ
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SetPendingIRQ) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SetPendingIRQ) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_SetPendingIRQ) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_SetPendingIRQ) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.text.HAL_NVIC_GetPendingIRQ) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_GetPendingIRQ) for __NVIC_GetPendingIRQ
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetPendingIRQ) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_GetPendingIRQ) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_GetPendingIRQ) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_GetPendingIRQ) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.text.HAL_NVIC_ClearPendingIRQ) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_ClearPendingIRQ) for __NVIC_ClearPendingIRQ
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_ClearPendingIRQ) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_ClearPendingIRQ) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_ClearPendingIRQ) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_ClearPendingIRQ) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.text.HAL_NVIC_GetActive) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_GetActive) for __NVIC_GetActive
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetActive) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_GetActive) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_GetActive) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_GetActive) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_CLKSourceConfig) refers to stm32f4xx_hal_cortex.o(.text.HAL_SYSTICK_CLKSourceConfig) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.text.HAL_SYSTICK_IRQHandler) refers to stm32f4xx_hal_cortex.o(.text.HAL_SYSTICK_Callback) for HAL_SYSTICK_Callback
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_IRQHandler) refers to stm32f4xx_hal_cortex.o(.text.HAL_SYSTICK_IRQHandler) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_Callback) refers to stm32f4xx_hal_cortex.o(.text.HAL_SYSTICK_Callback) for [Anonymous Symbol]
    stm32f4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_Init) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_Init) for [Anonymous Symbol]
    stm32f4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_DeInit) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_DeInit) for [Anonymous Symbol]
    stm32f4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_ReadPin) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_ReadPin) for [Anonymous Symbol]
    stm32f4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_WritePin) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_WritePin) for [Anonymous Symbol]
    stm32f4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_TogglePin) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_TogglePin) for [Anonymous Symbol]
    stm32f4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_LockPin) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_LockPin) for [Anonymous Symbol]
    stm32f4xx_hal_gpio.o(.text.HAL_GPIO_EXTI_IRQHandler) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_EXTI_Callback) for HAL_GPIO_EXTI_Callback
    stm32f4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_EXTI_IRQHandler) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_EXTI_IRQHandler) for [Anonymous Symbol]
    stm32f4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_EXTI_Callback) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_EXTI_Callback) for [Anonymous Symbol]
    stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DeInit) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_DeInit) for [Anonymous Symbol]
    stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableBkUpAccess) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_EnableBkUpAccess) for [Anonymous Symbol]
    stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableBkUpAccess) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_DisableBkUpAccess) for [Anonymous Symbol]
    stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_ConfigPVD) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_ConfigPVD) for [Anonymous Symbol]
    stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnablePVD) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_EnablePVD) for [Anonymous Symbol]
    stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisablePVD) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_DisablePVD) for [Anonymous Symbol]
    stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableWakeUpPin) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_EnableWakeUpPin) for [Anonymous Symbol]
    stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableWakeUpPin) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_DisableWakeUpPin) for [Anonymous Symbol]
    stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnterSLEEPMode) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_EnterSLEEPMode) for [Anonymous Symbol]
    stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnterSTOPMode) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_EnterSTOPMode) for [Anonymous Symbol]
    stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnterSTANDBYMode) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_EnterSTANDBYMode) for [Anonymous Symbol]
    stm32f4xx_hal_pwr.o(.text.HAL_PWR_PVD_IRQHandler) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_PVDCallback) for HAL_PWR_PVDCallback
    stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_PVD_IRQHandler) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_PVD_IRQHandler) for [Anonymous Symbol]
    stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_PVDCallback) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_PVDCallback) for [Anonymous Symbol]
    stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableSleepOnExit) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_EnableSleepOnExit) for [Anonymous Symbol]
    stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableSleepOnExit) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_DisableSleepOnExit) for [Anonymous Symbol]
    stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableSEVOnPend) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_EnableSEVOnPend) for [Anonymous Symbol]
    stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableSEVOnPend) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_DisableSEVOnPend) for [Anonymous Symbol]
    stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableBkUpReg) refers to stm32f4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableBkUpReg) refers to stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableBkUpReg) for [Anonymous Symbol]
    stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableBkUpReg) refers to stm32f4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableBkUpReg) refers to stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableBkUpReg) for [Anonymous Symbol]
    stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableFlashPowerDown) refers to stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableFlashPowerDown) for [Anonymous Symbol]
    stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableFlashPowerDown) refers to stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableFlashPowerDown) for [Anonymous Symbol]
    stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_GetVoltageRange) refers to stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_GetVoltageRange) for [Anonymous Symbol]
    stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_ControlVoltageScaling) refers to stm32f4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_ControlVoltageScaling) refers to stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_ControlVoltageScaling) for [Anonymous Symbol]
    stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableOverDrive) refers to stm32f4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableOverDrive) refers to stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableOverDrive) for [Anonymous Symbol]
    stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableOverDrive) refers to stm32f4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableOverDrive) refers to stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableOverDrive) for [Anonymous Symbol]
    stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnterUnderDriveSTOPMode) refers to stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_EnterUnderDriveSTOPMode) for [Anonymous Symbol]
    stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_DeInit) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_DeInit) for [Anonymous Symbol]
    stm32f4xx_hal_rcc.o(.text.HAL_RCC_OscConfig) refers to stm32f4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_OscConfig) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_OscConfig) for [Anonymous Symbol]
    stm32f4xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to stm32f4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetSysClockFreq) for HAL_RCC_GetSysClockFreq
    stm32f4xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to system_stm32f4xx.o(.rodata.AHBPrescTable) for AHBPrescTable
    stm32f4xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to system_stm32f4xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f4xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to stm32f4xx_hal.o(.data.uwTickPrio) for uwTickPrio
    stm32f4xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to stm32f4xx_hal.o(.text.HAL_InitTick) for HAL_InitTick
    stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_ClockConfig) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) for [Anonymous Symbol]
    stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetSysClockFreq) refers to uldiv.o(.text) for __aeabi_uldivmod
    stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetSysClockFreq) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetSysClockFreq) for [Anonymous Symbol]
    stm32f4xx_hal_rcc.o(.text.HAL_RCC_MCOConfig) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_Init) for HAL_GPIO_Init
    stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_MCOConfig) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_MCOConfig) for [Anonymous Symbol]
    stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_EnableCSS) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_EnableCSS) for [Anonymous Symbol]
    stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_DisableCSS) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_DisableCSS) for [Anonymous Symbol]
    stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetHCLKFreq) refers to system_stm32f4xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetHCLKFreq) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetHCLKFreq) for [Anonymous Symbol]
    stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetHCLKFreq) for HAL_RCC_GetHCLKFreq
    stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq) refers to system_stm32f4xx.o(.rodata.APBPrescTable) for APBPrescTable
    stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetPCLK1Freq) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq) for [Anonymous Symbol]
    stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetPCLK2Freq) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetHCLKFreq) for HAL_RCC_GetHCLKFreq
    stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetPCLK2Freq) refers to system_stm32f4xx.o(.rodata.APBPrescTable) for APBPrescTable
    stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetPCLK2Freq) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetPCLK2Freq) for [Anonymous Symbol]
    stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetOscConfig) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetOscConfig) for [Anonymous Symbol]
    stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetClockConfig) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetClockConfig) for [Anonymous Symbol]
    stm32f4xx_hal_rcc.o(.text.HAL_RCC_NMI_IRQHandler) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_CSSCallback) for HAL_RCC_CSSCallback
    stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_NMI_IRQHandler) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_NMI_IRQHandler) for [Anonymous Symbol]
    stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_CSSCallback) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_CSSCallback) for [Anonymous Symbol]
    stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_PeriphCLKConfig) refers to stm32f4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_PeriphCLKConfig) refers to stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_PeriphCLKConfig) for [Anonymous Symbol]
    stm32f4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_GetPeriphCLKConfig) refers to stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetPeriphCLKConfig) for [Anonymous Symbol]
    stm32f4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_GetPeriphCLKFreq) refers to stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetPeriphCLKFreq) for [Anonymous Symbol]
    stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_EnablePLLI2S) refers to stm32f4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_EnablePLLI2S) refers to stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_EnablePLLI2S) for [Anonymous Symbol]
    stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_DisablePLLI2S) refers to stm32f4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_DisablePLLI2S) refers to stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_DisablePLLI2S) for [Anonymous Symbol]
    stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_EnablePLLSAI) refers to stm32f4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_EnablePLLSAI) refers to stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_EnablePLLSAI) for [Anonymous Symbol]
    stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_DisablePLLSAI) refers to stm32f4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_DisablePLLSAI) refers to stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_DisablePLLSAI) for [Anonymous Symbol]
    stm32f4xx_hal_rcc_ex.o(.text.HAL_RCC_DeInit) refers to stm32f4xx_hal.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_rcc_ex.o(.text.HAL_RCC_DeInit) refers to system_stm32f4xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f4xx_hal_rcc_ex.o(.text.HAL_RCC_DeInit) refers to stm32f4xx_hal.o(.data.uwTickPrio) for uwTickPrio
    stm32f4xx_hal_rcc_ex.o(.text.HAL_RCC_DeInit) refers to stm32f4xx_hal.o(.text.HAL_InitTick) for HAL_InitTick
    stm32f4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCC_DeInit) refers to stm32f4xx_hal_rcc_ex.o(.text.HAL_RCC_DeInit) for [Anonymous Symbol]
    startup_stm32f429xx.o(RESET) refers to startup_stm32f429xx.o(STACK) for __initial_sp
    startup_stm32f429xx.o(RESET) refers to startup_stm32f429xx.o(.text) for Reset_Handler
    startup_stm32f429xx.o(RESET) refers to port.o(.text.SVC_Handler) for SVC_Handler
    startup_stm32f429xx.o(RESET) refers to port.o(.text.PendSV_Handler) for PendSV_Handler
    startup_stm32f429xx.o(RESET) refers to cmsis_os2.o(.text.SysTick_Handler) for SysTick_Handler
    startup_stm32f429xx.o(.text) refers to system_stm32f4xx.o(.text.SystemInit) for SystemInit
    startup_stm32f429xx.o(.text) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    system_stm32f4xx.o(.ARM.exidx.text.SystemInit) refers to system_stm32f4xx.o(.text.SystemInit) for [Anonymous Symbol]
    system_stm32f4xx.o(.text.SystemCoreClockUpdate) refers to system_stm32f4xx.o(.data.SystemCoreClock) for SystemCoreClock
    system_stm32f4xx.o(.text.SystemCoreClockUpdate) refers to system_stm32f4xx.o(.rodata.AHBPrescTable) for AHBPrescTable
    system_stm32f4xx.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_stm32f4xx.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupCreateStatic) refers to list.o(.text.vListInitialise) for vListInitialise
    event_groups.o(.ARM.exidx.text.xEventGroupCreateStatic) refers to event_groups.o(.text.xEventGroupCreateStatic) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    event_groups.o(.text.xEventGroupCreate) refers to list.o(.text.vListInitialise) for vListInitialise
    event_groups.o(.ARM.exidx.text.xEventGroupCreate) refers to event_groups.o(.text.xEventGroupCreate) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(.text.xEventGroupSync) refers to event_groups.o(.text.xEventGroupSetBits) for xEventGroupSetBits
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.vTaskPlaceOnUnorderedEventList) for vTaskPlaceOnUnorderedEventList
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.uxTaskResetEventItemValue) for uxTaskResetEventItemValue
    event_groups.o(.text.xEventGroupSync) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    event_groups.o(.text.xEventGroupSync) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    event_groups.o(.ARM.exidx.text.xEventGroupSync) refers to event_groups.o(.text.xEventGroupSync) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupSetBits) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(.text.xEventGroupSetBits) refers to tasks.o(.text.vTaskRemoveFromUnorderedEventList) for vTaskRemoveFromUnorderedEventList
    event_groups.o(.text.xEventGroupSetBits) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(.ARM.exidx.text.xEventGroupSetBits) refers to event_groups.o(.text.xEventGroupSetBits) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(.text.xEventGroupWaitBits) refers to event_groups.o(.text.prvTestWaitCondition) for prvTestWaitCondition
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.vTaskPlaceOnUnorderedEventList) for vTaskPlaceOnUnorderedEventList
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.uxTaskResetEventItemValue) for uxTaskResetEventItemValue
    event_groups.o(.text.xEventGroupWaitBits) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    event_groups.o(.text.xEventGroupWaitBits) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    event_groups.o(.ARM.exidx.text.xEventGroupWaitBits) refers to event_groups.o(.text.xEventGroupWaitBits) for [Anonymous Symbol]
    event_groups.o(.ARM.exidx.text.prvTestWaitCondition) refers to event_groups.o(.text.prvTestWaitCondition) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupClearBits) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    event_groups.o(.text.xEventGroupClearBits) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    event_groups.o(.ARM.exidx.text.xEventGroupClearBits) refers to event_groups.o(.text.xEventGroupClearBits) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupClearBitsFromISR) refers to event_groups.o(.text.vEventGroupClearBitsCallback) for vEventGroupClearBitsCallback
    event_groups.o(.text.xEventGroupClearBitsFromISR) refers to timers.o(.text.xTimerPendFunctionCallFromISR) for xTimerPendFunctionCallFromISR
    event_groups.o(.ARM.exidx.text.xEventGroupClearBitsFromISR) refers to event_groups.o(.text.xEventGroupClearBitsFromISR) for [Anonymous Symbol]
    event_groups.o(.text.vEventGroupClearBitsCallback) refers to event_groups.o(.text.xEventGroupClearBits) for xEventGroupClearBits
    event_groups.o(.ARM.exidx.text.vEventGroupClearBitsCallback) refers to event_groups.o(.text.vEventGroupClearBitsCallback) for [Anonymous Symbol]
    event_groups.o(.ARM.exidx.text.xEventGroupGetBitsFromISR) refers to event_groups.o(.text.xEventGroupGetBitsFromISR) for [Anonymous Symbol]
    event_groups.o(.text.vEventGroupDelete) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(.text.vEventGroupDelete) refers to tasks.o(.text.vTaskRemoveFromUnorderedEventList) for vTaskRemoveFromUnorderedEventList
    event_groups.o(.text.vEventGroupDelete) refers to heap_4.o(.text.vPortFree) for vPortFree
    event_groups.o(.text.vEventGroupDelete) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(.ARM.exidx.text.vEventGroupDelete) refers to event_groups.o(.text.vEventGroupDelete) for [Anonymous Symbol]
    event_groups.o(.text.vEventGroupSetBitsCallback) refers to event_groups.o(.text.xEventGroupSetBits) for xEventGroupSetBits
    event_groups.o(.ARM.exidx.text.vEventGroupSetBitsCallback) refers to event_groups.o(.text.vEventGroupSetBitsCallback) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupSetBitsFromISR) refers to event_groups.o(.text.vEventGroupSetBitsCallback) for vEventGroupSetBitsCallback
    event_groups.o(.text.xEventGroupSetBitsFromISR) refers to timers.o(.text.xTimerPendFunctionCallFromISR) for xTimerPendFunctionCallFromISR
    event_groups.o(.ARM.exidx.text.xEventGroupSetBitsFromISR) refers to event_groups.o(.text.xEventGroupSetBitsFromISR) for [Anonymous Symbol]
    event_groups.o(.ARM.exidx.text.uxEventGroupGetNumber) refers to event_groups.o(.text.uxEventGroupGetNumber) for [Anonymous Symbol]
    event_groups.o(.ARM.exidx.text.vEventGroupSetNumber) refers to event_groups.o(.text.vEventGroupSetNumber) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialise) refers to list.o(.text.vListInitialise) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialiseItem) refers to list.o(.text.vListInitialiseItem) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsertEnd) refers to list.o(.text.vListInsertEnd) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsert) refers to list.o(.text.vListInsert) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.uxListRemove) refers to list.o(.text.uxListRemove) for [Anonymous Symbol]
    port.o(.text.pxPortInitialiseStack) refers to port.o(.text.prvTaskExitError) for prvTaskExitError
    port.o(.ARM.exidx.text.pxPortInitialiseStack) refers to port.o(.text.pxPortInitialiseStack) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.prvTaskExitError) refers to port.o(.text.prvTaskExitError) for [Anonymous Symbol]
    port.o(.text.SVC_Handler) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    port.o(.ARM.exidx.text.SVC_Handler) refers to port.o(.text.SVC_Handler) for [Anonymous Symbol]
    port.o(.text.xPortStartScheduler) refers to port.o(.text.vPortSetupTimerInterrupt) for vPortSetupTimerInterrupt
    port.o(.text.xPortStartScheduler) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.text.xPortStartScheduler) refers to port.o(.text.vPortEnableVFP) for vPortEnableVFP
    port.o(.text.xPortStartScheduler) refers to port.o(.text.prvPortStartFirstTask) for prvPortStartFirstTask
    port.o(.text.xPortStartScheduler) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.text.xPortStartScheduler) refers to port.o(.text.prvTaskExitError) for prvTaskExitError
    port.o(.ARM.exidx.text.xPortStartScheduler) refers to port.o(.text.xPortStartScheduler) for [Anonymous Symbol]
    port.o(.text.vPortSetupTimerInterrupt) refers to system_stm32f4xx.o(.data.SystemCoreClock) for SystemCoreClock
    port.o(.ARM.exidx.text.vPortSetupTimerInterrupt) refers to port.o(.text.vPortSetupTimerInterrupt) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.vPortEnableVFP) refers to port.o(.text.vPortEnableVFP) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.prvPortStartFirstTask) refers to port.o(.text.prvPortStartFirstTask) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.vPortEndScheduler) refers to port.o(.text.vPortEndScheduler) for [Anonymous Symbol]
    port.o(.text.vPortEnterCritical) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortEnterCritical) refers to port.o(.text.vPortEnterCritical) for [Anonymous Symbol]
    port.o(.text.vPortExitCritical) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortExitCritical) refers to port.o(.text.vPortExitCritical) for [Anonymous Symbol]
    port.o(.text.PendSV_Handler) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.text.PendSV_Handler) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    port.o(.ARM.exidx.text.PendSV_Handler) refers to port.o(.text.PendSV_Handler) for [Anonymous Symbol]
    port.o(.text.xPortSysTickHandler) refers to tasks.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    port.o(.ARM.exidx.text.xPortSysTickHandler) refers to port.o(.text.xPortSysTickHandler) for [Anonymous Symbol]
    heap_4.o(.text.pvPortMalloc) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.pxEnd) for pxEnd
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.text.prvHeapInit) for prvHeapInit
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xBlockAllocatedBit) for xBlockAllocatedBit
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xStart) for xStart
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.text.prvInsertBlockIntoFreeList) for prvInsertBlockIntoFreeList
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xNumberOfSuccessfulAllocations) for xNumberOfSuccessfulAllocations
    heap_4.o(.text.pvPortMalloc) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(.ARM.exidx.text.pvPortMalloc) refers to heap_4.o(.text.pvPortMalloc) for [Anonymous Symbol]
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.ucHeap) for ucHeap
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.xStart) for xStart
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.pxEnd) for pxEnd
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.xBlockAllocatedBit) for xBlockAllocatedBit
    heap_4.o(.ARM.exidx.text.prvHeapInit) refers to heap_4.o(.text.prvHeapInit) for [Anonymous Symbol]
    heap_4.o(.text.prvInsertBlockIntoFreeList) refers to heap_4.o(.bss.xStart) for xStart
    heap_4.o(.text.prvInsertBlockIntoFreeList) refers to heap_4.o(.bss.pxEnd) for pxEnd
    heap_4.o(.ARM.exidx.text.prvInsertBlockIntoFreeList) refers to heap_4.o(.text.prvInsertBlockIntoFreeList) for [Anonymous Symbol]
    heap_4.o(.text.vPortFree) refers to heap_4.o(.bss.xBlockAllocatedBit) for xBlockAllocatedBit
    heap_4.o(.text.vPortFree) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(.text.vPortFree) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.text.vPortFree) refers to heap_4.o(.text.prvInsertBlockIntoFreeList) for prvInsertBlockIntoFreeList
    heap_4.o(.text.vPortFree) refers to heap_4.o(.bss.xNumberOfSuccessfulFrees) for xNumberOfSuccessfulFrees
    heap_4.o(.text.vPortFree) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(.ARM.exidx.text.vPortFree) refers to heap_4.o(.text.vPortFree) for [Anonymous Symbol]
    heap_4.o(.text.xPortGetFreeHeapSize) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.ARM.exidx.text.xPortGetFreeHeapSize) refers to heap_4.o(.text.xPortGetFreeHeapSize) for [Anonymous Symbol]
    heap_4.o(.text.xPortGetMinimumEverFreeHeapSize) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4.o(.ARM.exidx.text.xPortGetMinimumEverFreeHeapSize) refers to heap_4.o(.text.xPortGetMinimumEverFreeHeapSize) for [Anonymous Symbol]
    heap_4.o(.ARM.exidx.text.vPortInitialiseBlocks) refers to heap_4.o(.text.vPortInitialiseBlocks) for [Anonymous Symbol]
    heap_4.o(.text.vPortGetHeapStats) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xStart) for xStart
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.pxEnd) for pxEnd
    heap_4.o(.text.vPortGetHeapStats) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(.text.vPortGetHeapStats) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xNumberOfSuccessfulAllocations) for xNumberOfSuccessfulAllocations
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xNumberOfSuccessfulFrees) for xNumberOfSuccessfulFrees
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4.o(.text.vPortGetHeapStats) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    heap_4.o(.ARM.exidx.text.vPortGetHeapStats) refers to heap_4.o(.text.vPortGetHeapStats) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericReset) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericReset) refers to list.o(.text.vListInitialise) for vListInitialise
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueGenericReset) refers to queue.o(.text.xQueueGenericReset) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericCreateStatic) refers to queue.o(.text.prvInitialiseNewQueue) for prvInitialiseNewQueue
    queue.o(.ARM.exidx.text.xQueueGenericCreateStatic) refers to queue.o(.text.xQueueGenericCreateStatic) for [Anonymous Symbol]
    queue.o(.text.prvInitialiseNewQueue) refers to queue.o(.text.xQueueGenericReset) for xQueueGenericReset
    queue.o(.ARM.exidx.text.prvInitialiseNewQueue) refers to queue.o(.text.prvInitialiseNewQueue) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    queue.o(.text.xQueueGenericCreate) refers to queue.o(.text.prvInitialiseNewQueue) for prvInitialiseNewQueue
    queue.o(.ARM.exidx.text.xQueueGenericCreate) refers to queue.o(.text.xQueueGenericCreate) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateMutex) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.text.xQueueCreateMutex) refers to queue.o(.text.prvInitialiseMutex) for prvInitialiseMutex
    queue.o(.ARM.exidx.text.xQueueCreateMutex) refers to queue.o(.text.xQueueCreateMutex) for [Anonymous Symbol]
    queue.o(.text.prvInitialiseMutex) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue.o(.ARM.exidx.text.prvInitialiseMutex) refers to queue.o(.text.prvInitialiseMutex) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateMutexStatic) refers to queue.o(.text.xQueueGenericCreateStatic) for xQueueGenericCreateStatic
    queue.o(.text.xQueueCreateMutexStatic) refers to queue.o(.text.prvInitialiseMutex) for prvInitialiseMutex
    queue.o(.ARM.exidx.text.xQueueCreateMutexStatic) refers to queue.o(.text.xQueueCreateMutexStatic) for [Anonymous Symbol]
    queue.o(.text.xQueueGetMutexHolder) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGetMutexHolder) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueGetMutexHolder) refers to queue.o(.text.xQueueGetMutexHolder) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueGetMutexHolderFromISR) refers to queue.o(.text.xQueueGetMutexHolderFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueGiveMutexRecursive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(.text.xQueueGiveMutexRecursive) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue.o(.ARM.exidx.text.xQueueGiveMutexRecursive) refers to queue.o(.text.xQueueGiveMutexRecursive) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvIsQueueFull) for prvIsQueueFull
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.ARM.exidx.text.xQueueGenericSend) refers to queue.o(.text.xQueueGenericSend) for [Anonymous Symbol]
    queue.o(.text.xQueueTakeMutexRecursive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(.text.xQueueTakeMutexRecursive) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    queue.o(.ARM.exidx.text.xQueueTakeMutexRecursive) refers to queue.o(.text.xQueueTakeMutexRecursive) for [Anonymous Symbol]
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.pvTaskIncrementMutexHeldCount) for pvTaskIncrementMutexHeldCount
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskPriorityInherit) for xTaskPriorityInherit
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvGetDisinheritPriorityAfterTimeout) for prvGetDisinheritPriorityAfterTimeout
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) for vTaskPriorityDisinheritAfterTimeout
    queue.o(.ARM.exidx.text.xQueueSemaphoreTake) refers to queue.o(.text.xQueueSemaphoreTake) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateCountingSemaphoreStatic) refers to queue.o(.text.xQueueGenericCreateStatic) for xQueueGenericCreateStatic
    queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphoreStatic) refers to queue.o(.text.xQueueCreateCountingSemaphoreStatic) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateCountingSemaphore) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphore) refers to queue.o(.text.xQueueCreateCountingSemaphore) for [Anonymous Symbol]
    queue.o(.text.prvCopyDataToQueue) refers to tasks.o(.text.xTaskPriorityDisinherit) for xTaskPriorityDisinherit
    queue.o(.text.prvCopyDataToQueue) refers to memcpya.o(.text) for __aeabi_memcpy
    queue.o(.ARM.exidx.text.prvCopyDataToQueue) refers to queue.o(.text.prvCopyDataToQueue) for [Anonymous Symbol]
    queue.o(.text.prvIsQueueFull) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvIsQueueFull) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvIsQueueFull) refers to queue.o(.text.prvIsQueueFull) for [Anonymous Symbol]
    queue.o(.text.prvUnlockQueue) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvUnlockQueue) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.prvUnlockQueue) refers to tasks.o(.text.vTaskMissedYield) for vTaskMissedYield
    queue.o(.text.prvUnlockQueue) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvUnlockQueue) refers to queue.o(.text.prvUnlockQueue) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericSendFromISR) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.xQueueGenericSendFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueGenericSendFromISR) refers to queue.o(.text.xQueueGenericSendFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueGiveFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueGiveFromISR) refers to queue.o(.text.xQueueGiveFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.ARM.exidx.text.xQueueReceive) refers to queue.o(.text.xQueueReceive) for [Anonymous Symbol]
    queue.o(.text.prvCopyDataFromQueue) refers to memcpya.o(.text) for __aeabi_memcpy
    queue.o(.ARM.exidx.text.prvCopyDataFromQueue) refers to queue.o(.text.prvCopyDataFromQueue) for [Anonymous Symbol]
    queue.o(.text.prvIsQueueEmpty) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvIsQueueEmpty) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvIsQueueEmpty) refers to queue.o(.text.prvIsQueueEmpty) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.prvGetDisinheritPriorityAfterTimeout) refers to queue.o(.text.prvGetDisinheritPriorityAfterTimeout) for [Anonymous Symbol]
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.ARM.exidx.text.xQueuePeek) refers to queue.o(.text.xQueuePeek) for [Anonymous Symbol]
    queue.o(.text.xQueueReceiveFromISR) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueueReceiveFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueReceiveFromISR) refers to queue.o(.text.xQueueReceiveFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueuePeekFromISR) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.ARM.exidx.text.xQueuePeekFromISR) refers to queue.o(.text.xQueuePeekFromISR) for [Anonymous Symbol]
    queue.o(.text.uxQueueMessagesWaiting) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.uxQueueMessagesWaiting) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.uxQueueMessagesWaiting) refers to queue.o(.text.uxQueueMessagesWaiting) for [Anonymous Symbol]
    queue.o(.text.uxQueueSpacesAvailable) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.uxQueueSpacesAvailable) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.uxQueueSpacesAvailable) refers to queue.o(.text.uxQueueSpacesAvailable) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for [Anonymous Symbol]
    queue.o(.text.vQueueDelete) refers to heap_4.o(.text.vPortFree) for vPortFree
    queue.o(.ARM.exidx.text.vQueueDelete) refers to queue.o(.text.vQueueDelete) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.uxQueueGetQueueNumber) refers to queue.o(.text.uxQueueGetQueueNumber) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.vQueueSetQueueNumber) refers to queue.o(.text.vQueueSetQueueNumber) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.ucQueueGetQueueType) refers to queue.o(.text.ucQueueGetQueueType) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR) refers to queue.o(.text.xQueueIsQueueEmptyFromISR) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueIsQueueFullFromISR) refers to queue.o(.text.xQueueIsQueueFullFromISR) for [Anonymous Symbol]
    queue.o(.text.vQueueWaitForMessageRestricted) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.vQueueWaitForMessageRestricted) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.vQueueWaitForMessageRestricted) refers to tasks.o(.text.vTaskPlaceOnEventListRestricted) for vTaskPlaceOnEventListRestricted
    queue.o(.text.vQueueWaitForMessageRestricted) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.ARM.exidx.text.vQueueWaitForMessageRestricted) refers to queue.o(.text.vQueueWaitForMessageRestricted) for [Anonymous Symbol]
    tasks.o(.text.xTaskCreateStatic) refers to tasks.o(.text.prvInitialiseNewTask) for prvInitialiseNewTask
    tasks.o(.text.xTaskCreateStatic) refers to tasks.o(.text.prvAddNewTaskToReadyList) for prvAddNewTaskToReadyList
    tasks.o(.ARM.exidx.text.xTaskCreateStatic) refers to tasks.o(.text.xTaskCreateStatic) for [Anonymous Symbol]
    tasks.o(.text.prvInitialiseNewTask) refers to memseta.o(.text) for __aeabi_memset4
    tasks.o(.text.prvInitialiseNewTask) refers to list.o(.text.vListInitialiseItem) for vListInitialiseItem
    tasks.o(.text.prvInitialiseNewTask) refers to port.o(.text.pxPortInitialiseStack) for pxPortInitialiseStack
    tasks.o(.ARM.exidx.text.prvInitialiseNewTask) refers to tasks.o(.text.prvInitialiseNewTask) for [Anonymous Symbol]
    tasks.o(.text.prvAddNewTaskToReadyList) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.text.prvInitialiseTaskLists) for prvInitialiseTaskLists
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxTaskNumber) for uxTaskNumber
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvAddNewTaskToReadyList) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.prvAddNewTaskToReadyList) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.prvAddNewTaskToReadyList) refers to tasks.o(.text.prvAddNewTaskToReadyList) for [Anonymous Symbol]
    tasks.o(.text.xTaskCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    tasks.o(.text.xTaskCreate) refers to heap_4.o(.text.vPortFree) for vPortFree
    tasks.o(.text.xTaskCreate) refers to tasks.o(.text.prvInitialiseNewTask) for prvInitialiseNewTask
    tasks.o(.text.xTaskCreate) refers to tasks.o(.text.prvAddNewTaskToReadyList) for prvAddNewTaskToReadyList
    tasks.o(.ARM.exidx.text.xTaskCreate) refers to tasks.o(.text.xTaskCreate) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelete) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskDelete) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxTaskNumber) for uxTaskNumber
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.vTaskDelete) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxDeletedTasksWaitingCleanUp) for uxDeletedTasksWaitingCleanUp
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.vTaskDelete) refers to tasks.o(.text.prvDeleteTCB) for prvDeleteTCB
    tasks.o(.text.vTaskDelete) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.vTaskDelete) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.ARM.exidx.text.vTaskDelete) refers to tasks.o(.text.vTaskDelete) for [Anonymous Symbol]
    tasks.o(.text.prvDeleteTCB) refers to heap_4.o(.text.vPortFree) for vPortFree
    tasks.o(.ARM.exidx.text.prvDeleteTCB) refers to tasks.o(.text.prvDeleteTCB) for [Anonymous Symbol]
    tasks.o(.text.prvResetNextTaskUnblockTime) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvResetNextTaskUnblockTime) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.ARM.exidx.text.prvResetNextTaskUnblockTime) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for [Anonymous Symbol]
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskDelayUntil) refers to tasks.o(.text.xTaskDelayUntil) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspendAll) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.vTaskSuspendAll) refers to tasks.o(.text.vTaskSuspendAll) for [Anonymous Symbol]
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeAll) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskResumeAll) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskResumeAll) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    tasks.o(.text.xTaskResumeAll) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskResumeAll) refers to tasks.o(.text.xTaskResumeAll) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.vTaskDelay) refers to tasks.o(.text.vTaskDelay) for [Anonymous Symbol]
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.eTaskGetState) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.eTaskGetState) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.ARM.exidx.text.eTaskGetState) refers to tasks.o(.text.eTaskGetState) for [Anonymous Symbol]
    tasks.o(.text.uxTaskPriorityGet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.uxTaskPriorityGet) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.uxTaskPriorityGet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.uxTaskPriorityGet) refers to tasks.o(.text.uxTaskPriorityGet) for [Anonymous Symbol]
    tasks.o(.text.uxTaskPriorityGetFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskPriorityGetFromISR) refers to tasks.o(.text.uxTaskPriorityGetFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskPrioritySet) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskPrioritySet) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskPrioritySet) refers to tasks.o(.text.vTaskPrioritySet) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskSuspend) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.vTaskSuspend) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskSuspend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    tasks.o(.ARM.exidx.text.vTaskSuspend) refers to tasks.o(.text.vTaskSuspend) for [Anonymous Symbol]
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskSwitchContext) refers to cmsis_os2.o(.text.vApplicationStackOverflowHook) for vApplicationStackOverflowHook
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.ARM.exidx.text.vTaskSwitchContext) refers to tasks.o(.text.vTaskSwitchContext) for [Anonymous Symbol]
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskResume) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskResume) refers to tasks.o(.text.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(.text.vTaskResume) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskResume) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskResume) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskResume) refers to tasks.o(.text.vTaskResume) for [Anonymous Symbol]
    tasks.o(.text.prvTaskIsTaskSuspended) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvTaskIsTaskSuspended) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.ARM.exidx.text.prvTaskIsTaskSuspended) refers to tasks.o(.text.prvTaskIsTaskSuspended) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.text.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.xTaskResumeFromISR) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskResumeFromISR) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.ARM.exidx.text.xTaskResumeFromISR) refers to tasks.o(.text.xTaskResumeFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskStartScheduler) refers to cmsis_os2.o(.text.vApplicationGetIdleTaskMemory) for vApplicationGetIdleTaskMemory
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.text.prvIdleTask) for prvIdleTask
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.rodata.str1.1) for .L.str
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.text.xTaskCreateStatic) for xTaskCreateStatic
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xIdleTaskHandle) for xIdleTaskHandle
    tasks.o(.text.vTaskStartScheduler) refers to timers.o(.text.xTimerCreateTimerTask) for xTimerCreateTimerTask
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskStartScheduler) refers to port.o(.text.xPortStartScheduler) for xPortStartScheduler
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.rodata.uxTopUsedPriority) for uxTopUsedPriority
    tasks.o(.ARM.exidx.text.vTaskStartScheduler) refers to tasks.o(.text.vTaskStartScheduler) for [Anonymous Symbol]
    tasks.o(.text.prvIdleTask) refers to tasks.o(.text.prvCheckTasksWaitingTermination) for prvCheckTasksWaitingTermination
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.ARM.exidx.text.prvIdleTask) refers to tasks.o(.text.prvIdleTask) for [Anonymous Symbol]
    tasks.o(.text.vTaskEndScheduler) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskEndScheduler) refers to port.o(.text.vPortEndScheduler) for vPortEndScheduler
    tasks.o(.ARM.exidx.text.vTaskEndScheduler) refers to tasks.o(.text.vTaskEndScheduler) for [Anonymous Symbol]
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.xTaskIncrementTick) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskIncrementTick) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.ARM.exidx.text.xTaskIncrementTick) refers to tasks.o(.text.xTaskIncrementTick) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetTickCount) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.xTaskGetTickCount) refers to tasks.o(.text.xTaskGetTickCount) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetTickCountFromISR) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.xTaskGetTickCountFromISR) refers to tasks.o(.text.xTaskGetTickCountFromISR) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetNumberOfTasks) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.ARM.exidx.text.uxTaskGetNumberOfTasks) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for [Anonymous Symbol]
    tasks.o(.text.pcTaskGetName) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.pcTaskGetName) refers to tasks.o(.text.pcTaskGetName) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.prvListTasksWithinSingleList) for prvListTasksWithinSingleList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.uxTaskGetSystemState) refers to tasks.o(.text.uxTaskGetSystemState) for [Anonymous Symbol]
    tasks.o(.text.prvListTasksWithinSingleList) refers to tasks.o(.text.vTaskGetInfo) for vTaskGetInfo
    tasks.o(.ARM.exidx.text.prvListTasksWithinSingleList) refers to tasks.o(.text.prvListTasksWithinSingleList) for [Anonymous Symbol]
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskCatchUpTicks) refers to tasks.o(.text.xTaskCatchUpTicks) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnEventList) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.vTaskPlaceOnEventList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnEventList) refers to tasks.o(.text.vTaskPlaceOnEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.text.vTaskPlaceOnUnorderedEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnEventListRestricted) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.text.vTaskPlaceOnEventListRestricted) for [Anonymous Symbol]
    tasks.o(.text.xTaskRemoveFromEventList) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskRemoveFromEventList) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.xTaskRemoveFromEventList) refers to tasks.o(.text.xTaskRemoveFromEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.text.vTaskRemoveFromUnorderedEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskSetTimeOutState) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskSetTimeOutState) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.vTaskSetTimeOutState) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskSetTimeOutState) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskSetTimeOutState) refers to tasks.o(.text.vTaskSetTimeOutState) for [Anonymous Symbol]
    tasks.o(.text.vTaskInternalSetTimeOutState) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.vTaskInternalSetTimeOutState) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.vTaskInternalSetTimeOutState) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for [Anonymous Symbol]
    tasks.o(.text.xTaskCheckForTimeOut) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    tasks.o(.text.xTaskCheckForTimeOut) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskCheckForTimeOut) refers to tasks.o(.text.xTaskCheckForTimeOut) for [Anonymous Symbol]
    tasks.o(.text.vTaskMissedYield) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskMissedYield) refers to tasks.o(.text.vTaskMissedYield) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.uxTaskGetTaskNumber) refers to tasks.o(.text.uxTaskGetTaskNumber) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.vTaskSetTaskNumber) refers to tasks.o(.text.vTaskSetTaskNumber) for [Anonymous Symbol]
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.eTaskGetState) for eTaskGetState
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.prvTaskCheckFreeStackSpace) for prvTaskCheckFreeStackSpace
    tasks.o(.ARM.exidx.text.vTaskGetInfo) refers to tasks.o(.text.vTaskGetInfo) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.prvTaskCheckFreeStackSpace) refers to tasks.o(.text.prvTaskCheckFreeStackSpace) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetStackHighWaterMark) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.uxTaskGetStackHighWaterMark) refers to tasks.o(.text.prvTaskCheckFreeStackSpace) for prvTaskCheckFreeStackSpace
    tasks.o(.ARM.exidx.text.uxTaskGetStackHighWaterMark) refers to tasks.o(.text.uxTaskGetStackHighWaterMark) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetCurrentTaskHandle) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetSchedulerState) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.xTaskGetSchedulerState) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.xTaskGetSchedulerState) refers to tasks.o(.text.xTaskGetSchedulerState) for [Anonymous Symbol]
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskPriorityInherit) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskPriorityInherit) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.ARM.exidx.text.xTaskPriorityInherit) refers to tasks.o(.text.xTaskPriorityInherit) for [Anonymous Symbol]
    tasks.o(.text.xTaskPriorityDisinherit) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskPriorityDisinherit) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.ARM.exidx.text.xTaskPriorityDisinherit) refers to tasks.o(.text.xTaskPriorityDisinherit) for [Anonymous Symbol]
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.ARM.exidx.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) for [Anonymous Symbol]
    tasks.o(.text.uxTaskResetEventItemValue) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskResetEventItemValue) refers to tasks.o(.text.uxTaskResetEventItemValue) for [Anonymous Symbol]
    tasks.o(.text.pvTaskIncrementMutexHeldCount) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.pvTaskIncrementMutexHeldCount) refers to tasks.o(.text.pvTaskIncrementMutexHeldCount) for [Anonymous Symbol]
    tasks.o(.text.ulTaskGenericNotifyTake) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.ulTaskGenericNotifyTake) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.ulTaskGenericNotifyTake) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.ulTaskGenericNotifyTake) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.ulTaskGenericNotifyTake) refers to tasks.o(.text.ulTaskGenericNotifyTake) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyWait) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotifyWait) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyWait) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.xTaskGenericNotifyWait) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyWait) refers to tasks.o(.text.xTaskGenericNotifyWait) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotify) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskGenericNotify) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotify) refers to tasks.o(.text.xTaskGenericNotify) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.text.vTaskGenericNotifyGiveFromISR) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyStateClear) refers to tasks.o(.text.xTaskGenericNotifyStateClear) for [Anonymous Symbol]
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.ulTaskGenericNotifyValueClear) refers to tasks.o(.text.ulTaskGenericNotifyValueClear) for [Anonymous Symbol]
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvInitialiseTaskLists) refers to list.o(.text.vListInitialise) for vListInitialise
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xDelayedTaskList1) for xDelayedTaskList1
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xDelayedTaskList2) for xDelayedTaskList2
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.ARM.exidx.text.prvInitialiseTaskLists) refers to tasks.o(.text.prvInitialiseTaskLists) for [Anonymous Symbol]
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.uxDeletedTasksWaitingCleanUp) for uxDeletedTasksWaitingCleanUp
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.text.prvDeleteTCB) for prvDeleteTCB
    tasks.o(.ARM.exidx.text.prvCheckTasksWaitingTermination) refers to tasks.o(.text.prvCheckTasksWaitingTermination) for [Anonymous Symbol]
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.text.prvCheckForValidListAndQueue) for prvCheckForValidListAndQueue
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerCreateTimerTask) refers to cmsis_os2.o(.text.vApplicationGetTimerTaskMemory) for vApplicationGetTimerTaskMemory
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.text.prvTimerTask) for prvTimerTask
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.rodata.str1.1) for .L.str
    timers.o(.text.xTimerCreateTimerTask) refers to tasks.o(.text.xTaskCreateStatic) for xTaskCreateStatic
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.bss.xTimerTaskHandle) for xTimerTaskHandle
    timers.o(.ARM.exidx.text.xTimerCreateTimerTask) refers to timers.o(.text.xTimerCreateTimerTask) for [Anonymous Symbol]
    timers.o(.text.prvCheckForValidListAndQueue) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.xActiveTimerList1) for xActiveTimerList1
    timers.o(.text.prvCheckForValidListAndQueue) refers to list.o(.text.vListInitialise) for vListInitialise
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.xActiveTimerList2) for xActiveTimerList2
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.prvCheckForValidListAndQueue.ucStaticTimerQueueStorage) for prvCheckForValidListAndQueue.ucStaticTimerQueueStorage
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.prvCheckForValidListAndQueue.xStaticTimerQueue) for prvCheckForValidListAndQueue.xStaticTimerQueue
    timers.o(.text.prvCheckForValidListAndQueue) refers to queue.o(.text.xQueueGenericCreateStatic) for xQueueGenericCreateStatic
    timers.o(.text.prvCheckForValidListAndQueue) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.prvCheckForValidListAndQueue) refers to timers.o(.text.prvCheckForValidListAndQueue) for [Anonymous Symbol]
    timers.o(.text.prvTimerTask) refers to timers.o(.text.prvGetNextExpireTime) for prvGetNextExpireTime
    timers.o(.text.prvTimerTask) refers to timers.o(.text.prvProcessTimerOrBlockTask) for prvProcessTimerOrBlockTask
    timers.o(.text.prvTimerTask) refers to timers.o(.text.prvProcessReceivedCommands) for prvProcessReceivedCommands
    timers.o(.ARM.exidx.text.prvTimerTask) refers to timers.o(.text.prvTimerTask) for [Anonymous Symbol]
    timers.o(.text.xTimerCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    timers.o(.text.xTimerCreate) refers to timers.o(.text.prvInitialiseNewTimer) for prvInitialiseNewTimer
    timers.o(.ARM.exidx.text.xTimerCreate) refers to timers.o(.text.xTimerCreate) for [Anonymous Symbol]
    timers.o(.text.prvInitialiseNewTimer) refers to timers.o(.text.prvCheckForValidListAndQueue) for prvCheckForValidListAndQueue
    timers.o(.text.prvInitialiseNewTimer) refers to list.o(.text.vListInitialiseItem) for vListInitialiseItem
    timers.o(.ARM.exidx.text.prvInitialiseNewTimer) refers to timers.o(.text.prvInitialiseNewTimer) for [Anonymous Symbol]
    timers.o(.text.xTimerCreateStatic) refers to timers.o(.text.prvInitialiseNewTimer) for prvInitialiseNewTimer
    timers.o(.ARM.exidx.text.xTimerCreateStatic) refers to timers.o(.text.xTimerCreateStatic) for [Anonymous Symbol]
    timers.o(.text.xTimerGenericCommand) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerGenericCommand) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    timers.o(.text.xTimerGenericCommand) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    timers.o(.text.xTimerGenericCommand) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    timers.o(.ARM.exidx.text.xTimerGenericCommand) refers to timers.o(.text.xTimerGenericCommand) for [Anonymous Symbol]
    timers.o(.text.xTimerGetTimerDaemonTaskHandle) refers to timers.o(.bss.xTimerTaskHandle) for xTimerTaskHandle
    timers.o(.ARM.exidx.text.xTimerGetTimerDaemonTaskHandle) refers to timers.o(.text.xTimerGetTimerDaemonTaskHandle) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.xTimerGetPeriod) refers to timers.o(.text.xTimerGetPeriod) for [Anonymous Symbol]
    timers.o(.text.vTimerSetReloadMode) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.vTimerSetReloadMode) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.vTimerSetReloadMode) refers to timers.o(.text.vTimerSetReloadMode) for [Anonymous Symbol]
    timers.o(.text.uxTimerGetReloadMode) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.uxTimerGetReloadMode) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.uxTimerGetReloadMode) refers to timers.o(.text.uxTimerGetReloadMode) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.xTimerGetExpiryTime) refers to timers.o(.text.xTimerGetExpiryTime) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.pcTimerGetName) refers to timers.o(.text.pcTimerGetName) for [Anonymous Symbol]
    timers.o(.text.xTimerIsTimerActive) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.xTimerIsTimerActive) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.xTimerIsTimerActive) refers to timers.o(.text.xTimerIsTimerActive) for [Anonymous Symbol]
    timers.o(.text.pvTimerGetTimerID) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.pvTimerGetTimerID) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.pvTimerGetTimerID) refers to timers.o(.text.pvTimerGetTimerID) for [Anonymous Symbol]
    timers.o(.text.vTimerSetTimerID) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.vTimerSetTimerID) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.vTimerSetTimerID) refers to timers.o(.text.vTimerSetTimerID) for [Anonymous Symbol]
    timers.o(.text.xTimerPendFunctionCallFromISR) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerPendFunctionCallFromISR) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    timers.o(.ARM.exidx.text.xTimerPendFunctionCallFromISR) refers to timers.o(.text.xTimerPendFunctionCallFromISR) for [Anonymous Symbol]
    timers.o(.text.xTimerPendFunctionCall) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerPendFunctionCall) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    timers.o(.ARM.exidx.text.xTimerPendFunctionCall) refers to timers.o(.text.xTimerPendFunctionCall) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.uxTimerGetTimerNumber) refers to timers.o(.text.uxTimerGetTimerNumber) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.vTimerSetTimerNumber) refers to timers.o(.text.vTimerSetTimerNumber) for [Anonymous Symbol]
    timers.o(.text.prvGetNextExpireTime) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.ARM.exidx.text.prvGetNextExpireTime) refers to timers.o(.text.prvGetNextExpireTime) for [Anonymous Symbol]
    timers.o(.text.prvProcessTimerOrBlockTask) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.text.prvSampleTimeNow) for prvSampleTimeNow
    timers.o(.text.prvProcessTimerOrBlockTask) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.text.prvProcessExpiredTimer) for prvProcessExpiredTimer
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.prvProcessTimerOrBlockTask) refers to queue.o(.text.vQueueWaitForMessageRestricted) for vQueueWaitForMessageRestricted
    timers.o(.ARM.exidx.text.prvProcessTimerOrBlockTask) refers to timers.o(.text.prvProcessTimerOrBlockTask) for [Anonymous Symbol]
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.prvProcessReceivedCommands) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    timers.o(.text.prvProcessReceivedCommands) refers to list.o(.text.uxListRemove) for uxListRemove
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.text.prvSampleTimeNow) for prvSampleTimeNow
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.text.prvInsertTimerInActiveList) for prvInsertTimerInActiveList
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.text.xTimerGenericCommand) for xTimerGenericCommand
    timers.o(.text.prvProcessReceivedCommands) refers to heap_4.o(.text.vPortFree) for vPortFree
    timers.o(.ARM.exidx.text.prvProcessReceivedCommands) refers to timers.o(.text.prvProcessReceivedCommands) for [Anonymous Symbol]
    timers.o(.text.prvSampleTimeNow) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    timers.o(.text.prvSampleTimeNow) refers to timers.o(.bss.prvSampleTimeNow.xLastTime) for prvSampleTimeNow.xLastTime
    timers.o(.text.prvSampleTimeNow) refers to timers.o(.text.prvSwitchTimerLists) for prvSwitchTimerLists
    timers.o(.ARM.exidx.text.prvSampleTimeNow) refers to timers.o(.text.prvSampleTimeNow) for [Anonymous Symbol]
    timers.o(.text.prvProcessExpiredTimer) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvProcessExpiredTimer) refers to list.o(.text.uxListRemove) for uxListRemove
    timers.o(.text.prvProcessExpiredTimer) refers to timers.o(.text.prvInsertTimerInActiveList) for prvInsertTimerInActiveList
    timers.o(.text.prvProcessExpiredTimer) refers to timers.o(.text.xTimerGenericCommand) for xTimerGenericCommand
    timers.o(.ARM.exidx.text.prvProcessExpiredTimer) refers to timers.o(.text.prvProcessExpiredTimer) for [Anonymous Symbol]
    timers.o(.text.prvSwitchTimerLists) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvSwitchTimerLists) refers to list.o(.text.uxListRemove) for uxListRemove
    timers.o(.text.prvSwitchTimerLists) refers to list.o(.text.vListInsert) for vListInsert
    timers.o(.text.prvSwitchTimerLists) refers to timers.o(.text.xTimerGenericCommand) for xTimerGenericCommand
    timers.o(.text.prvSwitchTimerLists) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.ARM.exidx.text.prvSwitchTimerLists) refers to timers.o(.text.prvSwitchTimerLists) for [Anonymous Symbol]
    timers.o(.text.prvInsertTimerInActiveList) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.prvInsertTimerInActiveList) refers to list.o(.text.vListInsert) for vListInsert
    timers.o(.text.prvInsertTimerInActiveList) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.ARM.exidx.text.prvInsertTimerInActiveList) refers to timers.o(.text.prvInsertTimerInActiveList) for [Anonymous Symbol]
    new.cpp.o(.text._ZSt17__throw_bad_allocv) refers to retarget_io.o(.text.abort) for abort
    new.cpp.o(.ARM.exidx.text._ZSt17__throw_bad_allocv) refers to new.cpp.o(.text._ZSt17__throw_bad_allocv) for [Anonymous Symbol]
    new.cpp.o(.text._Znwj) refers to malloca.o(i.__malloc$memalign) for malloc
    new.cpp.o(.text._Znwj) refers to cxa_handlers.cpp.o(.text._ZSt15get_new_handlerv) for std::get_new_handler()
    new.cpp.o(.ARM.exidx.text._Znwj) refers to new.cpp.o(.text._Znwj) for [Anonymous Symbol]
    new.cpp.o(.text._ZnwjRKSt9nothrow_t) refers to new.cpp.o(.text._Znwj) for operator new(unsigned int)
    new.cpp.o(.ARM.exidx.text._ZnwjRKSt9nothrow_t) refers to new.cpp.o(.text._ZnwjRKSt9nothrow_t) for [Anonymous Symbol]
    new.cpp.o(.text._Znaj) refers to new.cpp.o(.text._Znwj) for operator new(unsigned int)
    new.cpp.o(.ARM.exidx.text._Znaj) refers to new.cpp.o(.text._Znaj) for [Anonymous Symbol]
    new.cpp.o(.text._ZnajRKSt9nothrow_t) refers to new.cpp.o(.text._Znaj) for operator new[](unsigned int)
    new.cpp.o(.ARM.exidx.text._ZnajRKSt9nothrow_t) refers to new.cpp.o(.text._ZnajRKSt9nothrow_t) for [Anonymous Symbol]
    new.cpp.o(.text._ZdlPv) refers to malloca.o(i.__free$memalign) for free
    new.cpp.o(.ARM.exidx.text._ZdlPv) refers to new.cpp.o(.text._ZdlPv) for [Anonymous Symbol]
    new.cpp.o(.text._ZdlPvRKSt9nothrow_t) refers to new.cpp.o(.text._ZdlPv) for operator delete(void*)
    new.cpp.o(.ARM.exidx.text._ZdlPvRKSt9nothrow_t) refers to new.cpp.o(.text._ZdlPvRKSt9nothrow_t) for [Anonymous Symbol]
    new.cpp.o(.text._ZdlPvj) refers to new.cpp.o(.text._ZdlPv) for operator delete(void*)
    new.cpp.o(.ARM.exidx.text._ZdlPvj) refers to new.cpp.o(.text._ZdlPvj) for [Anonymous Symbol]
    new.cpp.o(.text._ZdaPv) refers to new.cpp.o(.text._ZdlPv) for operator delete(void*)
    new.cpp.o(.ARM.exidx.text._ZdaPv) refers to new.cpp.o(.text._ZdaPv) for [Anonymous Symbol]
    new.cpp.o(.text._ZdaPvRKSt9nothrow_t) refers to new.cpp.o(.text._ZdaPv) for operator delete[](void*)
    new.cpp.o(.ARM.exidx.text._ZdaPvRKSt9nothrow_t) refers to new.cpp.o(.text._ZdaPvRKSt9nothrow_t) for [Anonymous Symbol]
    new.cpp.o(.text._ZdaPvj) refers to new.cpp.o(.text._ZdaPv) for operator delete[](void*)
    new.cpp.o(.ARM.exidx.text._ZdaPvj) refers to new.cpp.o(.text._ZdaPvj) for [Anonymous Symbol]
    new.cpp.o(.text._ZnwjSt11align_val_t) refers to memalign.o(.text) for posix_memalign
    new.cpp.o(.text._ZnwjSt11align_val_t) refers to cxa_handlers.cpp.o(.text._ZSt15get_new_handlerv) for std::get_new_handler()
    new.cpp.o(.ARM.exidx.text._ZnwjSt11align_val_t) refers to new.cpp.o(.text._ZnwjSt11align_val_t) for [Anonymous Symbol]
    new.cpp.o(.text._ZnwjSt11align_val_tRKSt9nothrow_t) refers to new.cpp.o(.text._ZnwjSt11align_val_t) for operator new(unsigned int, std::align_val_t)
    new.cpp.o(.ARM.exidx.text._ZnwjSt11align_val_tRKSt9nothrow_t) refers to new.cpp.o(.text._ZnwjSt11align_val_tRKSt9nothrow_t) for [Anonymous Symbol]
    new.cpp.o(.text._ZnajSt11align_val_t) refers to new.cpp.o(.text._ZnwjSt11align_val_t) for operator new(unsigned int, std::align_val_t)
    new.cpp.o(.ARM.exidx.text._ZnajSt11align_val_t) refers to new.cpp.o(.text._ZnajSt11align_val_t) for [Anonymous Symbol]
    new.cpp.o(.text._ZnajSt11align_val_tRKSt9nothrow_t) refers to new.cpp.o(.text._ZnajSt11align_val_t) for operator new[](unsigned int, std::align_val_t)
    new.cpp.o(.ARM.exidx.text._ZnajSt11align_val_tRKSt9nothrow_t) refers to new.cpp.o(.text._ZnajSt11align_val_tRKSt9nothrow_t) for [Anonymous Symbol]
    new.cpp.o(.text._ZdlPvSt11align_val_t) refers to malloca.o(i.__free$memalign) for free
    new.cpp.o(.ARM.exidx.text._ZdlPvSt11align_val_t) refers to new.cpp.o(.text._ZdlPvSt11align_val_t) for [Anonymous Symbol]
    new.cpp.o(.text._ZdlPvSt11align_val_tRKSt9nothrow_t) refers to new.cpp.o(.text._ZdlPvSt11align_val_t) for operator delete(void*, std::align_val_t)
    new.cpp.o(.ARM.exidx.text._ZdlPvSt11align_val_tRKSt9nothrow_t) refers to new.cpp.o(.text._ZdlPvSt11align_val_tRKSt9nothrow_t) for [Anonymous Symbol]
    new.cpp.o(.text._ZdlPvjSt11align_val_t) refers to new.cpp.o(.text._ZdlPvSt11align_val_t) for operator delete(void*, std::align_val_t)
    new.cpp.o(.ARM.exidx.text._ZdlPvjSt11align_val_t) refers to new.cpp.o(.text._ZdlPvjSt11align_val_t) for [Anonymous Symbol]
    new.cpp.o(.text._ZdaPvSt11align_val_t) refers to new.cpp.o(.text._ZdlPvSt11align_val_t) for operator delete(void*, std::align_val_t)
    new.cpp.o(.ARM.exidx.text._ZdaPvSt11align_val_t) refers to new.cpp.o(.text._ZdaPvSt11align_val_t) for [Anonymous Symbol]
    new.cpp.o(.text._ZdaPvSt11align_val_tRKSt9nothrow_t) refers to new.cpp.o(.text._ZdaPvSt11align_val_t) for operator delete[](void*, std::align_val_t)
    new.cpp.o(.ARM.exidx.text._ZdaPvSt11align_val_tRKSt9nothrow_t) refers to new.cpp.o(.text._ZdaPvSt11align_val_tRKSt9nothrow_t) for [Anonymous Symbol]
    new.cpp.o(.text._ZdaPvjSt11align_val_t) refers to new.cpp.o(.text._ZdaPvSt11align_val_t) for operator delete[](void*, std::align_val_t)
    new.cpp.o(.ARM.exidx.text._ZdaPvjSt11align_val_t) refers to new.cpp.o(.text._ZdaPvjSt11align_val_t) for [Anonymous Symbol]
    cxa_virtual.cpp.o(.text.__cxa_pure_virtual) refers to abort_message.cpp.o(.text.abort_message) for abort_message
    cxa_virtual.cpp.o(.ARM.exidx.text.__cxa_pure_virtual) refers to cxa_virtual.cpp.o(.text.__cxa_pure_virtual) for [Anonymous Symbol]
    cxa_virtual.cpp.o(.text.__cxa_deleted_virtual) refers to abort_message.cpp.o(.text.abort_message) for abort_message
    cxa_virtual.cpp.o(.ARM.exidx.text.__cxa_deleted_virtual) refers to cxa_virtual.cpp.o(.text.__cxa_deleted_virtual) for [Anonymous Symbol]
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry10a.o(.ARM.Collect$$$$0000000D) for __rt_final_cpp
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry11a.o(.ARM.Collect$$$$0000000F) for __rt_final_exit
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry7b.o(.ARM.Collect$$$$00000008) for _main_clock
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry8b.o(.ARM.Collect$$$$0000000A) for _main_cpp_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry9a.o(.ARM.Collect$$$$0000000B) for _main_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry5.o(.ARM.Collect$$$$00000004) for _main_scatterload
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry2.o(.ARM.Collect$$$$00000001) for _main_stk
    fputs.o(i.fputs) refers to retarget_io.o(.text.fputc) for fputc
    fputs_e.o(.text) refers to retarget_io.o(.text.fputc) for fputc
    uldiv.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    uldiv.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    ctype_o.o(.text) refers to ctype_o.o(.constdata) for .constdata
    ctype_o.o(.constdata) refers to ctype_o.o(.constdata) for __ctype_table
    isalnum_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    isalpha_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    isblank_o.o(.text) refers to ctype_o.o(.constdata) for __ctype_table
    iscntrl_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    isdigit_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    isgraph_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    islower_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    isprint_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    ispunct_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    isspace_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    isupper_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    isxdigit_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    printfa.o(i.__0fprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0fprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0fprintf) refers to retarget_io.o(.text.fputc) for fputc
    printfa.o(i.__0printf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0printf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0printf) refers to retarget_io.o(.text.fputc) for fputc
    printfa.o(i.__0printf) refers to stdout.o(.data) for __stdout
    printfa.o(i.__0snprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0snprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0snprintf) refers to printfa.o(i._snputc) for _snputc
    printfa.o(i.__0sprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0sprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0sprintf) refers to printfa.o(i._sputc) for _sputc
    printfa.o(i.__0vfprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vfprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vfprintf) refers to retarget_io.o(.text.fputc) for fputc
    printfa.o(i.__0vprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vprintf) refers to retarget_io.o(.text.fputc) for fputc
    printfa.o(i.__0vprintf) refers to stdout.o(.data) for __stdout
    printfa.o(i.__0vsnprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vsnprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vsnprintf) refers to printfa.o(i._snputc) for _snputc
    printfa.o(i.__0vsprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vsprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vsprintf) refers to printfa.o(i._sputc) for _sputc
    printfa.o(i._fp_digits) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._fp_digits) refers to dmul.o(.text) for __aeabi_dmul
    printfa.o(i._fp_digits) refers to ddiv.o(.text) for __aeabi_ddiv
    printfa.o(i._fp_digits) refers to cdrcmple.o(.text) for __aeabi_cdrcmple
    printfa.o(i._fp_digits) refers to dadd.o(.text) for __aeabi_dadd
    printfa.o(i._fp_digits) refers to dfixul.o(.text) for __aeabi_d2ulz
    printfa.o(i._fp_digits) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i._printf_core) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._printf_core) refers to printfa.o(i._printf_pre_padding) for _printf_pre_padding
    printfa.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i._printf_core) refers to printfa.o(i._printf_post_padding) for _printf_post_padding
    printfa.o(i._printf_core) refers to printfa.o(i._fp_digits) for _fp_digits
    printfa.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printfa.o(i._printf_post_padding) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._printf_pre_padding) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._snputc) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._sputc) refers (Special) to iusefp.o(.text) for __I$use$fp
    malloc.o(i.free) refers to mvars.o(.data) for __microlib_freelist
    malloc.o(i.malloc) refers to mvars.o(.data) for __microlib_freelist_initialised
    malloc.o(i.malloc) refers to mvars.o(.data) for __microlib_freelist
    malloc.o(i.malloc) refers to startup_stm32f429xx.o(HEAP) for __heap_base
    mallocr.o(i.__free$realloc) refers to mvars.o(.data) for __microlib_freelist
    mallocr.o(i.__malloc$realloc) refers to mallocr.o(i.internal_alloc) for internal_alloc
    mallocr.o(i.__malloc$realloc) refers to mvars.o(.data) for __microlib_freelist_initialised
    mallocr.o(i.__malloc$realloc) refers to startup_stm32f429xx.o(HEAP) for __heap_base
    mallocr.o(i.__malloc$realloc) refers to mvars.o(.data) for __microlib_freelist
    mallocr.o(i.internal_alloc) refers to memcpya.o(.text) for __aeabi_memcpy
    mallocr.o(i.internal_alloc) refers to mvars.o(.data) for __microlib_freelist
    mallocr.o(i.realloc) refers to mallocr.o(i.__free$realloc) for __free$realloc
    mallocr.o(i.realloc) refers to mallocr.o(i.internal_alloc) for internal_alloc
    mallocr.o(i.realloc) refers to mallocr.o(i.__malloc$realloc) for __malloc$realloc
    mallocr.o(i.realloc) refers to mvars.o(.data) for __microlib_freelist
    malloca.o(i.__aligned_malloc) refers to mvars.o(.data) for __microlib_freelist_initialised
    malloca.o(i.__aligned_malloc) refers to mvars.o(.data) for __microlib_freelist
    malloca.o(i.__aligned_malloc) refers to startup_stm32f429xx.o(HEAP) for __heap_base
    malloca.o(i.__free$memalign) refers to mvars.o(.data) for __microlib_freelist
    malloca.o(i.__malloc$memalign) refers to malloca.o(i.__aligned_malloc) for __aligned_malloc
    mallocra.o(i.__aligned_malloc$realloc) refers to mallocra.o(i.internal_alloc) for internal_alloc
    mallocra.o(i.__aligned_malloc$realloc) refers to mvars.o(.data) for __microlib_freelist_initialised
    mallocra.o(i.__aligned_malloc$realloc) refers to startup_stm32f429xx.o(HEAP) for __heap_base
    mallocra.o(i.__aligned_malloc$realloc) refers to mvars.o(.data) for __microlib_freelist
    mallocra.o(i.__free$realloc$memalign) refers to mvars.o(.data) for __microlib_freelist
    mallocra.o(i.__malloc$realloc$memalign) refers to mallocra.o(i.__aligned_malloc$realloc) for __aligned_malloc$realloc
    mallocra.o(i.__realloc$memalign) refers to mallocra.o(i.__free$realloc$memalign) for __free$realloc$memalign
    mallocra.o(i.__realloc$memalign) refers to mallocra.o(i.internal_alloc) for internal_alloc
    mallocra.o(i.__realloc$memalign) refers to mallocra.o(i.__malloc$realloc$memalign) for __malloc$realloc$memalign
    mallocra.o(i.__realloc$memalign) refers to mvars.o(.data) for __microlib_freelist
    mallocra.o(i.internal_alloc) refers to memcpya.o(.text) for __aeabi_memcpy
    mallocra.o(i.internal_alloc) refers to mvars.o(.data) for __microlib_freelist
    dadd.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dadd.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    dadd.o(.text) refers to llsshr.o(.text) for __aeabi_lasr
    dadd.o(.text) refers to depilogue.o(.text) for _double_epilogue
    ddiv.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    ddiv.o(.text) refers to depilogue.o(.text) for _double_round
    dfltui.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dfltui.o(.text) refers to depilogue.o(.text) for _double_epilogue
    abort_message.cpp.o(.text.abort_message) refers to retarget_io.o(.text.abort) for abort
    abort_message.cpp.o(.ARM.exidx.text.abort_message) refers to abort_message.cpp.o(.text.abort_message) for [Anonymous Symbol]
    cxa_handlers.cpp.o(.text._ZSt14get_unexpectedv) refers to cxa_default_handlers.cpp.o(.data.__cxa_unexpected_handler) for __cxa_unexpected_handler
    cxa_handlers.cpp.o(.ARM.exidx.text._ZSt14get_unexpectedv) refers to cxa_handlers.cpp.o(.text._ZSt14get_unexpectedv) for [Anonymous Symbol]
    cxa_handlers.cpp.o(.text._ZSt12__unexpectedPFvvE) refers to abort_message.cpp.o(.text.abort_message) for abort_message
    cxa_handlers.cpp.o(.ARM.exidx.text._ZSt12__unexpectedPFvvE) refers to cxa_handlers.cpp.o(.text._ZSt12__unexpectedPFvvE) for [Anonymous Symbol]
    cxa_handlers.cpp.o(.text._ZSt10unexpectedv) refers to cxa_default_handlers.cpp.o(.data.__cxa_unexpected_handler) for __cxa_unexpected_handler
    cxa_handlers.cpp.o(.text._ZSt10unexpectedv) refers to cxa_handlers.cpp.o(.text._ZSt12__unexpectedPFvvE) for std::__unexpected(void (*)())
    cxa_handlers.cpp.o(.ARM.exidx.text._ZSt10unexpectedv) refers to cxa_handlers.cpp.o(.text._ZSt10unexpectedv) for [Anonymous Symbol]
    cxa_handlers.cpp.o(.text._ZSt13get_terminatev) refers to cxa_default_handlers.cpp.o(.data.__cxa_terminate_handler) for __cxa_terminate_handler
    cxa_handlers.cpp.o(.ARM.exidx.text._ZSt13get_terminatev) refers to cxa_handlers.cpp.o(.text._ZSt13get_terminatev) for [Anonymous Symbol]
    cxa_handlers.cpp.o(.text._ZSt11__terminatePFvvE) refers to abort_message.cpp.o(.text.abort_message) for abort_message
    cxa_handlers.cpp.o(.ARM.exidx.text._ZSt11__terminatePFvvE) refers to cxa_handlers.cpp.o(.text._ZSt11__terminatePFvvE) for [Anonymous Symbol]
    cxa_handlers.cpp.o(.text._ZSt9terminatev) refers to cxa_default_handlers.cpp.o(.data.__cxa_terminate_handler) for __cxa_terminate_handler
    cxa_handlers.cpp.o(.text._ZSt9terminatev) refers to cxa_handlers.cpp.o(.text._ZSt11__terminatePFvvE) for std::__terminate(void (*)())
    cxa_handlers.cpp.o(.ARM.exidx.text._ZSt9terminatev) refers to cxa_handlers.cpp.o(.text._ZSt9terminatev) for [Anonymous Symbol]
    cxa_handlers.cpp.o(.text._ZSt15get_new_handlerv) refers to cxa_default_handlers.cpp.o(.bss.__cxa_new_handler) for __cxa_new_handler
    cxa_handlers.cpp.o(.ARM.exidx.text._ZSt15get_new_handlerv) refers to cxa_handlers.cpp.o(.text._ZSt15get_new_handlerv) for [Anonymous Symbol]
    entry2.o(.ARM.Collect$$$$00000001) refers to entry2.o(.ARM.Collect$$$$00002712) for __lit__00000000
    entry2.o(.ARM.Collect$$$$00002712) refers to startup_stm32f429xx.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to startup_stm32f429xx.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    entry5.o(.ARM.Collect$$$$00000004) refers to init.o(.text) for __scatterload
    entry9a.o(.ARM.Collect$$$$0000000B) refers to main.o(.text.main) for main
    entry9b.o(.ARM.Collect$$$$0000000C) refers to main.o(.text.main) for main
    memalign.o(.text) refers to malloca.o(i.__aligned_malloc) for __aligned_malloc
    depilogue.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    depilogue.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    depilogue.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    dmul.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dmul.o(.text) refers to depilogue.o(.text) for _double_epilogue
    dfixul.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dfixul.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    dfixul.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    cdrcmple.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    cxa_default_handlers.cpp.o(.text._ZSt14set_unexpectedPFvvE) refers to cxa_default_handlers.cpp.o(.data.__cxa_unexpected_handler) for __cxa_unexpected_handler
    cxa_default_handlers.cpp.o(.text._ZSt14set_unexpectedPFvvE) refers to cxa_handlers.cpp.o(.text._ZSt9terminatev) for std::terminate()
    cxa_default_handlers.cpp.o(.ARM.exidx.text._ZSt14set_unexpectedPFvvE) refers to cxa_default_handlers.cpp.o(.text._ZSt14set_unexpectedPFvvE) for [Anonymous Symbol]
    cxa_default_handlers.cpp.o(.text._ZSt13set_terminatePFvvE) refers to cxa_default_handlers.cpp.o(.data.__cxa_terminate_handler) for __cxa_terminate_handler
    cxa_default_handlers.cpp.o(.text._ZSt13set_terminatePFvvE) refers to retarget_io.o(.text.abort) for abort
    cxa_default_handlers.cpp.o(.ARM.exidx.text._ZSt13set_terminatePFvvE) refers to cxa_default_handlers.cpp.o(.text._ZSt13set_terminatePFvvE) for [Anonymous Symbol]
    cxa_default_handlers.cpp.o(.text._ZSt15set_new_handlerPFvvE) refers to cxa_default_handlers.cpp.o(.bss.__cxa_new_handler) for __cxa_new_handler
    cxa_default_handlers.cpp.o(.ARM.exidx.text._ZSt15set_new_handlerPFvvE) refers to cxa_default_handlers.cpp.o(.text._ZSt15set_new_handlerPFvvE) for [Anonymous Symbol]
    cxa_default_handlers.cpp.o(.data.__cxa_terminate_handler) refers to retarget_io.o(.text.abort) for abort
    cxa_default_handlers.cpp.o(.data.__cxa_unexpected_handler) refers to cxa_handlers.cpp.o(.text._ZSt9terminatev) for std::terminate()
    init.o(.text) refers to entry5.o(.ARM.Collect$$$$00000004) for __main_after_scatterload
    test_00_thread_name.o(.text._ZN11TestThread0C2Ev) refers to test_00_thread_name.o(.data._ZL8testName) for testName
    test_00_thread_name.o(.text._ZN11TestThread0C2Ev) refers to test_00_thread_name.o(.text._ZN5osapi6ThreadC2EijNS_8JoinableEPKc) for osapi::Thread::Thread__sub_object(int, unsigned int, osapi::Joinable, char const*)
    test_00_thread_name.o(.text._ZN11TestThread0C2Ev) refers to test_00_thread_name.o(.rodata._ZTV11TestThread0) for vtable for TestThread0
    test_00_thread_name.o(.ARM.exidx.text._ZN11TestThread0C2Ev) refers to test_00_thread_name.o(.text._ZN11TestThread0C2Ev) for [Anonymous Symbol]
    test_00_thread_name.o(.ARM.exidx.text._ZN5osapi6Thread7getNameEv) refers to test_00_thread_name.o(.text._ZN5osapi6Thread7getNameEv) for [Anonymous Symbol]
    test_00_thread_name.o(.text._ZN11TestThread0D2Ev) refers to test_00_thread_name.o(.text._ZN5osapi6ThreadD2Ev) for osapi::Thread::~Thread__sub_object()
    test_00_thread_name.o(.ARM.exidx.text._ZN11TestThread0D2Ev) refers to test_00_thread_name.o(.text._ZN11TestThread0D2Ev) for [Anonymous Symbol]
    test_00_thread_name.o(.text._ZN5osapi6ThreadC2EijNS_8JoinableEPKc) refers to test_00_thread_name.o(.text._ZN5osapi15ThreadInterfaceC2Ev) for osapi::ThreadInterface::ThreadInterface__sub_object()
    test_00_thread_name.o(.text._ZN5osapi6ThreadC2EijNS_8JoinableEPKc) refers to test_00_thread_name.o(.rodata._ZTVN5osapi6ThreadE) for vtable for osapi::Thread
    test_00_thread_name.o(.text._ZN5osapi6ThreadC2EijNS_8JoinableEPKc) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    test_00_thread_name.o(.ARM.exidx.text._ZN5osapi6ThreadC2EijNS_8JoinableEPKc) refers to test_00_thread_name.o(.text._ZN5osapi6ThreadC2EijNS_8JoinableEPKc) for [Anonymous Symbol]
    test_00_thread_name.o(.text._ZN11TestThread0D0Ev) refers to test_00_thread_name.o(.text._ZN11TestThread0D2Ev) for TestThread0::~TestThread0__sub_object()
    test_00_thread_name.o(.text._ZN11TestThread0D0Ev) refers to new.cpp.o(.text._ZdlPv) for operator delete(void*)
    test_00_thread_name.o(.ARM.exidx.text._ZN11TestThread0D0Ev) refers to test_00_thread_name.o(.text._ZN11TestThread0D0Ev) for [Anonymous Symbol]
    test_00_thread_name.o(.text._ZN5osapi6Thread3runEv) refers to test_00_thread_name.o(.text._ZN5osapi6Thread14threadFunctionEPv) for osapi::Thread::threadFunction(void*)
    test_00_thread_name.o(.text._ZN5osapi6Thread3runEv) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    test_00_thread_name.o(.ARM.exidx.text._ZN5osapi6Thread3runEv) refers to test_00_thread_name.o(.text._ZN5osapi6Thread3runEv) for [Anonymous Symbol]
    test_00_thread_name.o(.text._ZN5osapi6Thread9isRunningEv) refers to tasks.o(.text.eTaskGetState) for eTaskGetState
    test_00_thread_name.o(.ARM.exidx.text._ZN5osapi6Thread9isRunningEv) refers to test_00_thread_name.o(.text._ZN5osapi6Thread9isRunningEv) for [Anonymous Symbol]
    test_00_thread_name.o(.text._ZN5osapi6Thread4joinEj) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    test_00_thread_name.o(.ARM.exidx.text._ZN5osapi6Thread4joinEj) refers to test_00_thread_name.o(.text._ZN5osapi6Thread4joinEj) for [Anonymous Symbol]
    test_00_thread_name.o(.ARM.exidx.text._ZN5osapi6Thread10isJoinableEv) refers to test_00_thread_name.o(.text._ZN5osapi6Thread10isJoinableEv) for [Anonymous Symbol]
    test_00_thread_name.o(.text._ZN5osapi6Thread7suspendEv) refers to tasks.o(.text.vTaskSuspend) for vTaskSuspend
    test_00_thread_name.o(.text._ZN5osapi6Thread7suspendEv) refers to tasks.o(.text.eTaskGetState) for eTaskGetState
    test_00_thread_name.o(.ARM.exidx.text._ZN5osapi6Thread7suspendEv) refers to test_00_thread_name.o(.text._ZN5osapi6Thread7suspendEv) for [Anonymous Symbol]
    test_00_thread_name.o(.text._ZN5osapi6Thread6resumeEv) refers to tasks.o(.text.vTaskResume) for vTaskResume
    test_00_thread_name.o(.ARM.exidx.text._ZN5osapi6Thread6resumeEv) refers to test_00_thread_name.o(.text._ZN5osapi6Thread6resumeEv) for [Anonymous Symbol]
    test_00_thread_name.o(.text._ZN5osapi6Thread11setPriorityEi) refers to tasks.o(.text.vTaskPrioritySet) for vTaskPrioritySet
    test_00_thread_name.o(.ARM.exidx.text._ZN5osapi6Thread11setPriorityEi) refers to test_00_thread_name.o(.text._ZN5osapi6Thread11setPriorityEi) for [Anonymous Symbol]
    test_00_thread_name.o(.text._ZN5osapi6Thread11getPriorityEv) refers to tasks.o(.text.uxTaskPriorityGet) for uxTaskPriorityGet
    test_00_thread_name.o(.ARM.exidx.text._ZN5osapi6Thread11getPriorityEv) refers to test_00_thread_name.o(.text._ZN5osapi6Thread11getPriorityEv) for [Anonymous Symbol]
    test_00_thread_name.o(.text._ZN5osapi6Thread8getStateEv) refers to tasks.o(.text.eTaskGetState) for eTaskGetState
    test_00_thread_name.o(.ARM.exidx.text._ZN5osapi6Thread8getStateEv) refers to test_00_thread_name.o(.text._ZN5osapi6Thread8getStateEv) for [Anonymous Symbol]
    test_00_thread_name.o(.ARM.exidx.text._ZN5osapi6Thread17getTotalStackSizeEv) refers to test_00_thread_name.o(.text._ZN5osapi6Thread17getTotalStackSizeEv) for [Anonymous Symbol]
    test_00_thread_name.o(.text._ZN5osapi6Thread16getUsedStackSizeEv) refers to tasks.o(.text.uxTaskGetStackHighWaterMark) for uxTaskGetStackHighWaterMark
    test_00_thread_name.o(.ARM.exidx.text._ZN5osapi6Thread16getUsedStackSizeEv) refers to test_00_thread_name.o(.text._ZN5osapi6Thread16getUsedStackSizeEv) for [Anonymous Symbol]
    test_00_thread_name.o(.text._ZN5osapi6Thread5sleepEj) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    test_00_thread_name.o(.ARM.exidx.text._ZN5osapi6Thread5sleepEj) refers to test_00_thread_name.o(.text._ZN5osapi6Thread5sleepEj) for [Anonymous Symbol]
    test_00_thread_name.o(.ARM.exidx.text._ZN11TestThread03jobEv) refers to test_00_thread_name.o(.text._ZN11TestThread03jobEv) for [Anonymous Symbol]
    test_00_thread_name.o(.text._ZN5osapi15ThreadInterfaceC2Ev) refers to test_00_thread_name.o(.rodata._ZTVN5osapi15ThreadInterfaceE) for vtable for osapi::ThreadInterface
    test_00_thread_name.o(.ARM.exidx.text._ZN5osapi15ThreadInterfaceC2Ev) refers to test_00_thread_name.o(.text._ZN5osapi15ThreadInterfaceC2Ev) for [Anonymous Symbol]
    test_00_thread_name.o(.text._ZN5osapi6ThreadD2Ev) refers to test_00_thread_name.o(.text._ZN5osapi15ThreadInterfaceD2Ev) for osapi::ThreadInterface::~ThreadInterface__sub_object()
    test_00_thread_name.o(.ARM.exidx.text._ZN5osapi6ThreadD2Ev) refers to test_00_thread_name.o(.text._ZN5osapi6ThreadD2Ev) for [Anonymous Symbol]
    test_00_thread_name.o(.ARM.exidx.text._ZN5osapi6ThreadD0Ev) refers to test_00_thread_name.o(.text._ZN5osapi6ThreadD0Ev) for [Anonymous Symbol]
    test_00_thread_name.o(.ARM.exidx.text._ZN5osapi15ThreadInterfaceD2Ev) refers to test_00_thread_name.o(.text._ZN5osapi15ThreadInterfaceD2Ev) for [Anonymous Symbol]
    test_00_thread_name.o(.ARM.exidx.text._ZN5osapi15ThreadInterfaceD0Ev) refers to test_00_thread_name.o(.text._ZN5osapi15ThreadInterfaceD0Ev) for [Anonymous Symbol]
    test_00_thread_name.o(.text._ZN5osapi6Thread14threadFunctionEPv) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    test_00_thread_name.o(.text._ZN5osapi6Thread14threadFunctionEPv) refers to tasks.o(.text.vTaskDelete) for vTaskDelete
    test_00_thread_name.o(.ARM.exidx.text._ZN5osapi6Thread14threadFunctionEPv) refers to test_00_thread_name.o(.text._ZN5osapi6Thread14threadFunctionEPv) for [Anonymous Symbol]
    test_00_thread_name.o(.rodata._ZTV11TestThread0) refers to test_00_thread_name.o(.text._ZN11TestThread0D2Ev) for TestThread0::~TestThread0__sub_object()
    test_00_thread_name.o(.rodata._ZTV11TestThread0) refers to test_00_thread_name.o(.text._ZN11TestThread0D0Ev) for TestThread0::~TestThread0__deallocating()
    test_00_thread_name.o(.rodata._ZTV11TestThread0) refers to test_00_thread_name.o(.text._ZN5osapi6Thread3runEv) for osapi::Thread::run()
    test_00_thread_name.o(.rodata._ZTV11TestThread0) refers to test_00_thread_name.o(.text._ZN5osapi6Thread9isRunningEv) for osapi::Thread::isRunning()
    test_00_thread_name.o(.rodata._ZTV11TestThread0) refers to test_00_thread_name.o(.text._ZN5osapi6Thread4joinEj) for osapi::Thread::join(unsigned int)
    test_00_thread_name.o(.rodata._ZTV11TestThread0) refers to test_00_thread_name.o(.text._ZN5osapi6Thread10isJoinableEv) for osapi::Thread::isJoinable()
    test_00_thread_name.o(.rodata._ZTV11TestThread0) refers to test_00_thread_name.o(.text._ZN5osapi6Thread7suspendEv) for osapi::Thread::suspend()
    test_00_thread_name.o(.rodata._ZTV11TestThread0) refers to test_00_thread_name.o(.text._ZN5osapi6Thread6resumeEv) for osapi::Thread::resume()
    test_00_thread_name.o(.rodata._ZTV11TestThread0) refers to test_00_thread_name.o(.text._ZN5osapi6Thread11setPriorityEi) for osapi::Thread::setPriority(int)
    test_00_thread_name.o(.rodata._ZTV11TestThread0) refers to test_00_thread_name.o(.text._ZN5osapi6Thread11getPriorityEv) for osapi::Thread::getPriority()
    test_00_thread_name.o(.rodata._ZTV11TestThread0) refers to test_00_thread_name.o(.text._ZN5osapi6Thread7getNameEv) for osapi::Thread::getName()
    test_00_thread_name.o(.rodata._ZTV11TestThread0) refers to test_00_thread_name.o(.text._ZN5osapi6Thread8getStateEv) for osapi::Thread::getState()
    test_00_thread_name.o(.rodata._ZTV11TestThread0) refers to test_00_thread_name.o(.text._ZN5osapi6Thread17getTotalStackSizeEv) for osapi::Thread::getTotalStackSize()
    test_00_thread_name.o(.rodata._ZTV11TestThread0) refers to test_00_thread_name.o(.text._ZN5osapi6Thread16getUsedStackSizeEv) for osapi::Thread::getUsedStackSize()
    test_00_thread_name.o(.rodata._ZTV11TestThread0) refers to test_00_thread_name.o(.text._ZN5osapi6Thread5sleepEj) for osapi::Thread::sleep(unsigned int)
    test_00_thread_name.o(.rodata._ZTV11TestThread0) refers to test_00_thread_name.o(.text._ZN11TestThread03jobEv) for TestThread0::job()
    test_00_thread_name.o(.rodata._ZTVN5osapi6ThreadE) refers to test_00_thread_name.o(.text._ZN5osapi6ThreadD2Ev) for osapi::Thread::~Thread__sub_object()
    test_00_thread_name.o(.rodata._ZTVN5osapi6ThreadE) refers to test_00_thread_name.o(.text._ZN5osapi6ThreadD0Ev) for osapi::Thread::~Thread__deallocating()
    test_00_thread_name.o(.rodata._ZTVN5osapi6ThreadE) refers to test_00_thread_name.o(.text._ZN5osapi6Thread3runEv) for osapi::Thread::run()
    test_00_thread_name.o(.rodata._ZTVN5osapi6ThreadE) refers to test_00_thread_name.o(.text._ZN5osapi6Thread9isRunningEv) for osapi::Thread::isRunning()
    test_00_thread_name.o(.rodata._ZTVN5osapi6ThreadE) refers to test_00_thread_name.o(.text._ZN5osapi6Thread4joinEj) for osapi::Thread::join(unsigned int)
    test_00_thread_name.o(.rodata._ZTVN5osapi6ThreadE) refers to test_00_thread_name.o(.text._ZN5osapi6Thread10isJoinableEv) for osapi::Thread::isJoinable()
    test_00_thread_name.o(.rodata._ZTVN5osapi6ThreadE) refers to test_00_thread_name.o(.text._ZN5osapi6Thread7suspendEv) for osapi::Thread::suspend()
    test_00_thread_name.o(.rodata._ZTVN5osapi6ThreadE) refers to test_00_thread_name.o(.text._ZN5osapi6Thread6resumeEv) for osapi::Thread::resume()
    test_00_thread_name.o(.rodata._ZTVN5osapi6ThreadE) refers to test_00_thread_name.o(.text._ZN5osapi6Thread11setPriorityEi) for osapi::Thread::setPriority(int)
    test_00_thread_name.o(.rodata._ZTVN5osapi6ThreadE) refers to test_00_thread_name.o(.text._ZN5osapi6Thread11getPriorityEv) for osapi::Thread::getPriority()
    test_00_thread_name.o(.rodata._ZTVN5osapi6ThreadE) refers to test_00_thread_name.o(.text._ZN5osapi6Thread7getNameEv) for osapi::Thread::getName()
    test_00_thread_name.o(.rodata._ZTVN5osapi6ThreadE) refers to test_00_thread_name.o(.text._ZN5osapi6Thread8getStateEv) for osapi::Thread::getState()
    test_00_thread_name.o(.rodata._ZTVN5osapi6ThreadE) refers to test_00_thread_name.o(.text._ZN5osapi6Thread17getTotalStackSizeEv) for osapi::Thread::getTotalStackSize()
    test_00_thread_name.o(.rodata._ZTVN5osapi6ThreadE) refers to test_00_thread_name.o(.text._ZN5osapi6Thread16getUsedStackSizeEv) for osapi::Thread::getUsedStackSize()
    test_00_thread_name.o(.rodata._ZTVN5osapi6ThreadE) refers to test_00_thread_name.o(.text._ZN5osapi6Thread5sleepEj) for osapi::Thread::sleep(unsigned int)
    test_00_thread_name.o(.rodata._ZTVN5osapi6ThreadE) refers to cxa_virtual.cpp.o(.text.__cxa_pure_virtual) for __cxa_pure_virtual
    test_00_thread_name.o(.rodata._ZTVN5osapi15ThreadInterfaceE) refers to test_00_thread_name.o(.text._ZN5osapi15ThreadInterfaceD2Ev) for osapi::ThreadInterface::~ThreadInterface__sub_object()
    test_00_thread_name.o(.rodata._ZTVN5osapi15ThreadInterfaceE) refers to test_00_thread_name.o(.text._ZN5osapi15ThreadInterfaceD0Ev) for osapi::ThreadInterface::~ThreadInterface__deallocating()
    test_00_thread_name.o(.rodata._ZTVN5osapi15ThreadInterfaceE) refers to cxa_virtual.cpp.o(.text.__cxa_pure_virtual) for __cxa_pure_virtual
    test_01_thread_creation.o(.text._ZN11TestThread1C2Ev) refers to test_01_thread_creation.o(.rodata.str1.1) for .L.str.5
    test_01_thread_creation.o(.text._ZN11TestThread1C2Ev) refers to test_00_thread_name.o(.text._ZN5osapi6ThreadC2EijNS_8JoinableEPKc) for osapi::Thread::Thread__sub_object(int, unsigned int, osapi::Joinable, char const*)
    test_01_thread_creation.o(.text._ZN11TestThread1C2Ev) refers to test_01_thread_creation.o(.rodata._ZTV11TestThread1) for vtable for TestThread1
    test_01_thread_creation.o(.ARM.exidx.text._ZN11TestThread1C2Ev) refers to test_01_thread_creation.o(.text._ZN11TestThread1C2Ev) for [Anonymous Symbol]
    test_01_thread_creation.o(.text._ZN11TestThread1D2Ev) refers to test_00_thread_name.o(.text._ZN5osapi6ThreadD2Ev) for osapi::Thread::~Thread__sub_object()
    test_01_thread_creation.o(.ARM.exidx.text._ZN11TestThread1D2Ev) refers to test_01_thread_creation.o(.text._ZN11TestThread1D2Ev) for [Anonymous Symbol]
    test_01_thread_creation.o(.text._ZN11TestThread1D0Ev) refers to test_01_thread_creation.o(.text._ZN11TestThread1D2Ev) for TestThread1::~TestThread1__sub_object()
    test_01_thread_creation.o(.text._ZN11TestThread1D0Ev) refers to new.cpp.o(.text._ZdlPv) for operator delete(void*)
    test_01_thread_creation.o(.ARM.exidx.text._ZN11TestThread1D0Ev) refers to test_01_thread_creation.o(.text._ZN11TestThread1D0Ev) for [Anonymous Symbol]
    test_01_thread_creation.o(.text._ZN11TestThread13jobEv) refers to test_01_thread_creation.o(.bss._ZL8testFlag) for testFlag
    test_01_thread_creation.o(.ARM.exidx.text._ZN11TestThread13jobEv) refers to test_01_thread_creation.o(.text._ZN11TestThread13jobEv) for [Anonymous Symbol]
    test_01_thread_creation.o(.rodata._ZTV11TestThread1) refers to test_01_thread_creation.o(.text._ZN11TestThread1D2Ev) for TestThread1::~TestThread1__sub_object()
    test_01_thread_creation.o(.rodata._ZTV11TestThread1) refers to test_01_thread_creation.o(.text._ZN11TestThread1D0Ev) for TestThread1::~TestThread1__deallocating()
    test_01_thread_creation.o(.rodata._ZTV11TestThread1) refers to test_00_thread_name.o(.text._ZN5osapi6Thread3runEv) for osapi::Thread::run()
    test_01_thread_creation.o(.rodata._ZTV11TestThread1) refers to test_00_thread_name.o(.text._ZN5osapi6Thread9isRunningEv) for osapi::Thread::isRunning()
    test_01_thread_creation.o(.rodata._ZTV11TestThread1) refers to test_00_thread_name.o(.text._ZN5osapi6Thread4joinEj) for osapi::Thread::join(unsigned int)
    test_01_thread_creation.o(.rodata._ZTV11TestThread1) refers to test_00_thread_name.o(.text._ZN5osapi6Thread10isJoinableEv) for osapi::Thread::isJoinable()
    test_01_thread_creation.o(.rodata._ZTV11TestThread1) refers to test_00_thread_name.o(.text._ZN5osapi6Thread7suspendEv) for osapi::Thread::suspend()
    test_01_thread_creation.o(.rodata._ZTV11TestThread1) refers to test_00_thread_name.o(.text._ZN5osapi6Thread6resumeEv) for osapi::Thread::resume()
    test_01_thread_creation.o(.rodata._ZTV11TestThread1) refers to test_00_thread_name.o(.text._ZN5osapi6Thread11setPriorityEi) for osapi::Thread::setPriority(int)
    test_01_thread_creation.o(.rodata._ZTV11TestThread1) refers to test_00_thread_name.o(.text._ZN5osapi6Thread11getPriorityEv) for osapi::Thread::getPriority()
    test_01_thread_creation.o(.rodata._ZTV11TestThread1) refers to test_00_thread_name.o(.text._ZN5osapi6Thread7getNameEv) for osapi::Thread::getName()
    test_01_thread_creation.o(.rodata._ZTV11TestThread1) refers to test_00_thread_name.o(.text._ZN5osapi6Thread8getStateEv) for osapi::Thread::getState()
    test_01_thread_creation.o(.rodata._ZTV11TestThread1) refers to test_00_thread_name.o(.text._ZN5osapi6Thread17getTotalStackSizeEv) for osapi::Thread::getTotalStackSize()
    test_01_thread_creation.o(.rodata._ZTV11TestThread1) refers to test_00_thread_name.o(.text._ZN5osapi6Thread16getUsedStackSizeEv) for osapi::Thread::getUsedStackSize()
    test_01_thread_creation.o(.rodata._ZTV11TestThread1) refers to test_00_thread_name.o(.text._ZN5osapi6Thread5sleepEj) for osapi::Thread::sleep(unsigned int)
    test_01_thread_creation.o(.rodata._ZTV11TestThread1) refers to test_01_thread_creation.o(.text._ZN11TestThread13jobEv) for TestThread1::job()
    test_02_thread_join.o(.text._ZN11TestThread2C2Ev) refers to test_02_thread_join.o(.rodata.str1.1) for .L.str.9
    test_02_thread_join.o(.text._ZN11TestThread2C2Ev) refers to test_00_thread_name.o(.text._ZN5osapi6ThreadC2EijNS_8JoinableEPKc) for osapi::Thread::Thread__sub_object(int, unsigned int, osapi::Joinable, char const*)
    test_02_thread_join.o(.text._ZN11TestThread2C2Ev) refers to test_02_thread_join.o(.rodata._ZTV11TestThread2) for vtable for TestThread2
    test_02_thread_join.o(.ARM.exidx.text._ZN11TestThread2C2Ev) refers to test_02_thread_join.o(.text._ZN11TestThread2C2Ev) for [Anonymous Symbol]
    test_02_thread_join.o(.text._ZN11TestThread2D2Ev) refers to test_00_thread_name.o(.text._ZN5osapi6ThreadD2Ev) for osapi::Thread::~Thread__sub_object()
    test_02_thread_join.o(.ARM.exidx.text._ZN11TestThread2D2Ev) refers to test_02_thread_join.o(.text._ZN11TestThread2D2Ev) for [Anonymous Symbol]
    test_02_thread_join.o(.text._ZN11TestThread2D0Ev) refers to test_02_thread_join.o(.text._ZN11TestThread2D2Ev) for TestThread2::~TestThread2__sub_object()
    test_02_thread_join.o(.text._ZN11TestThread2D0Ev) refers to new.cpp.o(.text._ZdlPv) for operator delete(void*)
    test_02_thread_join.o(.ARM.exidx.text._ZN11TestThread2D0Ev) refers to test_02_thread_join.o(.text._ZN11TestThread2D0Ev) for [Anonymous Symbol]
    test_02_thread_join.o(.text._ZN11TestThread23jobEv) refers to test_02_thread_join.o(.bss._ZL7runFlag) for runFlag
    test_02_thread_join.o(.text._ZN11TestThread23jobEv) refers to test_02_thread_join.o(.bss._ZL8testFlag) for testFlag
    test_02_thread_join.o(.ARM.exidx.text._ZN11TestThread23jobEv) refers to test_02_thread_join.o(.text._ZN11TestThread23jobEv) for [Anonymous Symbol]
    test_02_thread_join.o(.rodata._ZTV11TestThread2) refers to test_02_thread_join.o(.text._ZN11TestThread2D2Ev) for TestThread2::~TestThread2__sub_object()
    test_02_thread_join.o(.rodata._ZTV11TestThread2) refers to test_02_thread_join.o(.text._ZN11TestThread2D0Ev) for TestThread2::~TestThread2__deallocating()
    test_02_thread_join.o(.rodata._ZTV11TestThread2) refers to test_00_thread_name.o(.text._ZN5osapi6Thread3runEv) for osapi::Thread::run()
    test_02_thread_join.o(.rodata._ZTV11TestThread2) refers to test_00_thread_name.o(.text._ZN5osapi6Thread9isRunningEv) for osapi::Thread::isRunning()
    test_02_thread_join.o(.rodata._ZTV11TestThread2) refers to test_00_thread_name.o(.text._ZN5osapi6Thread4joinEj) for osapi::Thread::join(unsigned int)
    test_02_thread_join.o(.rodata._ZTV11TestThread2) refers to test_00_thread_name.o(.text._ZN5osapi6Thread10isJoinableEv) for osapi::Thread::isJoinable()
    test_02_thread_join.o(.rodata._ZTV11TestThread2) refers to test_00_thread_name.o(.text._ZN5osapi6Thread7suspendEv) for osapi::Thread::suspend()
    test_02_thread_join.o(.rodata._ZTV11TestThread2) refers to test_00_thread_name.o(.text._ZN5osapi6Thread6resumeEv) for osapi::Thread::resume()
    test_02_thread_join.o(.rodata._ZTV11TestThread2) refers to test_00_thread_name.o(.text._ZN5osapi6Thread11setPriorityEi) for osapi::Thread::setPriority(int)
    test_02_thread_join.o(.rodata._ZTV11TestThread2) refers to test_00_thread_name.o(.text._ZN5osapi6Thread11getPriorityEv) for osapi::Thread::getPriority()
    test_02_thread_join.o(.rodata._ZTV11TestThread2) refers to test_00_thread_name.o(.text._ZN5osapi6Thread7getNameEv) for osapi::Thread::getName()
    test_02_thread_join.o(.rodata._ZTV11TestThread2) refers to test_00_thread_name.o(.text._ZN5osapi6Thread8getStateEv) for osapi::Thread::getState()
    test_02_thread_join.o(.rodata._ZTV11TestThread2) refers to test_00_thread_name.o(.text._ZN5osapi6Thread17getTotalStackSizeEv) for osapi::Thread::getTotalStackSize()
    test_02_thread_join.o(.rodata._ZTV11TestThread2) refers to test_00_thread_name.o(.text._ZN5osapi6Thread16getUsedStackSizeEv) for osapi::Thread::getUsedStackSize()
    test_02_thread_join.o(.rodata._ZTV11TestThread2) refers to test_00_thread_name.o(.text._ZN5osapi6Thread5sleepEj) for osapi::Thread::sleep(unsigned int)
    test_02_thread_join.o(.rodata._ZTV11TestThread2) refers to test_02_thread_join.o(.text._ZN11TestThread23jobEv) for TestThread2::job()
    test_03_thread_suspend_resume.o(.text._ZN11TestThread3C2Ev) refers to test_03_thread_suspend_resume.o(.rodata.str1.1) for .L.str.9
    test_03_thread_suspend_resume.o(.text._ZN11TestThread3C2Ev) refers to test_00_thread_name.o(.text._ZN5osapi6ThreadC2EijNS_8JoinableEPKc) for osapi::Thread::Thread__sub_object(int, unsigned int, osapi::Joinable, char const*)
    test_03_thread_suspend_resume.o(.text._ZN11TestThread3C2Ev) refers to test_03_thread_suspend_resume.o(.rodata._ZTV11TestThread3) for vtable for TestThread3
    test_03_thread_suspend_resume.o(.ARM.exidx.text._ZN11TestThread3C2Ev) refers to test_03_thread_suspend_resume.o(.text._ZN11TestThread3C2Ev) for [Anonymous Symbol]
    test_03_thread_suspend_resume.o(.text._ZN11TestThread3D2Ev) refers to test_00_thread_name.o(.text._ZN5osapi6ThreadD2Ev) for osapi::Thread::~Thread__sub_object()
    test_03_thread_suspend_resume.o(.ARM.exidx.text._ZN11TestThread3D2Ev) refers to test_03_thread_suspend_resume.o(.text._ZN11TestThread3D2Ev) for [Anonymous Symbol]
    test_03_thread_suspend_resume.o(.text._ZN11TestThread3D0Ev) refers to test_03_thread_suspend_resume.o(.text._ZN11TestThread3D2Ev) for TestThread3::~TestThread3__sub_object()
    test_03_thread_suspend_resume.o(.text._ZN11TestThread3D0Ev) refers to new.cpp.o(.text._ZdlPv) for operator delete(void*)
    test_03_thread_suspend_resume.o(.ARM.exidx.text._ZN11TestThread3D0Ev) refers to test_03_thread_suspend_resume.o(.text._ZN11TestThread3D0Ev) for [Anonymous Symbol]
    test_03_thread_suspend_resume.o(.text._ZN11TestThread33jobEv) refers to test_03_thread_suspend_resume.o(.bss._ZL7runFlag) for runFlag
    test_03_thread_suspend_resume.o(.text._ZN11TestThread33jobEv) refers to test_03_thread_suspend_resume.o(.bss._ZL8testFlag) for testFlag
    test_03_thread_suspend_resume.o(.ARM.exidx.text._ZN11TestThread33jobEv) refers to test_03_thread_suspend_resume.o(.text._ZN11TestThread33jobEv) for [Anonymous Symbol]
    test_03_thread_suspend_resume.o(.rodata._ZTV11TestThread3) refers to test_03_thread_suspend_resume.o(.text._ZN11TestThread3D2Ev) for TestThread3::~TestThread3__sub_object()
    test_03_thread_suspend_resume.o(.rodata._ZTV11TestThread3) refers to test_03_thread_suspend_resume.o(.text._ZN11TestThread3D0Ev) for TestThread3::~TestThread3__deallocating()
    test_03_thread_suspend_resume.o(.rodata._ZTV11TestThread3) refers to test_00_thread_name.o(.text._ZN5osapi6Thread3runEv) for osapi::Thread::run()
    test_03_thread_suspend_resume.o(.rodata._ZTV11TestThread3) refers to test_00_thread_name.o(.text._ZN5osapi6Thread9isRunningEv) for osapi::Thread::isRunning()
    test_03_thread_suspend_resume.o(.rodata._ZTV11TestThread3) refers to test_00_thread_name.o(.text._ZN5osapi6Thread4joinEj) for osapi::Thread::join(unsigned int)
    test_03_thread_suspend_resume.o(.rodata._ZTV11TestThread3) refers to test_00_thread_name.o(.text._ZN5osapi6Thread10isJoinableEv) for osapi::Thread::isJoinable()
    test_03_thread_suspend_resume.o(.rodata._ZTV11TestThread3) refers to test_00_thread_name.o(.text._ZN5osapi6Thread7suspendEv) for osapi::Thread::suspend()
    test_03_thread_suspend_resume.o(.rodata._ZTV11TestThread3) refers to test_00_thread_name.o(.text._ZN5osapi6Thread6resumeEv) for osapi::Thread::resume()
    test_03_thread_suspend_resume.o(.rodata._ZTV11TestThread3) refers to test_00_thread_name.o(.text._ZN5osapi6Thread11setPriorityEi) for osapi::Thread::setPriority(int)
    test_03_thread_suspend_resume.o(.rodata._ZTV11TestThread3) refers to test_00_thread_name.o(.text._ZN5osapi6Thread11getPriorityEv) for osapi::Thread::getPriority()
    test_03_thread_suspend_resume.o(.rodata._ZTV11TestThread3) refers to test_00_thread_name.o(.text._ZN5osapi6Thread7getNameEv) for osapi::Thread::getName()
    test_03_thread_suspend_resume.o(.rodata._ZTV11TestThread3) refers to test_00_thread_name.o(.text._ZN5osapi6Thread8getStateEv) for osapi::Thread::getState()
    test_03_thread_suspend_resume.o(.rodata._ZTV11TestThread3) refers to test_00_thread_name.o(.text._ZN5osapi6Thread17getTotalStackSizeEv) for osapi::Thread::getTotalStackSize()
    test_03_thread_suspend_resume.o(.rodata._ZTV11TestThread3) refers to test_00_thread_name.o(.text._ZN5osapi6Thread16getUsedStackSizeEv) for osapi::Thread::getUsedStackSize()
    test_03_thread_suspend_resume.o(.rodata._ZTV11TestThread3) refers to test_00_thread_name.o(.text._ZN5osapi6Thread5sleepEj) for osapi::Thread::sleep(unsigned int)
    test_03_thread_suspend_resume.o(.rodata._ZTV11TestThread3) refers to test_03_thread_suspend_resume.o(.text._ZN11TestThread33jobEv) for TestThread3::job()
    test_04_thread_priority.o(.text._ZN11TestThread4C2Ev) refers to test_04_thread_priority.o(.rodata.str1.1) for .L.str.5
    test_04_thread_priority.o(.text._ZN11TestThread4C2Ev) refers to test_00_thread_name.o(.text._ZN5osapi6ThreadC2EijNS_8JoinableEPKc) for osapi::Thread::Thread__sub_object(int, unsigned int, osapi::Joinable, char const*)
    test_04_thread_priority.o(.text._ZN11TestThread4C2Ev) refers to test_04_thread_priority.o(.rodata._ZTV11TestThread4) for vtable for TestThread4
    test_04_thread_priority.o(.ARM.exidx.text._ZN11TestThread4C2Ev) refers to test_04_thread_priority.o(.text._ZN11TestThread4C2Ev) for [Anonymous Symbol]
    test_04_thread_priority.o(.text._ZN11TestThread4D2Ev) refers to test_00_thread_name.o(.text._ZN5osapi6ThreadD2Ev) for osapi::Thread::~Thread__sub_object()
    test_04_thread_priority.o(.ARM.exidx.text._ZN11TestThread4D2Ev) refers to test_04_thread_priority.o(.text._ZN11TestThread4D2Ev) for [Anonymous Symbol]
    test_04_thread_priority.o(.text._ZN11TestThread4D0Ev) refers to test_04_thread_priority.o(.text._ZN11TestThread4D2Ev) for TestThread4::~TestThread4__sub_object()
    test_04_thread_priority.o(.text._ZN11TestThread4D0Ev) refers to new.cpp.o(.text._ZdlPv) for operator delete(void*)
    test_04_thread_priority.o(.ARM.exidx.text._ZN11TestThread4D0Ev) refers to test_04_thread_priority.o(.text._ZN11TestThread4D0Ev) for [Anonymous Symbol]
    test_04_thread_priority.o(.text._ZN11TestThread43jobEv) refers to test_04_thread_priority.o(.bss._ZL7runFlag) for runFlag
    test_04_thread_priority.o(.ARM.exidx.text._ZN11TestThread43jobEv) refers to test_04_thread_priority.o(.text._ZN11TestThread43jobEv) for [Anonymous Symbol]
    test_04_thread_priority.o(.rodata._ZTV11TestThread4) refers to test_04_thread_priority.o(.text._ZN11TestThread4D2Ev) for TestThread4::~TestThread4__sub_object()
    test_04_thread_priority.o(.rodata._ZTV11TestThread4) refers to test_04_thread_priority.o(.text._ZN11TestThread4D0Ev) for TestThread4::~TestThread4__deallocating()
    test_04_thread_priority.o(.rodata._ZTV11TestThread4) refers to test_00_thread_name.o(.text._ZN5osapi6Thread3runEv) for osapi::Thread::run()
    test_04_thread_priority.o(.rodata._ZTV11TestThread4) refers to test_00_thread_name.o(.text._ZN5osapi6Thread9isRunningEv) for osapi::Thread::isRunning()
    test_04_thread_priority.o(.rodata._ZTV11TestThread4) refers to test_00_thread_name.o(.text._ZN5osapi6Thread4joinEj) for osapi::Thread::join(unsigned int)
    test_04_thread_priority.o(.rodata._ZTV11TestThread4) refers to test_00_thread_name.o(.text._ZN5osapi6Thread10isJoinableEv) for osapi::Thread::isJoinable()
    test_04_thread_priority.o(.rodata._ZTV11TestThread4) refers to test_00_thread_name.o(.text._ZN5osapi6Thread7suspendEv) for osapi::Thread::suspend()
    test_04_thread_priority.o(.rodata._ZTV11TestThread4) refers to test_00_thread_name.o(.text._ZN5osapi6Thread6resumeEv) for osapi::Thread::resume()
    test_04_thread_priority.o(.rodata._ZTV11TestThread4) refers to test_00_thread_name.o(.text._ZN5osapi6Thread11setPriorityEi) for osapi::Thread::setPriority(int)
    test_04_thread_priority.o(.rodata._ZTV11TestThread4) refers to test_00_thread_name.o(.text._ZN5osapi6Thread11getPriorityEv) for osapi::Thread::getPriority()
    test_04_thread_priority.o(.rodata._ZTV11TestThread4) refers to test_00_thread_name.o(.text._ZN5osapi6Thread7getNameEv) for osapi::Thread::getName()
    test_04_thread_priority.o(.rodata._ZTV11TestThread4) refers to test_00_thread_name.o(.text._ZN5osapi6Thread8getStateEv) for osapi::Thread::getState()
    test_04_thread_priority.o(.rodata._ZTV11TestThread4) refers to test_00_thread_name.o(.text._ZN5osapi6Thread17getTotalStackSizeEv) for osapi::Thread::getTotalStackSize()
    test_04_thread_priority.o(.rodata._ZTV11TestThread4) refers to test_00_thread_name.o(.text._ZN5osapi6Thread16getUsedStackSizeEv) for osapi::Thread::getUsedStackSize()
    test_04_thread_priority.o(.rodata._ZTV11TestThread4) refers to test_00_thread_name.o(.text._ZN5osapi6Thread5sleepEj) for osapi::Thread::sleep(unsigned int)
    test_04_thread_priority.o(.rodata._ZTV11TestThread4) refers to test_04_thread_priority.o(.text._ZN11TestThread43jobEv) for TestThread4::job()
    test_05_thread_delay.o(.text._ZN11TestThread5C2Ev) refers to test_05_thread_delay.o(.rodata.str1.1) for .L.str.5
    test_05_thread_delay.o(.text._ZN11TestThread5C2Ev) refers to test_00_thread_name.o(.text._ZN5osapi6ThreadC2EijNS_8JoinableEPKc) for osapi::Thread::Thread__sub_object(int, unsigned int, osapi::Joinable, char const*)
    test_05_thread_delay.o(.text._ZN11TestThread5C2Ev) refers to test_05_thread_delay.o(.rodata._ZTV11TestThread5) for vtable for TestThread5
    test_05_thread_delay.o(.ARM.exidx.text._ZN11TestThread5C2Ev) refers to test_05_thread_delay.o(.text._ZN11TestThread5C2Ev) for [Anonymous Symbol]
    test_05_thread_delay.o(.text._ZN11TestThread5D2Ev) refers to test_00_thread_name.o(.text._ZN5osapi6ThreadD2Ev) for osapi::Thread::~Thread__sub_object()
    test_05_thread_delay.o(.ARM.exidx.text._ZN11TestThread5D2Ev) refers to test_05_thread_delay.o(.text._ZN11TestThread5D2Ev) for [Anonymous Symbol]
    test_05_thread_delay.o(.text._ZN11TestThread5D0Ev) refers to test_05_thread_delay.o(.text._ZN11TestThread5D2Ev) for TestThread5::~TestThread5__sub_object()
    test_05_thread_delay.o(.text._ZN11TestThread5D0Ev) refers to new.cpp.o(.text._ZdlPv) for operator delete(void*)
    test_05_thread_delay.o(.ARM.exidx.text._ZN11TestThread5D0Ev) refers to test_05_thread_delay.o(.text._ZN11TestThread5D0Ev) for [Anonymous Symbol]
    test_05_thread_delay.o(.ARM.exidx.text._ZN11TestThread53jobEv) refers to test_05_thread_delay.o(.text._ZN11TestThread53jobEv) for [Anonymous Symbol]
    test_05_thread_delay.o(.rodata._ZTV11TestThread5) refers to test_05_thread_delay.o(.text._ZN11TestThread5D2Ev) for TestThread5::~TestThread5__sub_object()
    test_05_thread_delay.o(.rodata._ZTV11TestThread5) refers to test_05_thread_delay.o(.text._ZN11TestThread5D0Ev) for TestThread5::~TestThread5__deallocating()
    test_05_thread_delay.o(.rodata._ZTV11TestThread5) refers to test_00_thread_name.o(.text._ZN5osapi6Thread3runEv) for osapi::Thread::run()
    test_05_thread_delay.o(.rodata._ZTV11TestThread5) refers to test_00_thread_name.o(.text._ZN5osapi6Thread9isRunningEv) for osapi::Thread::isRunning()
    test_05_thread_delay.o(.rodata._ZTV11TestThread5) refers to test_00_thread_name.o(.text._ZN5osapi6Thread4joinEj) for osapi::Thread::join(unsigned int)
    test_05_thread_delay.o(.rodata._ZTV11TestThread5) refers to test_00_thread_name.o(.text._ZN5osapi6Thread10isJoinableEv) for osapi::Thread::isJoinable()
    test_05_thread_delay.o(.rodata._ZTV11TestThread5) refers to test_00_thread_name.o(.text._ZN5osapi6Thread7suspendEv) for osapi::Thread::suspend()
    test_05_thread_delay.o(.rodata._ZTV11TestThread5) refers to test_00_thread_name.o(.text._ZN5osapi6Thread6resumeEv) for osapi::Thread::resume()
    test_05_thread_delay.o(.rodata._ZTV11TestThread5) refers to test_00_thread_name.o(.text._ZN5osapi6Thread11setPriorityEi) for osapi::Thread::setPriority(int)
    test_05_thread_delay.o(.rodata._ZTV11TestThread5) refers to test_00_thread_name.o(.text._ZN5osapi6Thread11getPriorityEv) for osapi::Thread::getPriority()
    test_05_thread_delay.o(.rodata._ZTV11TestThread5) refers to test_00_thread_name.o(.text._ZN5osapi6Thread7getNameEv) for osapi::Thread::getName()
    test_05_thread_delay.o(.rodata._ZTV11TestThread5) refers to test_00_thread_name.o(.text._ZN5osapi6Thread8getStateEv) for osapi::Thread::getState()
    test_05_thread_delay.o(.rodata._ZTV11TestThread5) refers to test_00_thread_name.o(.text._ZN5osapi6Thread17getTotalStackSizeEv) for osapi::Thread::getTotalStackSize()
    test_05_thread_delay.o(.rodata._ZTV11TestThread5) refers to test_00_thread_name.o(.text._ZN5osapi6Thread16getUsedStackSizeEv) for osapi::Thread::getUsedStackSize()
    test_05_thread_delay.o(.rodata._ZTV11TestThread5) refers to test_00_thread_name.o(.text._ZN5osapi6Thread5sleepEj) for osapi::Thread::sleep(unsigned int)
    test_05_thread_delay.o(.rodata._ZTV11TestThread5) refers to test_05_thread_delay.o(.text._ZN11TestThread53jobEv) for TestThread5::job()
    test_06_mutex.o(.ARM.exidx.text._ZN5osapi5Mutex4lockEj) refers to test_06_mutex.o(.text._ZN5osapi5Mutex4lockEj) for [Anonymous Symbol]
    test_06_mutex.o(.ARM.exidx.text._ZN5osapi5Mutex6unlockEv) refers to test_06_mutex.o(.text._ZN5osapi5Mutex6unlockEv) for [Anonymous Symbol]
    test_07_recursive_mutex.o(.ARM.exidx.text._ZN5osapi14RecursiveMutex4lockEj) refers to test_07_recursive_mutex.o(.text._ZN5osapi14RecursiveMutex4lockEj) for [Anonymous Symbol]
    test_07_recursive_mutex.o(.ARM.exidx.text._ZN5osapi14RecursiveMutex6unlockEv) refers to test_07_recursive_mutex.o(.text._ZN5osapi14RecursiveMutex6unlockEv) for [Anonymous Symbol]
    test_08_mortal_thread.o(.text._ZN14MyMortalThreadC2Ev) refers to test_08_mortal_thread.o(.rodata.str1.1) for .L.str.9
    test_08_mortal_thread.o(.text._ZN14MyMortalThreadC2Ev) refers to test_08_mortal_thread.o(.text._ZN5osapi12MortalThreadC2EijPKc) for osapi::MortalThread::MortalThread__sub_object(int, unsigned int, char const*)
    test_08_mortal_thread.o(.text._ZN14MyMortalThreadC2Ev) refers to test_08_mortal_thread.o(.rodata._ZTV14MyMortalThread) for vtable for MyMortalThread
    test_08_mortal_thread.o(.ARM.exidx.text._ZN14MyMortalThreadC2Ev) refers to test_08_mortal_thread.o(.text._ZN14MyMortalThreadC2Ev) for [Anonymous Symbol]
    test_08_mortal_thread.o(.ARM.exidx.text._ZN5osapi12MortalThread4killEv) refers to test_08_mortal_thread.o(.text._ZN5osapi12MortalThread4killEv) for [Anonymous Symbol]
    test_08_mortal_thread.o(.text._ZN14MyMortalThreadD2Ev) refers to test_08_mortal_thread.o(.text._ZN5osapi12MortalThreadD2Ev) for osapi::MortalThread::~MortalThread__sub_object()
    test_08_mortal_thread.o(.ARM.exidx.text._ZN14MyMortalThreadD2Ev) refers to test_08_mortal_thread.o(.text._ZN14MyMortalThreadD2Ev) for [Anonymous Symbol]
    test_08_mortal_thread.o(.text._ZN5osapi12MortalThreadC2EijPKc) refers to test_00_thread_name.o(.text._ZN5osapi6ThreadC2EijNS_8JoinableEPKc) for osapi::Thread::Thread__sub_object(int, unsigned int, osapi::Joinable, char const*)
    test_08_mortal_thread.o(.text._ZN5osapi12MortalThreadC2EijPKc) refers to test_08_mortal_thread.o(.rodata._ZTVN5osapi12MortalThreadE) for vtable for osapi::MortalThread
    test_08_mortal_thread.o(.ARM.exidx.text._ZN5osapi12MortalThreadC2EijPKc) refers to test_08_mortal_thread.o(.text._ZN5osapi12MortalThreadC2EijPKc) for [Anonymous Symbol]
    test_08_mortal_thread.o(.text._ZN14MyMortalThreadD0Ev) refers to test_08_mortal_thread.o(.text._ZN14MyMortalThreadD2Ev) for MyMortalThread::~MyMortalThread__sub_object()
    test_08_mortal_thread.o(.text._ZN14MyMortalThreadD0Ev) refers to new.cpp.o(.text._ZdlPv) for operator delete(void*)
    test_08_mortal_thread.o(.ARM.exidx.text._ZN14MyMortalThreadD0Ev) refers to test_08_mortal_thread.o(.text._ZN14MyMortalThreadD0Ev) for [Anonymous Symbol]
    test_08_mortal_thread.o(.ARM.exidx.text._ZN5osapi12MortalThread3jobEv) refers to test_08_mortal_thread.o(.text._ZN5osapi12MortalThread3jobEv) for [Anonymous Symbol]
    test_08_mortal_thread.o(.text._ZN14MyMortalThread5beginEv) refers to test_08_mortal_thread.o(.bss._ZL13testFlagBegin) for testFlagBegin
    test_08_mortal_thread.o(.ARM.exidx.text._ZN14MyMortalThread5beginEv) refers to test_08_mortal_thread.o(.text._ZN14MyMortalThread5beginEv) for [Anonymous Symbol]
    test_08_mortal_thread.o(.text._ZN14MyMortalThread4loopEv) refers to test_08_mortal_thread.o(.bss._ZL12testFlagLoop) for testFlagLoop
    test_08_mortal_thread.o(.ARM.exidx.text._ZN14MyMortalThread4loopEv) refers to test_08_mortal_thread.o(.text._ZN14MyMortalThread4loopEv) for [Anonymous Symbol]
    test_08_mortal_thread.o(.text._ZN14MyMortalThread3endEv) refers to test_08_mortal_thread.o(.bss._ZL11testFlagEnd) for testFlagEnd
    test_08_mortal_thread.o(.ARM.exidx.text._ZN14MyMortalThread3endEv) refers to test_08_mortal_thread.o(.text._ZN14MyMortalThread3endEv) for [Anonymous Symbol]
    test_08_mortal_thread.o(.text._ZN5osapi12MortalThreadD2Ev) refers to test_08_mortal_thread.o(.rodata._ZTVN5osapi12MortalThreadE) for vtable for osapi::MortalThread
    test_08_mortal_thread.o(.text._ZN5osapi12MortalThreadD2Ev) refers to test_00_thread_name.o(.text._ZN5osapi6ThreadD2Ev) for osapi::Thread::~Thread__sub_object()
    test_08_mortal_thread.o(.ARM.exidx.text._ZN5osapi12MortalThreadD2Ev) refers to test_08_mortal_thread.o(.text._ZN5osapi12MortalThreadD2Ev) for [Anonymous Symbol]
    test_08_mortal_thread.o(.ARM.exidx.text._ZN5osapi12MortalThreadD0Ev) refers to test_08_mortal_thread.o(.text._ZN5osapi12MortalThreadD0Ev) for [Anonymous Symbol]
    test_08_mortal_thread.o(.rodata._ZTV14MyMortalThread) refers to test_08_mortal_thread.o(.text._ZN14MyMortalThreadD2Ev) for MyMortalThread::~MyMortalThread__sub_object()
    test_08_mortal_thread.o(.rodata._ZTV14MyMortalThread) refers to test_08_mortal_thread.o(.text._ZN14MyMortalThreadD0Ev) for MyMortalThread::~MyMortalThread__deallocating()
    test_08_mortal_thread.o(.rodata._ZTV14MyMortalThread) refers to test_00_thread_name.o(.text._ZN5osapi6Thread3runEv) for osapi::Thread::run()
    test_08_mortal_thread.o(.rodata._ZTV14MyMortalThread) refers to test_00_thread_name.o(.text._ZN5osapi6Thread9isRunningEv) for osapi::Thread::isRunning()
    test_08_mortal_thread.o(.rodata._ZTV14MyMortalThread) refers to test_00_thread_name.o(.text._ZN5osapi6Thread4joinEj) for osapi::Thread::join(unsigned int)
    test_08_mortal_thread.o(.rodata._ZTV14MyMortalThread) refers to test_00_thread_name.o(.text._ZN5osapi6Thread10isJoinableEv) for osapi::Thread::isJoinable()
    test_08_mortal_thread.o(.rodata._ZTV14MyMortalThread) refers to test_00_thread_name.o(.text._ZN5osapi6Thread7suspendEv) for osapi::Thread::suspend()
    test_08_mortal_thread.o(.rodata._ZTV14MyMortalThread) refers to test_00_thread_name.o(.text._ZN5osapi6Thread6resumeEv) for osapi::Thread::resume()
    test_08_mortal_thread.o(.rodata._ZTV14MyMortalThread) refers to test_00_thread_name.o(.text._ZN5osapi6Thread11setPriorityEi) for osapi::Thread::setPriority(int)
    test_08_mortal_thread.o(.rodata._ZTV14MyMortalThread) refers to test_00_thread_name.o(.text._ZN5osapi6Thread11getPriorityEv) for osapi::Thread::getPriority()
    test_08_mortal_thread.o(.rodata._ZTV14MyMortalThread) refers to test_00_thread_name.o(.text._ZN5osapi6Thread7getNameEv) for osapi::Thread::getName()
    test_08_mortal_thread.o(.rodata._ZTV14MyMortalThread) refers to test_00_thread_name.o(.text._ZN5osapi6Thread8getStateEv) for osapi::Thread::getState()
    test_08_mortal_thread.o(.rodata._ZTV14MyMortalThread) refers to test_00_thread_name.o(.text._ZN5osapi6Thread17getTotalStackSizeEv) for osapi::Thread::getTotalStackSize()
    test_08_mortal_thread.o(.rodata._ZTV14MyMortalThread) refers to test_00_thread_name.o(.text._ZN5osapi6Thread16getUsedStackSizeEv) for osapi::Thread::getUsedStackSize()
    test_08_mortal_thread.o(.rodata._ZTV14MyMortalThread) refers to test_00_thread_name.o(.text._ZN5osapi6Thread5sleepEj) for osapi::Thread::sleep(unsigned int)
    test_08_mortal_thread.o(.rodata._ZTV14MyMortalThread) refers to test_08_mortal_thread.o(.text._ZN5osapi12MortalThread3jobEv) for osapi::MortalThread::job()
    test_08_mortal_thread.o(.rodata._ZTV14MyMortalThread) refers to test_08_mortal_thread.o(.text._ZN14MyMortalThread5beginEv) for MyMortalThread::begin()
    test_08_mortal_thread.o(.rodata._ZTV14MyMortalThread) refers to test_08_mortal_thread.o(.text._ZN14MyMortalThread4loopEv) for MyMortalThread::loop()
    test_08_mortal_thread.o(.rodata._ZTV14MyMortalThread) refers to test_08_mortal_thread.o(.text._ZN14MyMortalThread3endEv) for MyMortalThread::end()
    test_08_mortal_thread.o(.rodata._ZTVN5osapi12MortalThreadE) refers to test_08_mortal_thread.o(.text._ZN5osapi12MortalThreadD2Ev) for osapi::MortalThread::~MortalThread__sub_object()
    test_08_mortal_thread.o(.rodata._ZTVN5osapi12MortalThreadE) refers to test_08_mortal_thread.o(.text._ZN5osapi12MortalThreadD0Ev) for osapi::MortalThread::~MortalThread__deallocating()
    test_08_mortal_thread.o(.rodata._ZTVN5osapi12MortalThreadE) refers to test_00_thread_name.o(.text._ZN5osapi6Thread3runEv) for osapi::Thread::run()
    test_08_mortal_thread.o(.rodata._ZTVN5osapi12MortalThreadE) refers to test_00_thread_name.o(.text._ZN5osapi6Thread9isRunningEv) for osapi::Thread::isRunning()
    test_08_mortal_thread.o(.rodata._ZTVN5osapi12MortalThreadE) refers to test_00_thread_name.o(.text._ZN5osapi6Thread4joinEj) for osapi::Thread::join(unsigned int)
    test_08_mortal_thread.o(.rodata._ZTVN5osapi12MortalThreadE) refers to test_00_thread_name.o(.text._ZN5osapi6Thread10isJoinableEv) for osapi::Thread::isJoinable()
    test_08_mortal_thread.o(.rodata._ZTVN5osapi12MortalThreadE) refers to test_00_thread_name.o(.text._ZN5osapi6Thread7suspendEv) for osapi::Thread::suspend()
    test_08_mortal_thread.o(.rodata._ZTVN5osapi12MortalThreadE) refers to test_00_thread_name.o(.text._ZN5osapi6Thread6resumeEv) for osapi::Thread::resume()
    test_08_mortal_thread.o(.rodata._ZTVN5osapi12MortalThreadE) refers to test_00_thread_name.o(.text._ZN5osapi6Thread11setPriorityEi) for osapi::Thread::setPriority(int)
    test_08_mortal_thread.o(.rodata._ZTVN5osapi12MortalThreadE) refers to test_00_thread_name.o(.text._ZN5osapi6Thread11getPriorityEv) for osapi::Thread::getPriority()
    test_08_mortal_thread.o(.rodata._ZTVN5osapi12MortalThreadE) refers to test_00_thread_name.o(.text._ZN5osapi6Thread7getNameEv) for osapi::Thread::getName()
    test_08_mortal_thread.o(.rodata._ZTVN5osapi12MortalThreadE) refers to test_00_thread_name.o(.text._ZN5osapi6Thread8getStateEv) for osapi::Thread::getState()
    test_08_mortal_thread.o(.rodata._ZTVN5osapi12MortalThreadE) refers to test_00_thread_name.o(.text._ZN5osapi6Thread17getTotalStackSizeEv) for osapi::Thread::getTotalStackSize()
    test_08_mortal_thread.o(.rodata._ZTVN5osapi12MortalThreadE) refers to test_00_thread_name.o(.text._ZN5osapi6Thread16getUsedStackSizeEv) for osapi::Thread::getUsedStackSize()
    test_08_mortal_thread.o(.rodata._ZTVN5osapi12MortalThreadE) refers to test_00_thread_name.o(.text._ZN5osapi6Thread5sleepEj) for osapi::Thread::sleep(unsigned int)
    test_08_mortal_thread.o(.rodata._ZTVN5osapi12MortalThreadE) refers to test_08_mortal_thread.o(.text._ZN5osapi12MortalThread3jobEv) for osapi::MortalThread::job()
    test_08_mortal_thread.o(.rodata._ZTVN5osapi12MortalThreadE) refers to cxa_virtual.cpp.o(.text.__cxa_pure_virtual) for __cxa_pure_virtual
    test_14_thread_stack_size.o(.text._ZN12TestThread14C2Ev) refers to test_14_thread_stack_size.o(.rodata.str1.1) for .L.str.9
    test_14_thread_stack_size.o(.text._ZN12TestThread14C2Ev) refers to test_00_thread_name.o(.text._ZN5osapi6ThreadC2EijNS_8JoinableEPKc) for osapi::Thread::Thread__sub_object(int, unsigned int, osapi::Joinable, char const*)
    test_14_thread_stack_size.o(.text._ZN12TestThread14C2Ev) refers to test_14_thread_stack_size.o(.rodata._ZTV12TestThread14) for vtable for TestThread14
    test_14_thread_stack_size.o(.ARM.exidx.text._ZN12TestThread14C2Ev) refers to test_14_thread_stack_size.o(.text._ZN12TestThread14C2Ev) for [Anonymous Symbol]
    test_14_thread_stack_size.o(.text._ZN12TestThread14D2Ev) refers to test_00_thread_name.o(.text._ZN5osapi6ThreadD2Ev) for osapi::Thread::~Thread__sub_object()
    test_14_thread_stack_size.o(.ARM.exidx.text._ZN12TestThread14D2Ev) refers to test_14_thread_stack_size.o(.text._ZN12TestThread14D2Ev) for [Anonymous Symbol]
    test_14_thread_stack_size.o(.text._ZN12TestThread14D0Ev) refers to test_14_thread_stack_size.o(.text._ZN12TestThread14D2Ev) for TestThread14::~TestThread14__sub_object()
    test_14_thread_stack_size.o(.text._ZN12TestThread14D0Ev) refers to new.cpp.o(.text._ZdlPv) for operator delete(void*)
    test_14_thread_stack_size.o(.ARM.exidx.text._ZN12TestThread14D0Ev) refers to test_14_thread_stack_size.o(.text._ZN12TestThread14D0Ev) for [Anonymous Symbol]
    test_14_thread_stack_size.o(.text._ZN12TestThread143jobEv) refers to test_14_thread_stack_size.o(.data._ZL7runFlag) for runFlag
    test_14_thread_stack_size.o(.ARM.exidx.text._ZN12TestThread143jobEv) refers to test_14_thread_stack_size.o(.text._ZN12TestThread143jobEv) for [Anonymous Symbol]
    test_14_thread_stack_size.o(.rodata._ZTV12TestThread14) refers to test_14_thread_stack_size.o(.text._ZN12TestThread14D2Ev) for TestThread14::~TestThread14__sub_object()
    test_14_thread_stack_size.o(.rodata._ZTV12TestThread14) refers to test_14_thread_stack_size.o(.text._ZN12TestThread14D0Ev) for TestThread14::~TestThread14__deallocating()
    test_14_thread_stack_size.o(.rodata._ZTV12TestThread14) refers to test_00_thread_name.o(.text._ZN5osapi6Thread3runEv) for osapi::Thread::run()
    test_14_thread_stack_size.o(.rodata._ZTV12TestThread14) refers to test_00_thread_name.o(.text._ZN5osapi6Thread9isRunningEv) for osapi::Thread::isRunning()
    test_14_thread_stack_size.o(.rodata._ZTV12TestThread14) refers to test_00_thread_name.o(.text._ZN5osapi6Thread4joinEj) for osapi::Thread::join(unsigned int)
    test_14_thread_stack_size.o(.rodata._ZTV12TestThread14) refers to test_00_thread_name.o(.text._ZN5osapi6Thread10isJoinableEv) for osapi::Thread::isJoinable()
    test_14_thread_stack_size.o(.rodata._ZTV12TestThread14) refers to test_00_thread_name.o(.text._ZN5osapi6Thread7suspendEv) for osapi::Thread::suspend()
    test_14_thread_stack_size.o(.rodata._ZTV12TestThread14) refers to test_00_thread_name.o(.text._ZN5osapi6Thread6resumeEv) for osapi::Thread::resume()
    test_14_thread_stack_size.o(.rodata._ZTV12TestThread14) refers to test_00_thread_name.o(.text._ZN5osapi6Thread11setPriorityEi) for osapi::Thread::setPriority(int)
    test_14_thread_stack_size.o(.rodata._ZTV12TestThread14) refers to test_00_thread_name.o(.text._ZN5osapi6Thread11getPriorityEv) for osapi::Thread::getPriority()
    test_14_thread_stack_size.o(.rodata._ZTV12TestThread14) refers to test_00_thread_name.o(.text._ZN5osapi6Thread7getNameEv) for osapi::Thread::getName()
    test_14_thread_stack_size.o(.rodata._ZTV12TestThread14) refers to test_00_thread_name.o(.text._ZN5osapi6Thread8getStateEv) for osapi::Thread::getState()
    test_14_thread_stack_size.o(.rodata._ZTV12TestThread14) refers to test_00_thread_name.o(.text._ZN5osapi6Thread17getTotalStackSizeEv) for osapi::Thread::getTotalStackSize()
    test_14_thread_stack_size.o(.rodata._ZTV12TestThread14) refers to test_00_thread_name.o(.text._ZN5osapi6Thread16getUsedStackSizeEv) for osapi::Thread::getUsedStackSize()
    test_14_thread_stack_size.o(.rodata._ZTV12TestThread14) refers to test_00_thread_name.o(.text._ZN5osapi6Thread5sleepEj) for osapi::Thread::sleep(unsigned int)
    test_14_thread_stack_size.o(.rodata._ZTV12TestThread14) refers to test_14_thread_stack_size.o(.text._ZN12TestThread143jobEv) for TestThread14::job()
    test_13_thread_suspend_inactive.o(.text._ZN12TestThread13C2Ev) refers to test_13_thread_suspend_inactive.o(.rodata.str1.1) for .L.str.6
    test_13_thread_suspend_inactive.o(.text._ZN12TestThread13C2Ev) refers to test_00_thread_name.o(.text._ZN5osapi6ThreadC2EijNS_8JoinableEPKc) for osapi::Thread::Thread__sub_object(int, unsigned int, osapi::Joinable, char const*)
    test_13_thread_suspend_inactive.o(.text._ZN12TestThread13C2Ev) refers to test_13_thread_suspend_inactive.o(.rodata._ZTV12TestThread13) for vtable for TestThread13
    test_13_thread_suspend_inactive.o(.ARM.exidx.text._ZN12TestThread13C2Ev) refers to test_13_thread_suspend_inactive.o(.text._ZN12TestThread13C2Ev) for [Anonymous Symbol]
    test_13_thread_suspend_inactive.o(.text._ZN12TestThread13D2Ev) refers to test_00_thread_name.o(.text._ZN5osapi6ThreadD2Ev) for osapi::Thread::~Thread__sub_object()
    test_13_thread_suspend_inactive.o(.ARM.exidx.text._ZN12TestThread13D2Ev) refers to test_13_thread_suspend_inactive.o(.text._ZN12TestThread13D2Ev) for [Anonymous Symbol]
    test_13_thread_suspend_inactive.o(.text._ZN12TestThread13D0Ev) refers to test_13_thread_suspend_inactive.o(.text._ZN12TestThread13D2Ev) for TestThread13::~TestThread13__sub_object()
    test_13_thread_suspend_inactive.o(.text._ZN12TestThread13D0Ev) refers to new.cpp.o(.text._ZdlPv) for operator delete(void*)
    test_13_thread_suspend_inactive.o(.ARM.exidx.text._ZN12TestThread13D0Ev) refers to test_13_thread_suspend_inactive.o(.text._ZN12TestThread13D0Ev) for [Anonymous Symbol]
    test_13_thread_suspend_inactive.o(.ARM.exidx.text._ZN12TestThread133jobEv) refers to test_13_thread_suspend_inactive.o(.text._ZN12TestThread133jobEv) for [Anonymous Symbol]
    test_13_thread_suspend_inactive.o(.rodata._ZTV12TestThread13) refers to test_13_thread_suspend_inactive.o(.text._ZN12TestThread13D2Ev) for TestThread13::~TestThread13__sub_object()
    test_13_thread_suspend_inactive.o(.rodata._ZTV12TestThread13) refers to test_13_thread_suspend_inactive.o(.text._ZN12TestThread13D0Ev) for TestThread13::~TestThread13__deallocating()
    test_13_thread_suspend_inactive.o(.rodata._ZTV12TestThread13) refers to test_00_thread_name.o(.text._ZN5osapi6Thread3runEv) for osapi::Thread::run()
    test_13_thread_suspend_inactive.o(.rodata._ZTV12TestThread13) refers to test_00_thread_name.o(.text._ZN5osapi6Thread9isRunningEv) for osapi::Thread::isRunning()
    test_13_thread_suspend_inactive.o(.rodata._ZTV12TestThread13) refers to test_00_thread_name.o(.text._ZN5osapi6Thread4joinEj) for osapi::Thread::join(unsigned int)
    test_13_thread_suspend_inactive.o(.rodata._ZTV12TestThread13) refers to test_00_thread_name.o(.text._ZN5osapi6Thread10isJoinableEv) for osapi::Thread::isJoinable()
    test_13_thread_suspend_inactive.o(.rodata._ZTV12TestThread13) refers to test_00_thread_name.o(.text._ZN5osapi6Thread7suspendEv) for osapi::Thread::suspend()
    test_13_thread_suspend_inactive.o(.rodata._ZTV12TestThread13) refers to test_00_thread_name.o(.text._ZN5osapi6Thread6resumeEv) for osapi::Thread::resume()
    test_13_thread_suspend_inactive.o(.rodata._ZTV12TestThread13) refers to test_00_thread_name.o(.text._ZN5osapi6Thread11setPriorityEi) for osapi::Thread::setPriority(int)
    test_13_thread_suspend_inactive.o(.rodata._ZTV12TestThread13) refers to test_00_thread_name.o(.text._ZN5osapi6Thread11getPriorityEv) for osapi::Thread::getPriority()
    test_13_thread_suspend_inactive.o(.rodata._ZTV12TestThread13) refers to test_00_thread_name.o(.text._ZN5osapi6Thread7getNameEv) for osapi::Thread::getName()
    test_13_thread_suspend_inactive.o(.rodata._ZTV12TestThread13) refers to test_00_thread_name.o(.text._ZN5osapi6Thread8getStateEv) for osapi::Thread::getState()
    test_13_thread_suspend_inactive.o(.rodata._ZTV12TestThread13) refers to test_00_thread_name.o(.text._ZN5osapi6Thread17getTotalStackSizeEv) for osapi::Thread::getTotalStackSize()
    test_13_thread_suspend_inactive.o(.rodata._ZTV12TestThread13) refers to test_00_thread_name.o(.text._ZN5osapi6Thread16getUsedStackSizeEv) for osapi::Thread::getUsedStackSize()
    test_13_thread_suspend_inactive.o(.rodata._ZTV12TestThread13) refers to test_00_thread_name.o(.text._ZN5osapi6Thread5sleepEj) for osapi::Thread::sleep(unsigned int)
    test_13_thread_suspend_inactive.o(.rodata._ZTV12TestThread13) refers to test_13_thread_suspend_inactive.o(.text._ZN12TestThread133jobEv) for TestThread13::job()
    test_12_thread_state.o(.text._ZN12TestThread12C2Ev) refers to test_12_thread_state.o(.rodata.str1.1) for .L.str.12
    test_12_thread_state.o(.text._ZN12TestThread12C2Ev) refers to test_00_thread_name.o(.text._ZN5osapi6ThreadC2EijNS_8JoinableEPKc) for osapi::Thread::Thread__sub_object(int, unsigned int, osapi::Joinable, char const*)
    test_12_thread_state.o(.text._ZN12TestThread12C2Ev) refers to test_12_thread_state.o(.rodata._ZTV12TestThread12) for vtable for TestThread12
    test_12_thread_state.o(.ARM.exidx.text._ZN12TestThread12C2Ev) refers to test_12_thread_state.o(.text._ZN12TestThread12C2Ev) for [Anonymous Symbol]
    test_12_thread_state.o(.text._ZN12TestThread12D2Ev) refers to test_00_thread_name.o(.text._ZN5osapi6ThreadD2Ev) for osapi::Thread::~Thread__sub_object()
    test_12_thread_state.o(.ARM.exidx.text._ZN12TestThread12D2Ev) refers to test_12_thread_state.o(.text._ZN12TestThread12D2Ev) for [Anonymous Symbol]
    test_12_thread_state.o(.text._ZN12TestThread12D0Ev) refers to test_12_thread_state.o(.text._ZN12TestThread12D2Ev) for TestThread12::~TestThread12__sub_object()
    test_12_thread_state.o(.text._ZN12TestThread12D0Ev) refers to new.cpp.o(.text._ZdlPv) for operator delete(void*)
    test_12_thread_state.o(.ARM.exidx.text._ZN12TestThread12D0Ev) refers to test_12_thread_state.o(.text._ZN12TestThread12D0Ev) for [Anonymous Symbol]
    test_12_thread_state.o(.text._ZN12TestThread123jobEv) refers to test_12_thread_state.o(.bss._ZL8runState) for runState
    test_12_thread_state.o(.text._ZN12TestThread123jobEv) refers to test_12_thread_state.o(.data._ZL7runFlag) for runFlag
    test_12_thread_state.o(.ARM.exidx.text._ZN12TestThread123jobEv) refers to test_12_thread_state.o(.text._ZN12TestThread123jobEv) for [Anonymous Symbol]
    test_12_thread_state.o(.rodata._ZTV12TestThread12) refers to test_12_thread_state.o(.text._ZN12TestThread12D2Ev) for TestThread12::~TestThread12__sub_object()
    test_12_thread_state.o(.rodata._ZTV12TestThread12) refers to test_12_thread_state.o(.text._ZN12TestThread12D0Ev) for TestThread12::~TestThread12__deallocating()
    test_12_thread_state.o(.rodata._ZTV12TestThread12) refers to test_00_thread_name.o(.text._ZN5osapi6Thread3runEv) for osapi::Thread::run()
    test_12_thread_state.o(.rodata._ZTV12TestThread12) refers to test_00_thread_name.o(.text._ZN5osapi6Thread9isRunningEv) for osapi::Thread::isRunning()
    test_12_thread_state.o(.rodata._ZTV12TestThread12) refers to test_00_thread_name.o(.text._ZN5osapi6Thread4joinEj) for osapi::Thread::join(unsigned int)
    test_12_thread_state.o(.rodata._ZTV12TestThread12) refers to test_00_thread_name.o(.text._ZN5osapi6Thread10isJoinableEv) for osapi::Thread::isJoinable()
    test_12_thread_state.o(.rodata._ZTV12TestThread12) refers to test_00_thread_name.o(.text._ZN5osapi6Thread7suspendEv) for osapi::Thread::suspend()
    test_12_thread_state.o(.rodata._ZTV12TestThread12) refers to test_00_thread_name.o(.text._ZN5osapi6Thread6resumeEv) for osapi::Thread::resume()
    test_12_thread_state.o(.rodata._ZTV12TestThread12) refers to test_00_thread_name.o(.text._ZN5osapi6Thread11setPriorityEi) for osapi::Thread::setPriority(int)
    test_12_thread_state.o(.rodata._ZTV12TestThread12) refers to test_00_thread_name.o(.text._ZN5osapi6Thread11getPriorityEv) for osapi::Thread::getPriority()
    test_12_thread_state.o(.rodata._ZTV12TestThread12) refers to test_00_thread_name.o(.text._ZN5osapi6Thread7getNameEv) for osapi::Thread::getName()
    test_12_thread_state.o(.rodata._ZTV12TestThread12) refers to test_00_thread_name.o(.text._ZN5osapi6Thread8getStateEv) for osapi::Thread::getState()
    test_12_thread_state.o(.rodata._ZTV12TestThread12) refers to test_00_thread_name.o(.text._ZN5osapi6Thread17getTotalStackSizeEv) for osapi::Thread::getTotalStackSize()
    test_12_thread_state.o(.rodata._ZTV12TestThread12) refers to test_00_thread_name.o(.text._ZN5osapi6Thread16getUsedStackSizeEv) for osapi::Thread::getUsedStackSize()
    test_12_thread_state.o(.rodata._ZTV12TestThread12) refers to test_00_thread_name.o(.text._ZN5osapi6Thread5sleepEj) for osapi::Thread::sleep(unsigned int)
    test_12_thread_state.o(.rodata._ZTV12TestThread12) refers to test_12_thread_state.o(.text._ZN12TestThread123jobEv) for TestThread12::job()
    test_11_thread_run_detailed.o(.text._ZN12TestThread11C2Ev) refers to test_11_thread_run_detailed.o(.rodata.str1.1) for .L.str.9
    test_11_thread_run_detailed.o(.text._ZN12TestThread11C2Ev) refers to test_00_thread_name.o(.text._ZN5osapi6ThreadC2EijNS_8JoinableEPKc) for osapi::Thread::Thread__sub_object(int, unsigned int, osapi::Joinable, char const*)
    test_11_thread_run_detailed.o(.text._ZN12TestThread11C2Ev) refers to test_11_thread_run_detailed.o(.rodata._ZTV12TestThread11) for vtable for TestThread11
    test_11_thread_run_detailed.o(.ARM.exidx.text._ZN12TestThread11C2Ev) refers to test_11_thread_run_detailed.o(.text._ZN12TestThread11C2Ev) for [Anonymous Symbol]
    test_11_thread_run_detailed.o(.text._ZN12TestThread11D2Ev) refers to test_00_thread_name.o(.text._ZN5osapi6ThreadD2Ev) for osapi::Thread::~Thread__sub_object()
    test_11_thread_run_detailed.o(.ARM.exidx.text._ZN12TestThread11D2Ev) refers to test_11_thread_run_detailed.o(.text._ZN12TestThread11D2Ev) for [Anonymous Symbol]
    test_11_thread_run_detailed.o(.text._ZN12TestThread11D0Ev) refers to test_11_thread_run_detailed.o(.text._ZN12TestThread11D2Ev) for TestThread11::~TestThread11__sub_object()
    test_11_thread_run_detailed.o(.text._ZN12TestThread11D0Ev) refers to new.cpp.o(.text._ZdlPv) for operator delete(void*)
    test_11_thread_run_detailed.o(.ARM.exidx.text._ZN12TestThread11D0Ev) refers to test_11_thread_run_detailed.o(.text._ZN12TestThread11D0Ev) for [Anonymous Symbol]
    test_11_thread_run_detailed.o(.text._ZN12TestThread113jobEv) refers to test_11_thread_run_detailed.o(.bss._ZL8testFlag) for testFlag
    test_11_thread_run_detailed.o(.text._ZN12TestThread113jobEv) refers to test_11_thread_run_detailed.o(.data._ZL7runFlag) for runFlag
    test_11_thread_run_detailed.o(.ARM.exidx.text._ZN12TestThread113jobEv) refers to test_11_thread_run_detailed.o(.text._ZN12TestThread113jobEv) for [Anonymous Symbol]
    test_11_thread_run_detailed.o(.rodata._ZTV12TestThread11) refers to test_11_thread_run_detailed.o(.text._ZN12TestThread11D2Ev) for TestThread11::~TestThread11__sub_object()
    test_11_thread_run_detailed.o(.rodata._ZTV12TestThread11) refers to test_11_thread_run_detailed.o(.text._ZN12TestThread11D0Ev) for TestThread11::~TestThread11__deallocating()
    test_11_thread_run_detailed.o(.rodata._ZTV12TestThread11) refers to test_00_thread_name.o(.text._ZN5osapi6Thread3runEv) for osapi::Thread::run()
    test_11_thread_run_detailed.o(.rodata._ZTV12TestThread11) refers to test_00_thread_name.o(.text._ZN5osapi6Thread9isRunningEv) for osapi::Thread::isRunning()
    test_11_thread_run_detailed.o(.rodata._ZTV12TestThread11) refers to test_00_thread_name.o(.text._ZN5osapi6Thread4joinEj) for osapi::Thread::join(unsigned int)
    test_11_thread_run_detailed.o(.rodata._ZTV12TestThread11) refers to test_00_thread_name.o(.text._ZN5osapi6Thread10isJoinableEv) for osapi::Thread::isJoinable()
    test_11_thread_run_detailed.o(.rodata._ZTV12TestThread11) refers to test_00_thread_name.o(.text._ZN5osapi6Thread7suspendEv) for osapi::Thread::suspend()
    test_11_thread_run_detailed.o(.rodata._ZTV12TestThread11) refers to test_00_thread_name.o(.text._ZN5osapi6Thread6resumeEv) for osapi::Thread::resume()
    test_11_thread_run_detailed.o(.rodata._ZTV12TestThread11) refers to test_00_thread_name.o(.text._ZN5osapi6Thread11setPriorityEi) for osapi::Thread::setPriority(int)
    test_11_thread_run_detailed.o(.rodata._ZTV12TestThread11) refers to test_00_thread_name.o(.text._ZN5osapi6Thread11getPriorityEv) for osapi::Thread::getPriority()
    test_11_thread_run_detailed.o(.rodata._ZTV12TestThread11) refers to test_00_thread_name.o(.text._ZN5osapi6Thread7getNameEv) for osapi::Thread::getName()
    test_11_thread_run_detailed.o(.rodata._ZTV12TestThread11) refers to test_00_thread_name.o(.text._ZN5osapi6Thread8getStateEv) for osapi::Thread::getState()
    test_11_thread_run_detailed.o(.rodata._ZTV12TestThread11) refers to test_00_thread_name.o(.text._ZN5osapi6Thread17getTotalStackSizeEv) for osapi::Thread::getTotalStackSize()
    test_11_thread_run_detailed.o(.rodata._ZTV12TestThread11) refers to test_00_thread_name.o(.text._ZN5osapi6Thread16getUsedStackSizeEv) for osapi::Thread::getUsedStackSize()
    test_11_thread_run_detailed.o(.rodata._ZTV12TestThread11) refers to test_00_thread_name.o(.text._ZN5osapi6Thread5sleepEj) for osapi::Thread::sleep(unsigned int)
    test_11_thread_run_detailed.o(.rodata._ZTV12TestThread11) refers to test_11_thread_run_detailed.o(.text._ZN12TestThread113jobEv) for TestThread11::job()
    test_10_thread_priority_change.o(.text._ZN13TestThread10AC2Ev) refers to test_10_thread_priority_change.o(.rodata.str1.1) for .L.str.11
    test_10_thread_priority_change.o(.text._ZN13TestThread10AC2Ev) refers to test_00_thread_name.o(.text._ZN5osapi6ThreadC2EijNS_8JoinableEPKc) for osapi::Thread::Thread__sub_object(int, unsigned int, osapi::Joinable, char const*)
    test_10_thread_priority_change.o(.text._ZN13TestThread10AC2Ev) refers to test_10_thread_priority_change.o(.rodata._ZTV13TestThread10A) for vtable for TestThread10A
    test_10_thread_priority_change.o(.ARM.exidx.text._ZN13TestThread10AC2Ev) refers to test_10_thread_priority_change.o(.text._ZN13TestThread10AC2Ev) for [Anonymous Symbol]
    test_10_thread_priority_change.o(.text._ZN13TestThread10BC2Ev) refers to test_10_thread_priority_change.o(.rodata.str1.1) for .L.str.11
    test_10_thread_priority_change.o(.text._ZN13TestThread10BC2Ev) refers to test_00_thread_name.o(.text._ZN5osapi6ThreadC2EijNS_8JoinableEPKc) for osapi::Thread::Thread__sub_object(int, unsigned int, osapi::Joinable, char const*)
    test_10_thread_priority_change.o(.text._ZN13TestThread10BC2Ev) refers to test_10_thread_priority_change.o(.rodata._ZTV13TestThread10B) for vtable for TestThread10B
    test_10_thread_priority_change.o(.ARM.exidx.text._ZN13TestThread10BC2Ev) refers to test_10_thread_priority_change.o(.text._ZN13TestThread10BC2Ev) for [Anonymous Symbol]
    test_10_thread_priority_change.o(.text._ZN13TestThread10BD2Ev) refers to test_00_thread_name.o(.text._ZN5osapi6ThreadD2Ev) for osapi::Thread::~Thread__sub_object()
    test_10_thread_priority_change.o(.ARM.exidx.text._ZN13TestThread10BD2Ev) refers to test_10_thread_priority_change.o(.text._ZN13TestThread10BD2Ev) for [Anonymous Symbol]
    test_10_thread_priority_change.o(.text._ZN13TestThread10AD2Ev) refers to test_00_thread_name.o(.text._ZN5osapi6ThreadD2Ev) for osapi::Thread::~Thread__sub_object()
    test_10_thread_priority_change.o(.ARM.exidx.text._ZN13TestThread10AD2Ev) refers to test_10_thread_priority_change.o(.text._ZN13TestThread10AD2Ev) for [Anonymous Symbol]
    test_10_thread_priority_change.o(.text._ZN13TestThread10AD0Ev) refers to test_10_thread_priority_change.o(.text._ZN13TestThread10AD2Ev) for TestThread10A::~TestThread10A__sub_object()
    test_10_thread_priority_change.o(.text._ZN13TestThread10AD0Ev) refers to new.cpp.o(.text._ZdlPv) for operator delete(void*)
    test_10_thread_priority_change.o(.ARM.exidx.text._ZN13TestThread10AD0Ev) refers to test_10_thread_priority_change.o(.text._ZN13TestThread10AD0Ev) for [Anonymous Symbol]
    test_10_thread_priority_change.o(.text._ZN13TestThread10A3jobEv) refers to test_10_thread_priority_change.o(.data._ZL21osapiInitialPriorityA) for osapiInitialPriorityA
    test_10_thread_priority_change.o(.text._ZN13TestThread10A3jobEv) refers to tasks.o(.text.uxTaskPriorityGet) for uxTaskPriorityGet
    test_10_thread_priority_change.o(.text._ZN13TestThread10A3jobEv) refers to test_10_thread_priority_change.o(.bss._ZL19priorityDifferenceA) for priorityDifferenceA
    test_10_thread_priority_change.o(.text._ZN13TestThread10A3jobEv) refers to test_10_thread_priority_change.o(.data._ZL7runFlag) for runFlag
    test_10_thread_priority_change.o(.ARM.exidx.text._ZN13TestThread10A3jobEv) refers to test_10_thread_priority_change.o(.text._ZN13TestThread10A3jobEv) for [Anonymous Symbol]
    test_10_thread_priority_change.o(.text._ZN13TestThread10BD0Ev) refers to test_10_thread_priority_change.o(.text._ZN13TestThread10BD2Ev) for TestThread10B::~TestThread10B__sub_object()
    test_10_thread_priority_change.o(.text._ZN13TestThread10BD0Ev) refers to new.cpp.o(.text._ZdlPv) for operator delete(void*)
    test_10_thread_priority_change.o(.ARM.exidx.text._ZN13TestThread10BD0Ev) refers to test_10_thread_priority_change.o(.text._ZN13TestThread10BD0Ev) for [Anonymous Symbol]
    test_10_thread_priority_change.o(.text._ZN13TestThread10B3jobEv) refers to test_10_thread_priority_change.o(.data._ZL21osapiInitialPriorityB) for osapiInitialPriorityB
    test_10_thread_priority_change.o(.text._ZN13TestThread10B3jobEv) refers to tasks.o(.text.uxTaskPriorityGet) for uxTaskPriorityGet
    test_10_thread_priority_change.o(.text._ZN13TestThread10B3jobEv) refers to test_10_thread_priority_change.o(.bss._ZL19priorityDifferenceB) for priorityDifferenceB
    test_10_thread_priority_change.o(.text._ZN13TestThread10B3jobEv) refers to test_10_thread_priority_change.o(.data._ZL7runFlag) for runFlag
    test_10_thread_priority_change.o(.ARM.exidx.text._ZN13TestThread10B3jobEv) refers to test_10_thread_priority_change.o(.text._ZN13TestThread10B3jobEv) for [Anonymous Symbol]
    test_10_thread_priority_change.o(.rodata._ZTV13TestThread10A) refers to test_10_thread_priority_change.o(.text._ZN13TestThread10AD2Ev) for TestThread10A::~TestThread10A__sub_object()
    test_10_thread_priority_change.o(.rodata._ZTV13TestThread10A) refers to test_10_thread_priority_change.o(.text._ZN13TestThread10AD0Ev) for TestThread10A::~TestThread10A__deallocating()
    test_10_thread_priority_change.o(.rodata._ZTV13TestThread10A) refers to test_00_thread_name.o(.text._ZN5osapi6Thread3runEv) for osapi::Thread::run()
    test_10_thread_priority_change.o(.rodata._ZTV13TestThread10A) refers to test_00_thread_name.o(.text._ZN5osapi6Thread9isRunningEv) for osapi::Thread::isRunning()
    test_10_thread_priority_change.o(.rodata._ZTV13TestThread10A) refers to test_00_thread_name.o(.text._ZN5osapi6Thread4joinEj) for osapi::Thread::join(unsigned int)
    test_10_thread_priority_change.o(.rodata._ZTV13TestThread10A) refers to test_00_thread_name.o(.text._ZN5osapi6Thread10isJoinableEv) for osapi::Thread::isJoinable()
    test_10_thread_priority_change.o(.rodata._ZTV13TestThread10A) refers to test_00_thread_name.o(.text._ZN5osapi6Thread7suspendEv) for osapi::Thread::suspend()
    test_10_thread_priority_change.o(.rodata._ZTV13TestThread10A) refers to test_00_thread_name.o(.text._ZN5osapi6Thread6resumeEv) for osapi::Thread::resume()
    test_10_thread_priority_change.o(.rodata._ZTV13TestThread10A) refers to test_00_thread_name.o(.text._ZN5osapi6Thread11setPriorityEi) for osapi::Thread::setPriority(int)
    test_10_thread_priority_change.o(.rodata._ZTV13TestThread10A) refers to test_00_thread_name.o(.text._ZN5osapi6Thread11getPriorityEv) for osapi::Thread::getPriority()
    test_10_thread_priority_change.o(.rodata._ZTV13TestThread10A) refers to test_00_thread_name.o(.text._ZN5osapi6Thread7getNameEv) for osapi::Thread::getName()
    test_10_thread_priority_change.o(.rodata._ZTV13TestThread10A) refers to test_00_thread_name.o(.text._ZN5osapi6Thread8getStateEv) for osapi::Thread::getState()
    test_10_thread_priority_change.o(.rodata._ZTV13TestThread10A) refers to test_00_thread_name.o(.text._ZN5osapi6Thread17getTotalStackSizeEv) for osapi::Thread::getTotalStackSize()
    test_10_thread_priority_change.o(.rodata._ZTV13TestThread10A) refers to test_00_thread_name.o(.text._ZN5osapi6Thread16getUsedStackSizeEv) for osapi::Thread::getUsedStackSize()
    test_10_thread_priority_change.o(.rodata._ZTV13TestThread10A) refers to test_00_thread_name.o(.text._ZN5osapi6Thread5sleepEj) for osapi::Thread::sleep(unsigned int)
    test_10_thread_priority_change.o(.rodata._ZTV13TestThread10A) refers to test_10_thread_priority_change.o(.text._ZN13TestThread10A3jobEv) for TestThread10A::job()
    test_10_thread_priority_change.o(.rodata._ZTV13TestThread10B) refers to test_10_thread_priority_change.o(.text._ZN13TestThread10BD2Ev) for TestThread10B::~TestThread10B__sub_object()
    test_10_thread_priority_change.o(.rodata._ZTV13TestThread10B) refers to test_10_thread_priority_change.o(.text._ZN13TestThread10BD0Ev) for TestThread10B::~TestThread10B__deallocating()
    test_10_thread_priority_change.o(.rodata._ZTV13TestThread10B) refers to test_00_thread_name.o(.text._ZN5osapi6Thread3runEv) for osapi::Thread::run()
    test_10_thread_priority_change.o(.rodata._ZTV13TestThread10B) refers to test_00_thread_name.o(.text._ZN5osapi6Thread9isRunningEv) for osapi::Thread::isRunning()
    test_10_thread_priority_change.o(.rodata._ZTV13TestThread10B) refers to test_00_thread_name.o(.text._ZN5osapi6Thread4joinEj) for osapi::Thread::join(unsigned int)
    test_10_thread_priority_change.o(.rodata._ZTV13TestThread10B) refers to test_00_thread_name.o(.text._ZN5osapi6Thread10isJoinableEv) for osapi::Thread::isJoinable()
    test_10_thread_priority_change.o(.rodata._ZTV13TestThread10B) refers to test_00_thread_name.o(.text._ZN5osapi6Thread7suspendEv) for osapi::Thread::suspend()
    test_10_thread_priority_change.o(.rodata._ZTV13TestThread10B) refers to test_00_thread_name.o(.text._ZN5osapi6Thread6resumeEv) for osapi::Thread::resume()
    test_10_thread_priority_change.o(.rodata._ZTV13TestThread10B) refers to test_00_thread_name.o(.text._ZN5osapi6Thread11setPriorityEi) for osapi::Thread::setPriority(int)
    test_10_thread_priority_change.o(.rodata._ZTV13TestThread10B) refers to test_00_thread_name.o(.text._ZN5osapi6Thread11getPriorityEv) for osapi::Thread::getPriority()
    test_10_thread_priority_change.o(.rodata._ZTV13TestThread10B) refers to test_00_thread_name.o(.text._ZN5osapi6Thread7getNameEv) for osapi::Thread::getName()
    test_10_thread_priority_change.o(.rodata._ZTV13TestThread10B) refers to test_00_thread_name.o(.text._ZN5osapi6Thread8getStateEv) for osapi::Thread::getState()
    test_10_thread_priority_change.o(.rodata._ZTV13TestThread10B) refers to test_00_thread_name.o(.text._ZN5osapi6Thread17getTotalStackSizeEv) for osapi::Thread::getTotalStackSize()
    test_10_thread_priority_change.o(.rodata._ZTV13TestThread10B) refers to test_00_thread_name.o(.text._ZN5osapi6Thread16getUsedStackSizeEv) for osapi::Thread::getUsedStackSize()
    test_10_thread_priority_change.o(.rodata._ZTV13TestThread10B) refers to test_00_thread_name.o(.text._ZN5osapi6Thread5sleepEj) for osapi::Thread::sleep(unsigned int)
    test_10_thread_priority_change.o(.rodata._ZTV13TestThread10B) refers to test_10_thread_priority_change.o(.text._ZN13TestThread10B3jobEv) for TestThread10B::job()


==============================================================================

Removing Unused input sections from the image.

    Removing main.o(.text), (0 bytes).
    Removing main.o(.ARM.exidx.text.exit), (8 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).
    Removing basic.o(.text), (0 bytes).
    Removing basic.o(.ARM.exidx.text.CU_basic_run_tests), (8 bytes).
    Removing basic.o(.ARM.exidx.text.basic_initialize), (8 bytes).
    Removing basic.o(.ARM.exidx.text.basic_run_all_tests), (8 bytes).
    Removing basic.o(.text.CU_basic_run_suite), (54 bytes).
    Removing basic.o(.ARM.exidx.text.CU_basic_run_suite), (8 bytes).
    Removing basic.o(.text.basic_run_suite), (28 bytes).
    Removing basic.o(.ARM.exidx.text.basic_run_suite), (8 bytes).
    Removing basic.o(.text.CU_basic_run_test), (74 bytes).
    Removing basic.o(.ARM.exidx.text.CU_basic_run_test), (8 bytes).
    Removing basic.o(.text.basic_run_single_test), (32 bytes).
    Removing basic.o(.ARM.exidx.text.basic_run_single_test), (8 bytes).
    Removing basic.o(.ARM.exidx.text.CU_basic_set_mode), (8 bytes).
    Removing basic.o(.text.CU_basic_get_mode), (12 bytes).
    Removing basic.o(.ARM.exidx.text.CU_basic_get_mode), (8 bytes).
    Removing basic.o(.ARM.exidx.text.CU_basic_show_failures), (8 bytes).
    Removing basic.o(.ARM.exidx.text.basic_test_start_message_handler), (8 bytes).
    Removing basic.o(.ARM.exidx.text.basic_test_complete_message_handler), (8 bytes).
    Removing basic.o(.ARM.exidx.text.basic_all_tests_complete_message_handler), (8 bytes).
    Removing basic.o(.ARM.exidx.text.basic_suite_init_failure_message_handler), (8 bytes).
    Removing basic.o(.ARM.exidx.text.basic_suite_cleanup_failure_message_handler), (8 bytes).
    Removing cuerror.o(.text), (0 bytes).
    Removing cuerror.o(.ARM.exidx.text.CU_set_error), (8 bytes).
    Removing cuerror.o(.ARM.exidx.text.get_error_desc), (8 bytes).
    Removing cuerror.o(.ARM.exidx.text.CU_get_error), (8 bytes).
    Removing cuerror.o(.text.CU_get_error_msg), (18 bytes).
    Removing cuerror.o(.ARM.exidx.text.CU_get_error_msg), (8 bytes).
    Removing cuerror.o(.text.CU_set_error_action), (24 bytes).
    Removing cuerror.o(.ARM.exidx.text.CU_set_error_action), (8 bytes).
    Removing cuerror.o(.ARM.exidx.text.CU_get_error_action), (8 bytes).
    Removing mymem.o(.text), (0 bytes).
    Removing testdb.o(.text), (0 bytes).
    Removing testdb.o(.ARM.exidx.text.CU_initialize_registry), (8 bytes).
    Removing testdb.o(.ARM.exidx.text.CU_cleanup_registry), (8 bytes).
    Removing testdb.o(.ARM.exidx.text.CU_create_new_registry), (8 bytes).
    Removing testdb.o(.text.CU_registry_initialized), (18 bytes).
    Removing testdb.o(.ARM.exidx.text.CU_registry_initialized), (8 bytes).
    Removing testdb.o(.ARM.exidx.text.CU_destroy_existing_registry), (8 bytes).
    Removing testdb.o(.ARM.exidx.text.CU_get_registry), (8 bytes).
    Removing testdb.o(.ARM.exidx.text.CU_set_registry), (8 bytes).
    Removing testdb.o(.ARM.exidx.text.CU_add_suite_with_setup_and_teardown), (8 bytes).
    Removing testdb.o(.ARM.exidx.text.create_suite), (8 bytes).
    Removing testdb.o(.ARM.exidx.text.suite_exists), (8 bytes).
    Removing testdb.o(.ARM.exidx.text.insert_suite), (8 bytes).
    Removing testdb.o(.ARM.exidx.text.CU_add_suite), (8 bytes).
    Removing testdb.o(.text.CU_set_suite_active), (52 bytes).
    Removing testdb.o(.ARM.exidx.text.CU_set_suite_active), (8 bytes).
    Removing testdb.o(.text.CU_set_suite_name), (96 bytes).
    Removing testdb.o(.ARM.exidx.text.CU_set_suite_name), (8 bytes).
    Removing testdb.o(.text.CU_set_suite_initfunc), (52 bytes).
    Removing testdb.o(.ARM.exidx.text.CU_set_suite_initfunc), (8 bytes).
    Removing testdb.o(.text.CU_set_suite_cleanupfunc), (52 bytes).
    Removing testdb.o(.ARM.exidx.text.CU_set_suite_cleanupfunc), (8 bytes).
    Removing testdb.o(.text.CU_get_suite), (86 bytes).
    Removing testdb.o(.ARM.exidx.text.CU_get_suite), (8 bytes).
    Removing testdb.o(.text.CU_get_suite_by_name), (134 bytes).
    Removing testdb.o(.ARM.exidx.text.CU_get_suite_by_name), (8 bytes).
    Removing testdb.o(.text.CU_get_suite_at_pos), (70 bytes).
    Removing testdb.o(.ARM.exidx.text.CU_get_suite_at_pos), (8 bytes).
    Removing testdb.o(.text.CU_get_suite_by_index), (122 bytes).
    Removing testdb.o(.ARM.exidx.text.CU_get_suite_by_index), (8 bytes).
    Removing testdb.o(.text.CU_get_suite_pos), (148 bytes).
    Removing testdb.o(.ARM.exidx.text.CU_get_suite_pos), (8 bytes).
    Removing testdb.o(.text.CU_get_suite_pos_by_name), (154 bytes).
    Removing testdb.o(.ARM.exidx.text.CU_get_suite_pos_by_name), (8 bytes).
    Removing testdb.o(.ARM.exidx.text.CU_add_test), (8 bytes).
    Removing testdb.o(.ARM.exidx.text.create_test), (8 bytes).
    Removing testdb.o(.ARM.exidx.text.test_exists), (8 bytes).
    Removing testdb.o(.ARM.exidx.text.insert_test), (8 bytes).
    Removing testdb.o(.text.CU_set_test_active), (52 bytes).
    Removing testdb.o(.ARM.exidx.text.CU_set_test_active), (8 bytes).
    Removing testdb.o(.text.CU_set_test_name), (96 bytes).
    Removing testdb.o(.ARM.exidx.text.CU_set_test_name), (8 bytes).
    Removing testdb.o(.text.CU_set_test_func), (58 bytes).
    Removing testdb.o(.ARM.exidx.text.CU_set_test_func), (8 bytes).
    Removing testdb.o(.text.CU_get_test), (96 bytes).
    Removing testdb.o(.ARM.exidx.text.CU_get_test), (8 bytes).
    Removing testdb.o(.text.CU_get_test_by_name), (134 bytes).
    Removing testdb.o(.ARM.exidx.text.CU_get_test_by_name), (8 bytes).
    Removing testdb.o(.text.CU_get_test_at_pos), (80 bytes).
    Removing testdb.o(.ARM.exidx.text.CU_get_test_at_pos), (8 bytes).
    Removing testdb.o(.text.CU_get_test_by_index), (106 bytes).
    Removing testdb.o(.ARM.exidx.text.CU_get_test_by_index), (8 bytes).
    Removing testdb.o(.text.CU_get_test_pos), (158 bytes).
    Removing testdb.o(.ARM.exidx.text.CU_get_test_pos), (8 bytes).
    Removing testdb.o(.text.CU_get_test_pos_by_name), (164 bytes).
    Removing testdb.o(.ARM.exidx.text.CU_get_test_pos_by_name), (8 bytes).
    Removing testdb.o(.text.CU_register_nsuites), (218 bytes).
    Removing testdb.o(.ARM.exidx.text.CU_register_nsuites), (8 bytes).
    Removing testdb.o(.text.CU_register_suites), (18 bytes).
    Removing testdb.o(.ARM.exidx.text.CU_register_suites), (8 bytes).
    Removing testdb.o(.ARM.exidx.text.cleanup_test_registry), (8 bytes).
    Removing testdb.o(.ARM.exidx.text.cleanup_suite), (8 bytes).
    Removing testdb.o(.ARM.exidx.text.cleanup_test), (8 bytes).
    Removing testrun.o(.text), (0 bytes).
    Removing testrun.o(.ARM.exidx.text.CU_assertImplementation), (8 bytes).
    Removing testrun.o(.ARM.exidx.text.add_failure), (8 bytes).
    Removing testrun.o(.text.CU_set_suite_start_handler), (20 bytes).
    Removing testrun.o(.ARM.exidx.text.CU_set_suite_start_handler), (8 bytes).
    Removing testrun.o(.ARM.exidx.text.CU_set_test_start_handler), (8 bytes).
    Removing testrun.o(.ARM.exidx.text.CU_set_test_complete_handler), (8 bytes).
    Removing testrun.o(.text.CU_set_suite_complete_handler), (20 bytes).
    Removing testrun.o(.ARM.exidx.text.CU_set_suite_complete_handler), (8 bytes).
    Removing testrun.o(.ARM.exidx.text.CU_set_all_test_complete_handler), (8 bytes).
    Removing testrun.o(.ARM.exidx.text.CU_set_suite_init_failure_handler), (8 bytes).
    Removing testrun.o(.ARM.exidx.text.CU_set_suite_cleanup_failure_handler), (8 bytes).
    Removing testrun.o(.text.CU_get_suite_start_handler), (12 bytes).
    Removing testrun.o(.ARM.exidx.text.CU_get_suite_start_handler), (8 bytes).
    Removing testrun.o(.text.CU_get_test_start_handler), (12 bytes).
    Removing testrun.o(.ARM.exidx.text.CU_get_test_start_handler), (8 bytes).
    Removing testrun.o(.text.CU_get_test_complete_handler), (12 bytes).
    Removing testrun.o(.ARM.exidx.text.CU_get_test_complete_handler), (8 bytes).
    Removing testrun.o(.text.CU_get_suite_complete_handler), (12 bytes).
    Removing testrun.o(.ARM.exidx.text.CU_get_suite_complete_handler), (8 bytes).
    Removing testrun.o(.text.CU_get_all_test_complete_handler), (12 bytes).
    Removing testrun.o(.ARM.exidx.text.CU_get_all_test_complete_handler), (8 bytes).
    Removing testrun.o(.text.CU_get_suite_init_failure_handler), (12 bytes).
    Removing testrun.o(.ARM.exidx.text.CU_get_suite_init_failure_handler), (8 bytes).
    Removing testrun.o(.text.CU_get_suite_cleanup_failure_handler), (12 bytes).
    Removing testrun.o(.ARM.exidx.text.CU_get_suite_cleanup_failure_handler), (8 bytes).
    Removing testrun.o(.text.CU_get_number_of_suites_run), (12 bytes).
    Removing testrun.o(.ARM.exidx.text.CU_get_number_of_suites_run), (8 bytes).
    Removing testrun.o(.text.CU_get_number_of_suites_failed), (12 bytes).
    Removing testrun.o(.ARM.exidx.text.CU_get_number_of_suites_failed), (8 bytes).
    Removing testrun.o(.text.CU_get_number_of_suites_inactive), (12 bytes).
    Removing testrun.o(.ARM.exidx.text.CU_get_number_of_suites_inactive), (8 bytes).
    Removing testrun.o(.text.CU_get_number_of_tests_run), (12 bytes).
    Removing testrun.o(.ARM.exidx.text.CU_get_number_of_tests_run), (8 bytes).
    Removing testrun.o(.text.CU_get_number_of_tests_failed), (12 bytes).
    Removing testrun.o(.ARM.exidx.text.CU_get_number_of_tests_failed), (8 bytes).
    Removing testrun.o(.text.CU_get_number_of_tests_inactive), (12 bytes).
    Removing testrun.o(.ARM.exidx.text.CU_get_number_of_tests_inactive), (8 bytes).
    Removing testrun.o(.text.CU_get_number_of_asserts), (12 bytes).
    Removing testrun.o(.ARM.exidx.text.CU_get_number_of_asserts), (8 bytes).
    Removing testrun.o(.text.CU_get_number_of_successes), (16 bytes).
    Removing testrun.o(.ARM.exidx.text.CU_get_number_of_successes), (8 bytes).
    Removing testrun.o(.text.CU_get_number_of_failures), (12 bytes).
    Removing testrun.o(.ARM.exidx.text.CU_get_number_of_failures), (8 bytes).
    Removing testrun.o(.text.CU_get_number_of_failure_records), (12 bytes).
    Removing testrun.o(.ARM.exidx.text.CU_get_number_of_failure_records), (8 bytes).
    Removing testrun.o(.ARM.exidx.text.CU_get_elapsed_time), (8 bytes).
    Removing testrun.o(.ARM.exidx.text.CU_get_failure_list), (8 bytes).
    Removing testrun.o(.text.CU_get_run_summary), (10 bytes).
    Removing testrun.o(.ARM.exidx.text.CU_get_run_summary), (8 bytes).
    Removing testrun.o(.ARM.exidx.text.CU_run_all_tests), (8 bytes).
    Removing testrun.o(.ARM.exidx.text.clear_previous_results), (8 bytes).
    Removing testrun.o(.ARM.exidx.text.run_single_suite), (8 bytes).
    Removing testrun.o(.text.CU_run_suite), (256 bytes).
    Removing testrun.o(.ARM.exidx.text.CU_run_suite), (8 bytes).
    Removing testrun.o(.text.CU_run_test), (792 bytes).
    Removing testrun.o(.ARM.exidx.text.CU_run_test), (8 bytes).
    Removing testrun.o(.ARM.exidx.text.run_single_test), (8 bytes).
    Removing testrun.o(.ARM.exidx.text.CU_clear_previous_results), (8 bytes).
    Removing testrun.o(.text.CU_get_current_suite), (12 bytes).
    Removing testrun.o(.ARM.exidx.text.CU_get_current_suite), (8 bytes).
    Removing testrun.o(.text.CU_get_current_test), (12 bytes).
    Removing testrun.o(.ARM.exidx.text.CU_get_current_test), (8 bytes).
    Removing testrun.o(.ARM.exidx.text.CU_is_test_running), (8 bytes).
    Removing testrun.o(.text.CU_set_fail_on_inactive), (20 bytes).
    Removing testrun.o(.ARM.exidx.text.CU_set_fail_on_inactive), (8 bytes).
    Removing testrun.o(.text.CU_get_fail_on_inactive), (12 bytes).
    Removing testrun.o(.ARM.exidx.text.CU_get_fail_on_inactive), (8 bytes).
    Removing testrun.o(.ARM.exidx.text.CU_print_run_results), (8 bytes).
    Removing testrun.o(.ARM.exidx.text.CU_get_run_results_string), (8 bytes).
    Removing testrun.o(.ARM.exidx.text.cleanup_failure_list), (8 bytes).
    Removing util.o(.text), (0 bytes).
    Removing util.o(.text.CU_translate_special_characters), (292 bytes).
    Removing util.o(.ARM.exidx.text.CU_translate_special_characters), (8 bytes).
    Removing util.o(.text.get_index), (106 bytes).
    Removing util.o(.ARM.exidx.text.get_index), (8 bytes).
    Removing util.o(.text.CU_translated_strlen), (118 bytes).
    Removing util.o(.ARM.exidx.text.CU_translated_strlen), (8 bytes).
    Removing util.o(.ARM.exidx.text.CU_compare_strings), (8 bytes).
    Removing util.o(.text.CU_trim), (22 bytes).
    Removing util.o(.ARM.exidx.text.CU_trim), (8 bytes).
    Removing util.o(.text.CU_trim_left), (152 bytes).
    Removing util.o(.ARM.exidx.text.CU_trim_left), (8 bytes).
    Removing util.o(.text.CU_trim_right), (116 bytes).
    Removing util.o(.ARM.exidx.text.CU_trim_right), (8 bytes).
    Removing util.o(.ARM.exidx.text.CU_number_width), (8 bytes).
    Removing util.o(.rodata.CU_bindings), (24 bytes).
    Removing osapi_freertos.o(.text), (0 bytes).
    Removing osapi_freertos.o(.ARM.exidx.text._ZN5osapi13getSystemTimeEv), (8 bytes).
    Removing test_00_thread_name.o(.text), (0 bytes).
    Removing test_00_thread_name.o(.ARM.exidx.text._Z15TEST_ThreadNamev), (8 bytes).
    Removing test_01_thread_creation.o(.text), (0 bytes).
    Removing test_01_thread_creation.o(.ARM.exidx.text._Z19TEST_ThreadCreationv), (8 bytes).
    Removing test_02_thread_join.o(.text), (0 bytes).
    Removing test_02_thread_join.o(.ARM.exidx.text._Z15TEST_ThreadJoinv), (8 bytes).
    Removing test_03_thread_suspend_resume.o(.text), (0 bytes).
    Removing test_03_thread_suspend_resume.o(.ARM.exidx.text._Z24TEST_ThreadSuspendResumev), (8 bytes).
    Removing test_04_thread_priority.o(.text), (0 bytes).
    Removing test_04_thread_priority.o(.ARM.exidx.text._Z19TEST_ThreadPriorityv), (8 bytes).
    Removing test_05_thread_delay.o(.text), (0 bytes).
    Removing test_05_thread_delay.o(.ARM.exidx.text._Z16TEST_ThreadDelayv), (8 bytes).
    Removing test_06_mutex.o(.text), (0 bytes).
    Removing test_06_mutex.o(.ARM.exidx.text._Z10TEST_Mutexv), (8 bytes).
    Removing test_07_recursive_mutex.o(.text), (0 bytes).
    Removing test_07_recursive_mutex.o(.ARM.exidx.text._Z19TEST_RecursiveMutexv), (8 bytes).
    Removing test_08_mortal_thread.o(.text), (0 bytes).
    Removing test_08_mortal_thread.o(.ARM.exidx.text._Z17TEST_MortalThreadv), (8 bytes).
    Removing test_osapi.o(.text), (0 bytes).
    Removing test_osapi.o(.ARM.exidx.text._Z14taskOSAPI_TESTPv), (8 bytes).
    Removing test_14_thread_stack_size.o(.text), (0 bytes).
    Removing test_14_thread_stack_size.o(.ARM.exidx.text._Z20TEST_ThreadStackSizev), (8 bytes).
    Removing test_13_thread_suspend_inactive.o(.text), (0 bytes).
    Removing test_13_thread_suspend_inactive.o(.ARM.exidx.text._Z26TEST_ThreadSuspendInactivev), (8 bytes).
    Removing test_12_thread_state.o(.text), (0 bytes).
    Removing test_12_thread_state.o(.ARM.exidx.text._Z24TEST_ThreadStateCheckingv), (8 bytes).
    Removing test_11_thread_run_detailed.o(.text), (0 bytes).
    Removing test_11_thread_run_detailed.o(.ARM.exidx.text._Z22TEST_ThreadRunDetailedv), (8 bytes).
    Removing test_10_thread_priority_change.o(.text), (0 bytes).
    Removing test_10_thread_priority_change.o(.ARM.exidx.text._Z25TEST_ThreadPriorityChangev), (8 bytes).
    Removing clib_arm.o(.text), (0 bytes).
    Removing cmsis_os2.o(.text), (0 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.SysTick_Handler), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelInitialize), (82 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelInitialize), (8 bytes).
    Removing cmsis_os2.o(.text.IRQ_Context), (80 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.IRQ_Context), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelGetInfo), (84 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelGetInfo), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelGetState), (82 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelGetState), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelStart), (92 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelStart), (8 bytes).
    Removing cmsis_os2.o(.text.SVC_Setup), (14 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.SVC_Setup), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelLock), (82 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelLock), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelUnlock), (106 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelUnlock), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelRestoreLock), (132 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelRestoreLock), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelGetTickCount), (34 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelGetTickCount), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelGetTickFreq), (6 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelGetTickFreq), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelGetSysTimerCount), (118 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelGetSysTimerCount), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelGetSysTimerFreq), (12 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelGetSysTimerFreq), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadNew), (342 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadNew), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadGetName), (46 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadGetName), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadGetId), (16 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadGetId), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadGetState), (100 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadGetState), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadGetStackSpace), (48 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadGetStackSpace), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadSetPriority), (80 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadSetPriority), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadGetPriority), (48 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadGetPriority), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadYield), (54 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadYield), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadSuspend), (60 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadSuspend), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadResume), (60 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadResume), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadExit), (10 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadExit), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadTerminate), (90 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadTerminate), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadGetCount), (32 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadGetCount), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadEnumerate), (176 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadEnumerate), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadFlagsSet), (178 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadFlagsSet), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadFlagsClear), (134 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadFlagsClear), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadFlagsGet), (66 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadFlagsGet), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadFlagsWait), (286 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadFlagsWait), (8 bytes).
    Removing cmsis_os2.o(.text.osDelay), (48 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osDelay), (8 bytes).
    Removing cmsis_os2.o(.text.osDelayUntil), (96 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osDelayUntil), (8 bytes).
    Removing cmsis_os2.o(.text.osTimerNew), (376 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osTimerNew), (8 bytes).
    Removing cmsis_os2.o(.text.TimerCallback), (42 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.TimerCallback), (8 bytes).
    Removing cmsis_os2.o(.text.osTimerGetName), (46 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osTimerGetName), (8 bytes).
    Removing cmsis_os2.o(.text.osTimerStart), (88 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osTimerStart), (8 bytes).
    Removing cmsis_os2.o(.text.osTimerStop), (106 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osTimerStop), (8 bytes).
    Removing cmsis_os2.o(.text.osTimerIsRunning), (46 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osTimerIsRunning), (8 bytes).
    Removing cmsis_os2.o(.text.osTimerDelete), (120 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osTimerDelete), (8 bytes).
    Removing cmsis_os2.o(.text.osEventFlagsNew), (130 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osEventFlagsNew), (8 bytes).
    Removing cmsis_os2.o(.text.osEventFlagsSet), (126 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osEventFlagsSet), (8 bytes).
    Removing cmsis_os2.o(.text.osEventFlagsClear), (116 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osEventFlagsClear), (8 bytes).
    Removing cmsis_os2.o(.text.osEventFlagsGet), (60 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osEventFlagsGet), (8 bytes).
    Removing cmsis_os2.o(.text.osEventFlagsWait), (218 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osEventFlagsWait), (8 bytes).
    Removing cmsis_os2.o(.text.osEventFlagsDelete), (60 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osEventFlagsDelete), (8 bytes).
    Removing cmsis_os2.o(.text.osMutexNew), (254 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMutexNew), (8 bytes).
    Removing cmsis_os2.o(.text.osMutexAcquire), (154 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMutexAcquire), (8 bytes).
    Removing cmsis_os2.o(.text.osMutexRelease), (122 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMutexRelease), (8 bytes).
    Removing cmsis_os2.o(.text.osMutexGetOwner), (50 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMutexGetOwner), (8 bytes).
    Removing cmsis_os2.o(.text.osMutexDelete), (64 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMutexDelete), (8 bytes).
    Removing cmsis_os2.o(.text.osSemaphoreNew), (268 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osSemaphoreNew), (8 bytes).
    Removing cmsis_os2.o(.text.osSemaphoreAcquire), (162 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osSemaphoreAcquire), (8 bytes).
    Removing cmsis_os2.o(.text.osSemaphoreRelease), (132 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osSemaphoreRelease), (8 bytes).
    Removing cmsis_os2.o(.text.osSemaphoreGetCount), (58 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osSemaphoreGetCount), (8 bytes).
    Removing cmsis_os2.o(.text.osSemaphoreDelete), (60 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osSemaphoreDelete), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueNew), (214 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueNew), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueuePut), (192 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueuePut), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueGet), (188 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueGet), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueGetCapacity), (34 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetCapacity), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueGetMsgSize), (34 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetMsgSize), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueGetCount), (58 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetCount), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueGetSpace), (98 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetSpace), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueReset), (60 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueReset), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueDelete), (60 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueDelete), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolNew), (436 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolNew), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolGetName), (52 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetName), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolAlloc), (250 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolAlloc), (8 bytes).
    Removing cmsis_os2.o(.text.AllocBlock), (38 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.AllocBlock), (8 bytes).
    Removing cmsis_os2.o(.text.CreateBlock), (50 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.CreateBlock), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolFree), (302 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolFree), (8 bytes).
    Removing cmsis_os2.o(.text.FreeBlock), (28 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.FreeBlock), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolGetCapacity), (60 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetCapacity), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolGetBlockSize), (60 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetBlockSize), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolGetCount), (98 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetCount), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolGetSpace), (88 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetSpace), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolDelete), (152 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolDelete), (8 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.vApplicationStackOverflowHook), (8 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.vApplicationGetIdleTaskMemory), (8 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.vApplicationGetTimerTaskMemory), (8 bytes).
    Removing cmsis_os2.o(.text.__NVIC_SetPriority), (66 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.__NVIC_SetPriority), (8 bytes).
    Removing cmsis_os2.o(.bss.KernelState), (4 bytes).
    Removing cmsis_os2.o(.rodata.str1.1), (17 bytes).
    Removing os_systick.o(.text), (0 bytes).
    Removing os_systick.o(.text.OS_Tick_Setup), (126 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Setup), (8 bytes).
    Removing os_systick.o(.text.__NVIC_SetPriority), (66 bytes).
    Removing os_systick.o(.ARM.exidx.text.__NVIC_SetPriority), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_Enable), (60 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Enable), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_Disable), (64 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Disable), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_AcknowledgeIRQ), (12 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetIRQn), (6 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetClock), (12 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetClock), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetInterval), (14 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetCount), (32 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetCount), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetOverflow), (16 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow), (8 bytes).
    Removing os_systick.o(.bss.PendST), (1 bytes).
    Removing retarget_io.o(.text), (0 bytes).
    Removing retarget_io.o(.ARM.exidx.text.ITM_SendChar), (8 bytes).
    Removing retarget_io.o(.text.ITM_ReceiveChar), (62 bytes).
    Removing retarget_io.o(.ARM.exidx.text.ITM_ReceiveChar), (8 bytes).
    Removing retarget_io.o(.ARM.exidx.text.fputc), (8 bytes).
    Removing retarget_io.o(.ARM.exidx.text.stdout_putchar), (8 bytes).
    Removing retarget_io.o(.text.fgetc), (12 bytes).
    Removing retarget_io.o(.ARM.exidx.text.fgetc), (8 bytes).
    Removing retarget_io.o(.text.__backspace), (12 bytes).
    Removing retarget_io.o(.ARM.exidx.text.__backspace), (8 bytes).
    Removing retarget_io.o(.ARM.exidx.text.__aeabi_assert), (8 bytes).
    Removing retarget_io.o(.ARM.exidx.text.abort), (8 bytes).
    Removing retarget_io.o(.data.ITM_RxBuffer), (4 bytes).
    Removing stm32f4xx_hal.o(.text), (0 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_Init), (46 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_Init), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_InitTick), (112 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_InitTick), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_MspInit), (2 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_MspInit), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_DeInit), (82 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_DeInit), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_MspDeInit), (2 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_MspDeInit), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_IncTick), (26 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_IncTick), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_GetTick), (12 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetTick), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_GetTickPrio), (12 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetTickPrio), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_SetTickFreq), (106 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_SetTickFreq), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_GetTickFreq), (12 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetTickFreq), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_Delay), (66 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_Delay), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_SuspendTick), (18 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_SuspendTick), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_ResumeTick), (18 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_ResumeTick), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_GetHalVersion), (10 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetHalVersion), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_GetREVID), (14 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetREVID), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_GetDEVID), (16 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetDEVID), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_DBGMCU_EnableDBGSleepMode), (18 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_EnableDBGSleepMode), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_DBGMCU_DisableDBGSleepMode), (18 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_DisableDBGSleepMode), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_DBGMCU_EnableDBGStopMode), (18 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_EnableDBGStopMode), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_DBGMCU_DisableDBGStopMode), (18 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_DisableDBGStopMode), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_DBGMCU_EnableDBGStandbyMode), (18 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_EnableDBGStandbyMode), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_DBGMCU_DisableDBGStandbyMode), (18 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_DisableDBGStandbyMode), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_EnableCompensationCell), (14 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_EnableCompensationCell), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_DisableCompensationCell), (14 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_DisableCompensationCell), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_GetUIDw0), (12 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetUIDw0), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_GetUIDw1), (12 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetUIDw1), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_GetUIDw2), (12 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetUIDw2), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_EnableMemorySwappingBank), (12 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_EnableMemorySwappingBank), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_DisableMemorySwappingBank), (12 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_DisableMemorySwappingBank), (8 bytes).
    Removing stm32f4xx_hal.o(.data.uwTickPrio), (4 bytes).
    Removing stm32f4xx_hal.o(.data.uwTickFreq), (1 bytes).
    Removing stm32f4xx_hal.o(.bss.uwTick), (4 bytes).
    Removing stm32f4xx_hal_cortex.o(.text), (0 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SetPriorityGrouping), (16 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SetPriorityGrouping), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.__NVIC_SetPriorityGrouping), (60 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_SetPriorityGrouping), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SetPriority), (50 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SetPriority), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.__NVIC_GetPriorityGrouping), (16 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_GetPriorityGrouping), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.__NVIC_SetPriority), (66 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_SetPriority), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.NVIC_EncodePriority), (108 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.NVIC_EncodePriority), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.HAL_NVIC_EnableIRQ), (20 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_EnableIRQ), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.__NVIC_EnableIRQ), (48 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_EnableIRQ), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.HAL_NVIC_DisableIRQ), (20 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_DisableIRQ), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.__NVIC_DisableIRQ), (56 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_DisableIRQ), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SystemReset), (4 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SystemReset), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.__NVIC_SystemReset), (38 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_SystemReset), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.HAL_SYSTICK_Config), (16 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_Config), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.SysTick_Config), (82 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.SysTick_Config), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.HAL_MPU_Disable), (34 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_MPU_Disable), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.HAL_MPU_Enable), (48 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_MPU_Enable), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.HAL_MPU_ConfigRegion), (158 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_MPU_ConfigRegion), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.HAL_NVIC_GetPriorityGrouping), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetPriorityGrouping), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.HAL_NVIC_GetPriority), (36 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetPriority), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.NVIC_DecodePriority), (118 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.NVIC_DecodePriority), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.__NVIC_GetPriority), (66 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_GetPriority), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SetPendingIRQ), (20 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SetPendingIRQ), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.__NVIC_SetPendingIRQ), (48 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_SetPendingIRQ), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.HAL_NVIC_GetPendingIRQ), (20 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetPendingIRQ), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.__NVIC_GetPendingIRQ), (64 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_GetPendingIRQ), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.HAL_NVIC_ClearPendingIRQ), (20 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_ClearPendingIRQ), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.__NVIC_ClearPendingIRQ), (48 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_ClearPendingIRQ), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.HAL_NVIC_GetActive), (20 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetActive), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.__NVIC_GetActive), (64 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_GetActive), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.HAL_SYSTICK_CLKSourceConfig), (52 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_CLKSourceConfig), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.HAL_SYSTICK_IRQHandler), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_IRQHandler), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.HAL_SYSTICK_Callback), (2 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_Callback), (8 bytes).
    Removing stm32f4xx_hal_gpio.o(.text), (0 bytes).
    Removing stm32f4xx_hal_gpio.o(.text.HAL_GPIO_Init), (1006 bytes).
    Removing stm32f4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_Init), (8 bytes).
    Removing stm32f4xx_hal_gpio.o(.text.HAL_GPIO_DeInit), (604 bytes).
    Removing stm32f4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_DeInit), (8 bytes).
    Removing stm32f4xx_hal_gpio.o(.text.HAL_GPIO_ReadPin), (46 bytes).
    Removing stm32f4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_ReadPin), (8 bytes).
    Removing stm32f4xx_hal_gpio.o(.text.HAL_GPIO_WritePin), (46 bytes).
    Removing stm32f4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_WritePin), (8 bytes).
    Removing stm32f4xx_hal_gpio.o(.text.HAL_GPIO_TogglePin), (38 bytes).
    Removing stm32f4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_TogglePin), (8 bytes).
    Removing stm32f4xx_hal_gpio.o(.text.HAL_GPIO_LockPin), (86 bytes).
    Removing stm32f4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_LockPin), (8 bytes).
    Removing stm32f4xx_hal_gpio.o(.text.HAL_GPIO_EXTI_IRQHandler), (56 bytes).
    Removing stm32f4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_EXTI_IRQHandler), (8 bytes).
    Removing stm32f4xx_hal_gpio.o(.text.HAL_GPIO_EXTI_Callback), (10 bytes).
    Removing stm32f4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_EXTI_Callback), (8 bytes).
    Removing stm32f4xx_hal_pwr.o(.text), (0 bytes).
    Removing stm32f4xx_hal_pwr.o(.text.HAL_PWR_DeInit), (26 bytes).
    Removing stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DeInit), (8 bytes).
    Removing stm32f4xx_hal_pwr.o(.text.HAL_PWR_EnableBkUpAccess), (30 bytes).
    Removing stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableBkUpAccess), (8 bytes).
    Removing stm32f4xx_hal_pwr.o(.text.HAL_PWR_DisableBkUpAccess), (30 bytes).
    Removing stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableBkUpAccess), (8 bytes).
    Removing stm32f4xx_hal_pwr.o(.text.HAL_PWR_ConfigPVD), (210 bytes).
    Removing stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_ConfigPVD), (8 bytes).
    Removing stm32f4xx_hal_pwr.o(.text.HAL_PWR_EnablePVD), (12 bytes).
    Removing stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnablePVD), (8 bytes).
    Removing stm32f4xx_hal_pwr.o(.text.HAL_PWR_DisablePVD), (12 bytes).
    Removing stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisablePVD), (8 bytes).
    Removing stm32f4xx_hal_pwr.o(.text.HAL_PWR_EnableWakeUpPin), (24 bytes).
    Removing stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableWakeUpPin), (8 bytes).
    Removing stm32f4xx_hal_pwr.o(.text.HAL_PWR_DisableWakeUpPin), (24 bytes).
    Removing stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableWakeUpPin), (8 bytes).
    Removing stm32f4xx_hal_pwr.o(.text.HAL_PWR_EnterSLEEPMode), (50 bytes).
    Removing stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnterSLEEPMode), (8 bytes).
    Removing stm32f4xx_hal_pwr.o(.text.HAL_PWR_EnterSTOPMode), (86 bytes).
    Removing stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnterSTOPMode), (8 bytes).
    Removing stm32f4xx_hal_pwr.o(.text.HAL_PWR_EnterSTANDBYMode), (36 bytes).
    Removing stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnterSTANDBYMode), (8 bytes).
    Removing stm32f4xx_hal_pwr.o(.text.HAL_PWR_PVD_IRQHandler), (42 bytes).
    Removing stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_PVD_IRQHandler), (8 bytes).
    Removing stm32f4xx_hal_pwr.o(.text.HAL_PWR_PVDCallback), (2 bytes).
    Removing stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_PVDCallback), (8 bytes).
    Removing stm32f4xx_hal_pwr.o(.text.HAL_PWR_EnableSleepOnExit), (18 bytes).
    Removing stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableSleepOnExit), (8 bytes).
    Removing stm32f4xx_hal_pwr.o(.text.HAL_PWR_DisableSleepOnExit), (18 bytes).
    Removing stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableSleepOnExit), (8 bytes).
    Removing stm32f4xx_hal_pwr.o(.text.HAL_PWR_EnableSEVOnPend), (18 bytes).
    Removing stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableSEVOnPend), (8 bytes).
    Removing stm32f4xx_hal_pwr.o(.text.HAL_PWR_DisableSEVOnPend), (18 bytes).
    Removing stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableSEVOnPend), (8 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.text), (0 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableBkUpReg), (92 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableBkUpReg), (8 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableBkUpReg), (90 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableBkUpReg), (8 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableFlashPowerDown), (12 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableFlashPowerDown), (8 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableFlashPowerDown), (12 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableFlashPowerDown), (8 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_GetVoltageRange), (16 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_GetVoltageRange), (8 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_ControlVoltageScaling), (318 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_ControlVoltageScaling), (8 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableOverDrive), (190 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableOverDrive), (8 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableOverDrive), (182 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableOverDrive), (8 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_EnterUnderDriveSTOPMode), (160 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnterUnderDriveSTOPMode), (8 bytes).
    Removing stm32f4xx_hal_rcc.o(.text), (0 bytes).
    Removing stm32f4xx_hal_rcc.o(.text.HAL_RCC_DeInit), (4 bytes).
    Removing stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_DeInit), (8 bytes).
    Removing stm32f4xx_hal_rcc.o(.text.HAL_RCC_OscConfig), (1726 bytes).
    Removing stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_OscConfig), (8 bytes).
    Removing stm32f4xx_hal_rcc.o(.text.HAL_RCC_ClockConfig), (610 bytes).
    Removing stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_ClockConfig), (8 bytes).
    Removing stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetSysClockFreq), (230 bytes).
    Removing stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetSysClockFreq), (8 bytes).
    Removing stm32f4xx_hal_rcc.o(.text.HAL_RCC_MCOConfig), (208 bytes).
    Removing stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_MCOConfig), (8 bytes).
    Removing stm32f4xx_hal_rcc.o(.text.HAL_RCC_EnableCSS), (12 bytes).
    Removing stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_EnableCSS), (8 bytes).
    Removing stm32f4xx_hal_rcc.o(.text.HAL_RCC_DisableCSS), (12 bytes).
    Removing stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_DisableCSS), (8 bytes).
    Removing stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetHCLKFreq), (12 bytes).
    Removing stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetHCLKFreq), (8 bytes).
    Removing stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq), (34 bytes).
    Removing stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetPCLK1Freq), (8 bytes).
    Removing stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetPCLK2Freq), (34 bytes).
    Removing stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetPCLK2Freq), (8 bytes).
    Removing stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetOscConfig), (320 bytes).
    Removing stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetOscConfig), (8 bytes).
    Removing stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetClockConfig), (84 bytes).
    Removing stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetClockConfig), (8 bytes).
    Removing stm32f4xx_hal_rcc.o(.text.HAL_RCC_NMI_IRQHandler), (40 bytes).
    Removing stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_NMI_IRQHandler), (8 bytes).
    Removing stm32f4xx_hal_rcc.o(.text.HAL_RCC_CSSCallback), (2 bytes).
    Removing stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_CSSCallback), (8 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.text), (0 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_PeriphCLKConfig), (1052 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_PeriphCLKConfig), (8 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetPeriphCLKConfig), (196 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_GetPeriphCLKConfig), (8 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetPeriphCLKFreq), (194 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_GetPeriphCLKFreq), (8 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_EnablePLLI2S), (182 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_EnablePLLI2S), (8 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_DisablePLLI2S), (80 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_DisablePLLI2S), (8 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_EnablePLLSAI), (182 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_EnablePLLSAI), (8 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_DisablePLLSAI), (86 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_DisablePLLSAI), (8 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.text.HAL_RCC_DeInit), (604 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCC_DeInit), (8 bytes).
    Removing system_stm32f4xx.o(.text), (0 bytes).
    Removing system_stm32f4xx.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing system_stm32f4xx.o(.text.SystemCoreClockUpdate), (302 bytes).
    Removing system_stm32f4xx.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing system_stm32f4xx.o(.rodata.AHBPrescTable), (16 bytes).
    Removing system_stm32f4xx.o(.rodata.APBPrescTable), (8 bytes).
    Removing freertos_evr.o(.text), (0 bytes).
    Removing event_groups.o(.text), (0 bytes).
    Removing event_groups.o(.text.xEventGroupCreateStatic), (46 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupCreateStatic), (8 bytes).
    Removing event_groups.o(.text.xEventGroupCreate), (50 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupCreate), (8 bytes).
    Removing event_groups.o(.text.xEventGroupSync), (246 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupSync), (8 bytes).
    Removing event_groups.o(.text.xEventGroupSetBits), (224 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupSetBits), (8 bytes).
    Removing event_groups.o(.text.xEventGroupWaitBits), (300 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupWaitBits), (8 bytes).
    Removing event_groups.o(.text.prvTestWaitCondition), (66 bytes).
    Removing event_groups.o(.ARM.exidx.text.prvTestWaitCondition), (8 bytes).
    Removing event_groups.o(.text.xEventGroupClearBits), (42 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupClearBits), (8 bytes).
    Removing event_groups.o(.text.xEventGroupClearBitsFromISR), (34 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupClearBitsFromISR), (8 bytes).
    Removing event_groups.o(.text.vEventGroupClearBitsCallback), (20 bytes).
    Removing event_groups.o(.ARM.exidx.text.vEventGroupClearBitsCallback), (8 bytes).
    Removing event_groups.o(.text.xEventGroupGetBitsFromISR), (58 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupGetBitsFromISR), (8 bytes).
    Removing event_groups.o(.text.vEventGroupDelete), (70 bytes).
    Removing event_groups.o(.ARM.exidx.text.vEventGroupDelete), (8 bytes).
    Removing event_groups.o(.text.vEventGroupSetBitsCallback), (20 bytes).
    Removing event_groups.o(.ARM.exidx.text.vEventGroupSetBitsCallback), (8 bytes).
    Removing event_groups.o(.text.xEventGroupSetBitsFromISR), (36 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupSetBitsFromISR), (8 bytes).
    Removing event_groups.o(.text.uxEventGroupGetNumber), (34 bytes).
    Removing event_groups.o(.ARM.exidx.text.uxEventGroupGetNumber), (8 bytes).
    Removing event_groups.o(.text.vEventGroupSetNumber), (16 bytes).
    Removing event_groups.o(.ARM.exidx.text.vEventGroupSetNumber), (8 bytes).
    Removing list.o(.text), (0 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialise), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialiseItem), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInsertEnd), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInsert), (8 bytes).
    Removing list.o(.ARM.exidx.text.uxListRemove), (8 bytes).
    Removing port.o(.text), (0 bytes).
    Removing port.o(.ARM.exidx.text.pxPortInitialiseStack), (8 bytes).
    Removing port.o(.ARM.exidx.text.prvTaskExitError), (8 bytes).
    Removing port.o(.ARM.exidx.text.SVC_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.xPortStartScheduler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortSetupTimerInterrupt), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortEnableVFP), (8 bytes).
    Removing port.o(.ARM.exidx.text.prvPortStartFirstTask), (8 bytes).
    Removing port.o(.text.vPortEndScheduler), (2 bytes).
    Removing port.o(.ARM.exidx.text.vPortEndScheduler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortEnterCritical), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortExitCritical), (8 bytes).
    Removing port.o(.ARM.exidx.text.PendSV_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.xPortSysTickHandler), (8 bytes).
    Removing heap_4.o(.text), (0 bytes).
    Removing heap_4.o(.ARM.exidx.text.pvPortMalloc), (8 bytes).
    Removing heap_4.o(.ARM.exidx.text.prvHeapInit), (8 bytes).
    Removing heap_4.o(.ARM.exidx.text.prvInsertBlockIntoFreeList), (8 bytes).
    Removing heap_4.o(.ARM.exidx.text.vPortFree), (8 bytes).
    Removing heap_4.o(.text.xPortGetFreeHeapSize), (12 bytes).
    Removing heap_4.o(.ARM.exidx.text.xPortGetFreeHeapSize), (8 bytes).
    Removing heap_4.o(.text.xPortGetMinimumEverFreeHeapSize), (12 bytes).
    Removing heap_4.o(.ARM.exidx.text.xPortGetMinimumEverFreeHeapSize), (8 bytes).
    Removing heap_4.o(.text.vPortInitialiseBlocks), (2 bytes).
    Removing heap_4.o(.ARM.exidx.text.vPortInitialiseBlocks), (8 bytes).
    Removing heap_4.o(.text.vPortGetHeapStats), (206 bytes).
    Removing heap_4.o(.ARM.exidx.text.vPortGetHeapStats), (8 bytes).
    Removing queue.o(.text), (0 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericReset), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericCreateStatic), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvInitialiseNewQueue), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericCreate), (8 bytes).
    Removing queue.o(.text.xQueueCreateMutex), (38 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateMutex), (8 bytes).
    Removing queue.o(.text.prvInitialiseMutex), (44 bytes).
    Removing queue.o(.ARM.exidx.text.prvInitialiseMutex), (8 bytes).
    Removing queue.o(.text.xQueueCreateMutexStatic), (50 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateMutexStatic), (8 bytes).
    Removing queue.o(.text.xQueueGetMutexHolder), (46 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGetMutexHolder), (8 bytes).
    Removing queue.o(.text.xQueueGetMutexHolderFromISR), (32 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGetMutexHolderFromISR), (8 bytes).
    Removing queue.o(.text.xQueueGiveMutexRecursive), (80 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGiveMutexRecursive), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericSend), (8 bytes).
    Removing queue.o(.text.xQueueTakeMutexRecursive), (82 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueTakeMutexRecursive), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueSemaphoreTake), (8 bytes).
    Removing queue.o(.text.xQueueCreateCountingSemaphoreStatic), (52 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphoreStatic), (8 bytes).
    Removing queue.o(.text.xQueueCreateCountingSemaphore), (42 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphore), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvCopyDataToQueue), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvIsQueueFull), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvUnlockQueue), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericSendFromISR), (8 bytes).
    Removing queue.o(.text.xQueueGiveFromISR), (174 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGiveFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueReceive), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvCopyDataFromQueue), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvIsQueueEmpty), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvGetDisinheritPriorityAfterTimeout), (8 bytes).
    Removing queue.o(.text.xQueuePeek), (342 bytes).
    Removing queue.o(.ARM.exidx.text.xQueuePeek), (8 bytes).
    Removing queue.o(.text.xQueueReceiveFromISR), (178 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueReceiveFromISR), (8 bytes).
    Removing queue.o(.text.xQueuePeekFromISR), (96 bytes).
    Removing queue.o(.ARM.exidx.text.xQueuePeekFromISR), (8 bytes).
    Removing queue.o(.text.uxQueueMessagesWaiting), (26 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueMessagesWaiting), (8 bytes).
    Removing queue.o(.text.uxQueueSpacesAvailable), (34 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueSpacesAvailable), (8 bytes).
    Removing queue.o(.text.uxQueueMessagesWaitingFromISR), (20 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR), (8 bytes).
    Removing queue.o(.text.vQueueDelete), (34 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueDelete), (8 bytes).
    Removing queue.o(.text.uxQueueGetQueueNumber), (12 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueGetQueueNumber), (8 bytes).
    Removing queue.o(.text.vQueueSetQueueNumber), (16 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueSetQueueNumber), (8 bytes).
    Removing queue.o(.text.ucQueueGetQueueType), (14 bytes).
    Removing queue.o(.ARM.exidx.text.ucQueueGetQueueType), (8 bytes).
    Removing queue.o(.text.xQueueIsQueueEmptyFromISR), (34 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR), (8 bytes).
    Removing queue.o(.text.xQueueIsQueueFullFromISR), (40 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueIsQueueFullFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueWaitForMessageRestricted), (8 bytes).
    Removing tasks.o(.text), (0 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCreateStatic), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvInitialiseNewTask), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvAddNewTaskToReadyList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCreate), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskDelete), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvDeleteTCB), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvResetNextTaskUnblockTime), (8 bytes).
    Removing tasks.o(.text.xTaskDelayUntil), (186 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskDelayUntil), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSuspendAll), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskResumeAll), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskDelay), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.eTaskGetState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskPriorityGet), (8 bytes).
    Removing tasks.o(.text.uxTaskPriorityGetFromISR), (84 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskPriorityGetFromISR), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPrioritySet), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSuspend), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSwitchContext), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskResume), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvTaskIsTaskSuspended), (8 bytes).
    Removing tasks.o(.text.xTaskResumeFromISR), (220 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskResumeFromISR), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskStartScheduler), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvIdleTask), (8 bytes).
    Removing tasks.o(.text.vTaskEndScheduler), (42 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskEndScheduler), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskIncrementTick), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetTickCount), (8 bytes).
    Removing tasks.o(.text.xTaskGetTickCountFromISR), (24 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetTickCountFromISR), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetNumberOfTasks), (8 bytes).
    Removing tasks.o(.text.pcTaskGetName), (42 bytes).
    Removing tasks.o(.ARM.exidx.text.pcTaskGetName), (8 bytes).
    Removing tasks.o(.text.uxTaskGetSystemState), (272 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetSystemState), (8 bytes).
    Removing tasks.o(.text.prvListTasksWithinSingleList), (164 bytes).
    Removing tasks.o(.ARM.exidx.text.prvListTasksWithinSingleList), (8 bytes).
    Removing tasks.o(.text.xTaskCatchUpTicks), (38 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCatchUpTicks), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnEventList), (8 bytes).
    Removing tasks.o(.text.vTaskPlaceOnUnorderedEventList), (50 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnEventListRestricted), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskRemoveFromEventList), (8 bytes).
    Removing tasks.o(.text.vTaskRemoveFromUnorderedEventList), (140 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList), (8 bytes).
    Removing tasks.o(.text.vTaskSetTimeOutState), (46 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSetTimeOutState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskInternalSetTimeOutState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCheckForTimeOut), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskMissedYield), (8 bytes).
    Removing tasks.o(.text.uxTaskGetTaskNumber), (34 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetTaskNumber), (8 bytes).
    Removing tasks.o(.text.vTaskSetTaskNumber), (28 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSetTaskNumber), (8 bytes).
    Removing tasks.o(.text.vTaskGetInfo), (224 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskGetInfo), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvTaskCheckFreeStackSpace), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetStackHighWaterMark), (8 bytes).
    Removing tasks.o(.text.xTaskGetCurrentTaskHandle), (20 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetSchedulerState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskPriorityInherit), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskPriorityDisinherit), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPriorityDisinheritAfterTimeout), (8 bytes).
    Removing tasks.o(.text.uxTaskResetEventItemValue), (34 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskResetEventItemValue), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.pvTaskIncrementMutexHeldCount), (8 bytes).
    Removing tasks.o(.text.ulTaskGenericNotifyTake), (220 bytes).
    Removing tasks.o(.ARM.exidx.text.ulTaskGenericNotifyTake), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyWait), (252 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyWait), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotify), (328 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotify), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyFromISR), (400 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyFromISR), (8 bytes).
    Removing tasks.o(.text.vTaskGenericNotifyGiveFromISR), (266 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskGenericNotifyGiveFromISR), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyStateClear), (92 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyStateClear), (8 bytes).
    Removing tasks.o(.text.ulTaskGenericNotifyValueClear), (82 bytes).
    Removing tasks.o(.ARM.exidx.text.ulTaskGenericNotifyValueClear), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvInitialiseTaskLists), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvCheckTasksWaitingTermination), (8 bytes).
    Removing timers.o(.text), (0 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerCreateTimerTask), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvCheckForValidListAndQueue), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvTimerTask), (8 bytes).
    Removing timers.o(.text.xTimerCreate), (74 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerCreate), (8 bytes).
    Removing timers.o(.text.prvInitialiseNewTimer), (90 bytes).
    Removing timers.o(.ARM.exidx.text.prvInitialiseNewTimer), (8 bytes).
    Removing timers.o(.text.xTimerCreateStatic), (74 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerCreateStatic), (8 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGenericCommand), (8 bytes).
    Removing timers.o(.text.xTimerGetTimerDaemonTaskHandle), (12 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetTimerDaemonTaskHandle), (8 bytes).
    Removing timers.o(.text.xTimerGetPeriod), (16 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetPeriod), (8 bytes).
    Removing timers.o(.text.vTimerSetReloadMode), (62 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetReloadMode), (8 bytes).
    Removing timers.o(.text.uxTimerGetReloadMode), (50 bytes).
    Removing timers.o(.ARM.exidx.text.uxTimerGetReloadMode), (8 bytes).
    Removing timers.o(.text.xTimerGetExpiryTime), (20 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetExpiryTime), (8 bytes).
    Removing timers.o(.text.pcTimerGetName), (16 bytes).
    Removing timers.o(.ARM.exidx.text.pcTimerGetName), (8 bytes).
    Removing timers.o(.text.xTimerIsTimerActive), (48 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerIsTimerActive), (8 bytes).
    Removing timers.o(.text.pvTimerGetTimerID), (30 bytes).
    Removing timers.o(.ARM.exidx.text.pvTimerGetTimerID), (8 bytes).
    Removing timers.o(.text.vTimerSetTimerID), (30 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetTimerID), (8 bytes).
    Removing timers.o(.text.xTimerPendFunctionCallFromISR), (58 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerPendFunctionCallFromISR), (8 bytes).
    Removing timers.o(.text.xTimerPendFunctionCall), (58 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerPendFunctionCall), (8 bytes).
    Removing timers.o(.text.uxTimerGetTimerNumber), (12 bytes).
    Removing timers.o(.ARM.exidx.text.uxTimerGetTimerNumber), (8 bytes).
    Removing timers.o(.text.vTimerSetTimerNumber), (16 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetTimerNumber), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvGetNextExpireTime), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvProcessTimerOrBlockTask), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvProcessReceivedCommands), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvSampleTimeNow), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvProcessExpiredTimer), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvSwitchTimerLists), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvInsertTimerInActiveList), (8 bytes).
    Removing new.cpp.o(.text), (0 bytes).
    Removing new.cpp.o(.text._ZSt17__throw_bad_allocv), (4 bytes).
    Removing new.cpp.o(.ARM.exidx.text._ZSt17__throw_bad_allocv), (8 bytes).
    Removing new.cpp.o(.text._Znwj), (38 bytes).
    Removing new.cpp.o(.ARM.exidx.text._Znwj), (8 bytes).
    Removing new.cpp.o(.text._ZnwjRKSt9nothrow_t), (4 bytes).
    Removing new.cpp.o(.ARM.exidx.text._ZnwjRKSt9nothrow_t), (8 bytes).
    Removing new.cpp.o(.text._Znaj), (4 bytes).
    Removing new.cpp.o(.ARM.exidx.text._Znaj), (8 bytes).
    Removing new.cpp.o(.text._ZnajRKSt9nothrow_t), (4 bytes).
    Removing new.cpp.o(.ARM.exidx.text._ZnajRKSt9nothrow_t), (8 bytes).
    Removing new.cpp.o(.ARM.exidx.text._ZdlPv), (8 bytes).
    Removing new.cpp.o(.text._ZdlPvRKSt9nothrow_t), (4 bytes).
    Removing new.cpp.o(.ARM.exidx.text._ZdlPvRKSt9nothrow_t), (8 bytes).
    Removing new.cpp.o(.text._ZdlPvj), (4 bytes).
    Removing new.cpp.o(.ARM.exidx.text._ZdlPvj), (8 bytes).
    Removing new.cpp.o(.text._ZdaPv), (4 bytes).
    Removing new.cpp.o(.ARM.exidx.text._ZdaPv), (8 bytes).
    Removing new.cpp.o(.text._ZdaPvRKSt9nothrow_t), (4 bytes).
    Removing new.cpp.o(.ARM.exidx.text._ZdaPvRKSt9nothrow_t), (8 bytes).
    Removing new.cpp.o(.text._ZdaPvj), (4 bytes).
    Removing new.cpp.o(.ARM.exidx.text._ZdaPvj), (8 bytes).
    Removing new.cpp.o(.text._ZnwjSt11align_val_t), (74 bytes).
    Removing new.cpp.o(.ARM.exidx.text._ZnwjSt11align_val_t), (8 bytes).
    Removing new.cpp.o(.text._ZnwjSt11align_val_tRKSt9nothrow_t), (4 bytes).
    Removing new.cpp.o(.ARM.exidx.text._ZnwjSt11align_val_tRKSt9nothrow_t), (8 bytes).
    Removing new.cpp.o(.text._ZnajSt11align_val_t), (4 bytes).
    Removing new.cpp.o(.ARM.exidx.text._ZnajSt11align_val_t), (8 bytes).
    Removing new.cpp.o(.text._ZnajSt11align_val_tRKSt9nothrow_t), (4 bytes).
    Removing new.cpp.o(.ARM.exidx.text._ZnajSt11align_val_tRKSt9nothrow_t), (8 bytes).
    Removing new.cpp.o(.text._ZdlPvSt11align_val_t), (4 bytes).
    Removing new.cpp.o(.ARM.exidx.text._ZdlPvSt11align_val_t), (8 bytes).
    Removing new.cpp.o(.text._ZdlPvSt11align_val_tRKSt9nothrow_t), (4 bytes).
    Removing new.cpp.o(.ARM.exidx.text._ZdlPvSt11align_val_tRKSt9nothrow_t), (8 bytes).
    Removing new.cpp.o(.text._ZdlPvjSt11align_val_t), (6 bytes).
    Removing new.cpp.o(.ARM.exidx.text._ZdlPvjSt11align_val_t), (8 bytes).
    Removing new.cpp.o(.text._ZdaPvSt11align_val_t), (4 bytes).
    Removing new.cpp.o(.ARM.exidx.text._ZdaPvSt11align_val_t), (8 bytes).
    Removing new.cpp.o(.text._ZdaPvSt11align_val_tRKSt9nothrow_t), (4 bytes).
    Removing new.cpp.o(.ARM.exidx.text._ZdaPvSt11align_val_tRKSt9nothrow_t), (8 bytes).
    Removing new.cpp.o(.text._ZdaPvjSt11align_val_t), (6 bytes).
    Removing new.cpp.o(.ARM.exidx.text._ZdaPvjSt11align_val_t), (8 bytes).
    Removing new.cpp.o(.rodata._ZSt7nothrow), (1 bytes).
    Removing cxa_virtual.cpp.o(.text), (0 bytes).
    Removing cxa_virtual.cpp.o(.ARM.exidx.text.__cxa_pure_virtual), (8 bytes).
    Removing cxa_virtual.cpp.o(.text.__cxa_deleted_virtual), (44 bytes).
    Removing cxa_virtual.cpp.o(.ARM.exidx.text.__cxa_deleted_virtual), (8 bytes).
    Removing abort_message.cpp.o(.text), (0 bytes).
    Removing abort_message.cpp.o(.ARM.exidx.text.abort_message), (8 bytes).
    Removing cxa_handlers.cpp.o(.text), (0 bytes).
    Removing cxa_handlers.cpp.o(.text._ZSt14get_unexpectedv), (12 bytes).
    Removing cxa_handlers.cpp.o(.ARM.exidx.text._ZSt14get_unexpectedv), (8 bytes).
    Removing cxa_handlers.cpp.o(.text._ZSt12__unexpectedPFvvE), (52 bytes).
    Removing cxa_handlers.cpp.o(.ARM.exidx.text._ZSt12__unexpectedPFvvE), (8 bytes).
    Removing cxa_handlers.cpp.o(.text._ZSt10unexpectedv), (14 bytes).
    Removing cxa_handlers.cpp.o(.ARM.exidx.text._ZSt10unexpectedv), (8 bytes).
    Removing cxa_handlers.cpp.o(.text._ZSt13get_terminatev), (12 bytes).
    Removing cxa_handlers.cpp.o(.ARM.exidx.text._ZSt13get_terminatev), (8 bytes).
    Removing cxa_handlers.cpp.o(.text._ZSt11__terminatePFvvE), (48 bytes).
    Removing cxa_handlers.cpp.o(.ARM.exidx.text._ZSt11__terminatePFvvE), (8 bytes).
    Removing cxa_handlers.cpp.o(.text._ZSt9terminatev), (14 bytes).
    Removing cxa_handlers.cpp.o(.ARM.exidx.text._ZSt9terminatev), (8 bytes).
    Removing cxa_handlers.cpp.o(.text._ZSt15get_new_handlerv), (12 bytes).
    Removing cxa_handlers.cpp.o(.ARM.exidx.text._ZSt15get_new_handlerv), (8 bytes).
    Removing cxa_default_handlers.cpp.o(.text), (0 bytes).
    Removing cxa_default_handlers.cpp.o(.text._ZSt14set_unexpectedPFvvE), (30 bytes).
    Removing cxa_default_handlers.cpp.o(.ARM.exidx.text._ZSt14set_unexpectedPFvvE), (8 bytes).
    Removing cxa_default_handlers.cpp.o(.text._ZSt13set_terminatePFvvE), (30 bytes).
    Removing cxa_default_handlers.cpp.o(.ARM.exidx.text._ZSt13set_terminatePFvvE), (8 bytes).
    Removing cxa_default_handlers.cpp.o(.text._ZSt15set_new_handlerPFvvE), (18 bytes).
    Removing cxa_default_handlers.cpp.o(.ARM.exidx.text._ZSt15set_new_handlerPFvvE), (8 bytes).
    Removing cxa_default_handlers.cpp.o(.data.__cxa_terminate_handler), (4 bytes).
    Removing cxa_default_handlers.cpp.o(.data.__cxa_unexpected_handler), (4 bytes).
    Removing cxa_default_handlers.cpp.o(.bss.__cxa_new_handler), (4 bytes).
    Removing test_00_thread_name.o(.ARM.exidx.text._ZN11TestThread0C2Ev), (8 bytes).
    Removing test_00_thread_name.o(.ARM.exidx.text._ZN5osapi6Thread7getNameEv), (8 bytes).
    Removing test_00_thread_name.o(.ARM.exidx.text._ZN11TestThread0D2Ev), (8 bytes).
    Removing test_00_thread_name.o(.ARM.exidx.text._ZN5osapi6ThreadC2EijNS_8JoinableEPKc), (8 bytes).
    Removing test_00_thread_name.o(.ARM.exidx.text._ZN11TestThread0D0Ev), (8 bytes).
    Removing test_00_thread_name.o(.ARM.exidx.text._ZN5osapi6Thread3runEv), (8 bytes).
    Removing test_00_thread_name.o(.ARM.exidx.text._ZN5osapi6Thread9isRunningEv), (8 bytes).
    Removing test_00_thread_name.o(.ARM.exidx.text._ZN5osapi6Thread4joinEj), (8 bytes).
    Removing test_00_thread_name.o(.ARM.exidx.text._ZN5osapi6Thread10isJoinableEv), (8 bytes).
    Removing test_00_thread_name.o(.ARM.exidx.text._ZN5osapi6Thread7suspendEv), (8 bytes).
    Removing test_00_thread_name.o(.ARM.exidx.text._ZN5osapi6Thread6resumeEv), (8 bytes).
    Removing test_00_thread_name.o(.ARM.exidx.text._ZN5osapi6Thread11setPriorityEi), (8 bytes).
    Removing test_00_thread_name.o(.ARM.exidx.text._ZN5osapi6Thread11getPriorityEv), (8 bytes).
    Removing test_00_thread_name.o(.ARM.exidx.text._ZN5osapi6Thread8getStateEv), (8 bytes).
    Removing test_00_thread_name.o(.ARM.exidx.text._ZN5osapi6Thread17getTotalStackSizeEv), (8 bytes).
    Removing test_00_thread_name.o(.ARM.exidx.text._ZN5osapi6Thread16getUsedStackSizeEv), (8 bytes).
    Removing test_00_thread_name.o(.ARM.exidx.text._ZN5osapi6Thread5sleepEj), (8 bytes).
    Removing test_00_thread_name.o(.ARM.exidx.text._ZN11TestThread03jobEv), (8 bytes).
    Removing test_00_thread_name.o(.ARM.exidx.text._ZN5osapi15ThreadInterfaceC2Ev), (8 bytes).
    Removing test_00_thread_name.o(.ARM.exidx.text._ZN5osapi6ThreadD2Ev), (8 bytes).
    Removing test_00_thread_name.o(.ARM.exidx.text._ZN5osapi6ThreadD0Ev), (8 bytes).
    Removing test_00_thread_name.o(.ARM.exidx.text._ZN5osapi15ThreadInterfaceD2Ev), (8 bytes).
    Removing test_00_thread_name.o(.ARM.exidx.text._ZN5osapi15ThreadInterfaceD0Ev), (8 bytes).
    Removing test_00_thread_name.o(.ARM.exidx.text._ZN5osapi6Thread14threadFunctionEPv), (8 bytes).
    Removing test_01_thread_creation.o(.ARM.exidx.text._ZN11TestThread1C2Ev), (8 bytes).
    Removing test_01_thread_creation.o(.ARM.exidx.text._ZN11TestThread1D2Ev), (8 bytes).
    Removing test_01_thread_creation.o(.ARM.exidx.text._ZN11TestThread1D0Ev), (8 bytes).
    Removing test_01_thread_creation.o(.ARM.exidx.text._ZN11TestThread13jobEv), (8 bytes).
    Removing test_02_thread_join.o(.ARM.exidx.text._ZN11TestThread2C2Ev), (8 bytes).
    Removing test_02_thread_join.o(.ARM.exidx.text._ZN11TestThread2D2Ev), (8 bytes).
    Removing test_02_thread_join.o(.ARM.exidx.text._ZN11TestThread2D0Ev), (8 bytes).
    Removing test_02_thread_join.o(.ARM.exidx.text._ZN11TestThread23jobEv), (8 bytes).
    Removing test_03_thread_suspend_resume.o(.ARM.exidx.text._ZN11TestThread3C2Ev), (8 bytes).
    Removing test_03_thread_suspend_resume.o(.ARM.exidx.text._ZN11TestThread3D2Ev), (8 bytes).
    Removing test_03_thread_suspend_resume.o(.ARM.exidx.text._ZN11TestThread3D0Ev), (8 bytes).
    Removing test_03_thread_suspend_resume.o(.ARM.exidx.text._ZN11TestThread33jobEv), (8 bytes).
    Removing test_04_thread_priority.o(.ARM.exidx.text._ZN11TestThread4C2Ev), (8 bytes).
    Removing test_04_thread_priority.o(.ARM.exidx.text._ZN11TestThread4D2Ev), (8 bytes).
    Removing test_04_thread_priority.o(.ARM.exidx.text._ZN11TestThread4D0Ev), (8 bytes).
    Removing test_04_thread_priority.o(.ARM.exidx.text._ZN11TestThread43jobEv), (8 bytes).
    Removing test_05_thread_delay.o(.ARM.exidx.text._ZN11TestThread5C2Ev), (8 bytes).
    Removing test_05_thread_delay.o(.ARM.exidx.text._ZN11TestThread5D2Ev), (8 bytes).
    Removing test_05_thread_delay.o(.ARM.exidx.text._ZN11TestThread5D0Ev), (8 bytes).
    Removing test_05_thread_delay.o(.ARM.exidx.text._ZN11TestThread53jobEv), (8 bytes).
    Removing test_06_mutex.o(.ARM.exidx.text._ZN5osapi5Mutex4lockEj), (8 bytes).
    Removing test_06_mutex.o(.ARM.exidx.text._ZN5osapi5Mutex6unlockEv), (8 bytes).
    Removing test_07_recursive_mutex.o(.ARM.exidx.text._ZN5osapi14RecursiveMutex4lockEj), (8 bytes).
    Removing test_07_recursive_mutex.o(.ARM.exidx.text._ZN5osapi14RecursiveMutex6unlockEv), (8 bytes).
    Removing test_08_mortal_thread.o(.ARM.exidx.text._ZN14MyMortalThreadC2Ev), (8 bytes).
    Removing test_08_mortal_thread.o(.ARM.exidx.text._ZN5osapi12MortalThread4killEv), (8 bytes).
    Removing test_08_mortal_thread.o(.ARM.exidx.text._ZN14MyMortalThreadD2Ev), (8 bytes).
    Removing test_08_mortal_thread.o(.ARM.exidx.text._ZN5osapi12MortalThreadC2EijPKc), (8 bytes).
    Removing test_08_mortal_thread.o(.ARM.exidx.text._ZN14MyMortalThreadD0Ev), (8 bytes).
    Removing test_08_mortal_thread.o(.ARM.exidx.text._ZN5osapi12MortalThread3jobEv), (8 bytes).
    Removing test_08_mortal_thread.o(.ARM.exidx.text._ZN14MyMortalThread5beginEv), (8 bytes).
    Removing test_08_mortal_thread.o(.ARM.exidx.text._ZN14MyMortalThread4loopEv), (8 bytes).
    Removing test_08_mortal_thread.o(.ARM.exidx.text._ZN14MyMortalThread3endEv), (8 bytes).
    Removing test_08_mortal_thread.o(.ARM.exidx.text._ZN5osapi12MortalThreadD2Ev), (8 bytes).
    Removing test_08_mortal_thread.o(.ARM.exidx.text._ZN5osapi12MortalThreadD0Ev), (8 bytes).
    Removing test_14_thread_stack_size.o(.ARM.exidx.text._ZN12TestThread14C2Ev), (8 bytes).
    Removing test_14_thread_stack_size.o(.ARM.exidx.text._ZN12TestThread14D2Ev), (8 bytes).
    Removing test_14_thread_stack_size.o(.ARM.exidx.text._ZN12TestThread14D0Ev), (8 bytes).
    Removing test_14_thread_stack_size.o(.ARM.exidx.text._ZN12TestThread143jobEv), (8 bytes).
    Removing test_13_thread_suspend_inactive.o(.ARM.exidx.text._ZN12TestThread13C2Ev), (8 bytes).
    Removing test_13_thread_suspend_inactive.o(.ARM.exidx.text._ZN12TestThread13D2Ev), (8 bytes).
    Removing test_13_thread_suspend_inactive.o(.ARM.exidx.text._ZN12TestThread13D0Ev), (8 bytes).
    Removing test_13_thread_suspend_inactive.o(.ARM.exidx.text._ZN12TestThread133jobEv), (8 bytes).
    Removing test_12_thread_state.o(.ARM.exidx.text._ZN12TestThread12C2Ev), (8 bytes).
    Removing test_12_thread_state.o(.ARM.exidx.text._ZN12TestThread12D2Ev), (8 bytes).
    Removing test_12_thread_state.o(.ARM.exidx.text._ZN12TestThread12D0Ev), (8 bytes).
    Removing test_12_thread_state.o(.ARM.exidx.text._ZN12TestThread123jobEv), (8 bytes).
    Removing test_11_thread_run_detailed.o(.ARM.exidx.text._ZN12TestThread11C2Ev), (8 bytes).
    Removing test_11_thread_run_detailed.o(.ARM.exidx.text._ZN12TestThread11D2Ev), (8 bytes).
    Removing test_11_thread_run_detailed.o(.ARM.exidx.text._ZN12TestThread11D0Ev), (8 bytes).
    Removing test_11_thread_run_detailed.o(.ARM.exidx.text._ZN12TestThread113jobEv), (8 bytes).
    Removing test_10_thread_priority_change.o(.ARM.exidx.text._ZN13TestThread10AC2Ev), (8 bytes).
    Removing test_10_thread_priority_change.o(.ARM.exidx.text._ZN13TestThread10BC2Ev), (8 bytes).
    Removing test_10_thread_priority_change.o(.ARM.exidx.text._ZN13TestThread10BD2Ev), (8 bytes).
    Removing test_10_thread_priority_change.o(.ARM.exidx.text._ZN13TestThread10AD2Ev), (8 bytes).
    Removing test_10_thread_priority_change.o(.ARM.exidx.text._ZN13TestThread10AD0Ev), (8 bytes).
    Removing test_10_thread_priority_change.o(.ARM.exidx.text._ZN13TestThread10A3jobEv), (8 bytes).
    Removing test_10_thread_priority_change.o(.ARM.exidx.text._ZN13TestThread10BD0Ev), (8 bytes).
    Removing test_10_thread_priority_change.o(.ARM.exidx.text._ZN13TestThread10B3jobEv), (8 bytes).

1079 unused section(s) (total 38022 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/division.s                       0x00000000   Number         0  aeabi_sdiv.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  ctype_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isalnum_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isalpha_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isblank_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  iscntrl_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isdigit_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isgraph_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  islower_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isprint_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  ispunct_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isspace_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isupper_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isxdigit_o.o ABSOLUTE
    ../clib/microlib/ctype/toupper.c         0x00000000   Number         0  toupper.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uldiv.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uidiv.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry2.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry5.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11b.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llshl.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llushr.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llsshr.o ABSOLUTE
    ../clib/microlib/malloc/malloc.c         0x00000000   Number         0  malloc.o ABSOLUTE
    ../clib/microlib/malloc/malloc.c         0x00000000   Number         0  mallocr.o ABSOLUTE
    ../clib/microlib/malloc/malloc.c         0x00000000   Number         0  malloca.o ABSOLUTE
    ../clib/microlib/malloc/malloc.c         0x00000000   Number         0  mallocra.o ABSOLUTE
    ../clib/microlib/malloc/memalign.c       0x00000000   Number         0  memalign.o ABSOLUTE
    ../clib/microlib/malloc/mvars.c          0x00000000   Number         0  mvars.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printfa.o ABSOLUTE
    ../clib/microlib/stdio/fputs.c           0x00000000   Number         0  fputs.o ABSOLUTE
    ../clib/microlib/stdio/fputs.c           0x00000000   Number         0  fputs_e.o ABSOLUTE
    ../clib/microlib/stdio/setvbuf.c         0x00000000   Number         0  setvbuf.o ABSOLUTE
    ../clib/microlib/stdio/streams.c         0x00000000   Number         0  stdout.o ABSOLUTE
    ../clib/microlib/stdio/streams.c         0x00000000   Number         0  stderr.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpya.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpyb.o ABSOLUTE
    ../clib/microlib/string/memset.c         0x00000000   Number         0  memseta.o ABSOLUTE
    ../clib/microlib/string/strcmp.c         0x00000000   Number         0  strcmp.o ABSOLUTE
    ../clib/microlib/string/strcpy.c         0x00000000   Number         0  strcpy.o ABSOLUTE
    ../clib/microlib/string/strlen.c         0x00000000   Number         0  strlen.o ABSOLUTE
    ../clib/microlib/stubs.s                 0x00000000   Number         0  iusefp.o ABSOLUTE
    ../clib/microlib/time/clock.c            0x00000000   Number         0  clock.o ABSOLUTE
    ../fplib/microlib/fpadd.c                0x00000000   Number         0  dadd.o ABSOLUTE
    ../fplib/microlib/fpdiv.c                0x00000000   Number         0  ddiv.o ABSOLUTE
    ../fplib/microlib/fpepilogue.c           0x00000000   Number         0  depilogue.o ABSOLUTE
    ../fplib/microlib/fpfix.c                0x00000000   Number         0  dfixul.o ABSOLUTE
    ../fplib/microlib/fpflt.c                0x00000000   Number         0  dfltui.o ABSOLUTE
    ../fplib/microlib/fpmul.c                0x00000000   Number         0  dmul.o ABSOLUTE
    ../fplib/setjmp.s                        0x00000000   Number         0  setjmp.o ABSOLUTE
    Basic.c                                  0x00000000   Number         0  basic.o ABSOLUTE
    CUError.c                                0x00000000   Number         0  cuerror.o ABSOLUTE
    MyMem.c                                  0x00000000   Number         0  mymem.o ABSOLUTE
    RTE/Device/STM32F429ZITx/startup_stm32f429xx.s 0x00000000   Number         0  startup_stm32f429xx.o ABSOLUTE
    TestDB.c                                 0x00000000   Number         0  testdb.o ABSOLUTE
    TestRun.c                                0x00000000   Number         0  testrun.o ABSOLUTE
    Util.c                                   0x00000000   Number         0  util.o ABSOLUTE
    abort_message.cpp                        0x00000000   Number         0  abort_message.cpp.o ABSOLUTE
    cdrcmple.s                               0x00000000   Number         0  cdrcmple.o ABSOLUTE
    clib_arm.c                               0x00000000   Number         0  clib_arm.o ABSOLUTE
    cmsis_os2.c                              0x00000000   Number         0  cmsis_os2.o ABSOLUTE
    cxa_default_handlers.cpp                 0x00000000   Number         0  cxa_default_handlers.cpp.o ABSOLUTE
    cxa_handlers.cpp                         0x00000000   Number         0  cxa_handlers.cpp.o ABSOLUTE
    cxa_virtual.cpp                          0x00000000   Number         0  cxa_virtual.cpp.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    event_groups.c                           0x00000000   Number         0  event_groups.o ABSOLUTE
    freertos_evr.c                           0x00000000   Number         0  freertos_evr.o ABSOLUTE
    handlers.s                               0x00000000   Number         0  handlers.o ABSOLUTE
    heap_4.c                                 0x00000000   Number         0  heap_4.o ABSOLUTE
    init.s                                   0x00000000   Number         0  init.o ABSOLUTE
    list.c                                   0x00000000   Number         0  list.o ABSOLUTE
    main.cpp                                 0x00000000   Number         0  main.o ABSOLUTE
    new.cpp                                  0x00000000   Number         0  new.cpp.o ABSOLUTE
    os_systick.c                             0x00000000   Number         0  os_systick.o ABSOLUTE
    osapi_freertos.cpp                       0x00000000   Number         0  osapi_freertos.o ABSOLUTE
    port.c                                   0x00000000   Number         0  port.o ABSOLUTE
    queue.c                                  0x00000000   Number         0  queue.o ABSOLUTE
    retarget_io.c                            0x00000000   Number         0  retarget_io.o ABSOLUTE
    stm32f4xx_hal.c                          0x00000000   Number         0  stm32f4xx_hal.o ABSOLUTE
    stm32f4xx_hal_cortex.c                   0x00000000   Number         0  stm32f4xx_hal_cortex.o ABSOLUTE
    stm32f4xx_hal_gpio.c                     0x00000000   Number         0  stm32f4xx_hal_gpio.o ABSOLUTE
    stm32f4xx_hal_pwr.c                      0x00000000   Number         0  stm32f4xx_hal_pwr.o ABSOLUTE
    stm32f4xx_hal_pwr_ex.c                   0x00000000   Number         0  stm32f4xx_hal_pwr_ex.o ABSOLUTE
    stm32f4xx_hal_rcc.c                      0x00000000   Number         0  stm32f4xx_hal_rcc.o ABSOLUTE
    stm32f4xx_hal_rcc_ex.c                   0x00000000   Number         0  stm32f4xx_hal_rcc_ex.o ABSOLUTE
    system_stm32f4xx.c                       0x00000000   Number         0  system_stm32f4xx.o ABSOLUTE
    tasks.c                                  0x00000000   Number         0  tasks.o ABSOLUTE
    test_00_thread_name.cpp                  0x00000000   Number         0  test_00_thread_name.o ABSOLUTE
    test_01_thread_creation.cpp              0x00000000   Number         0  test_01_thread_creation.o ABSOLUTE
    test_02_thread_join.cpp                  0x00000000   Number         0  test_02_thread_join.o ABSOLUTE
    test_03_thread_suspend_resume.cpp        0x00000000   Number         0  test_03_thread_suspend_resume.o ABSOLUTE
    test_04_thread_priority.cpp              0x00000000   Number         0  test_04_thread_priority.o ABSOLUTE
    test_05_thread_delay.cpp                 0x00000000   Number         0  test_05_thread_delay.o ABSOLUTE
    test_06_mutex.cpp                        0x00000000   Number         0  test_06_mutex.o ABSOLUTE
    test_07_recursive_mutex.cpp              0x00000000   Number         0  test_07_recursive_mutex.o ABSOLUTE
    test_08_mortal_thread.cpp                0x00000000   Number         0  test_08_mortal_thread.o ABSOLUTE
    test_10_thread_priority_change.cpp       0x00000000   Number         0  test_10_thread_priority_change.o ABSOLUTE
    test_11_thread_run_detailed.cpp          0x00000000   Number         0  test_11_thread_run_detailed.o ABSOLUTE
    test_12_thread_state.cpp                 0x00000000   Number         0  test_12_thread_state.o ABSOLUTE
    test_13_thread_suspend_inactive.cpp      0x00000000   Number         0  test_13_thread_suspend_inactive.o ABSOLUTE
    test_14_thread_stack_size.cpp            0x00000000   Number         0  test_14_thread_stack_size.o ABSOLUTE
    test_osapi.cpp                           0x00000000   Number         0  test_osapi.o ABSOLUTE
    timers.c                                 0x00000000   Number         0  timers.o ABSOLUTE
    RESET                                    0x08000000   Section      428  startup_stm32f429xx.o(RESET)
    .ARM.Collect$$$$00000000                 0x080001ac   Section        0  entry.o(.ARM.Collect$$$$00000000)
    .ARM.Collect$$$$00000001                 0x080001ac   Section        4  entry2.o(.ARM.Collect$$$$00000001)
    .ARM.Collect$$$$00000004                 0x080001b0   Section        4  entry5.o(.ARM.Collect$$$$00000004)
    .ARM.Collect$$$$00000008                 0x080001b4   Section        0  entry7b.o(.ARM.Collect$$$$00000008)
    .ARM.Collect$$$$0000000A                 0x080001b4   Section        0  entry8b.o(.ARM.Collect$$$$0000000A)
    .ARM.Collect$$$$0000000B                 0x080001b4   Section        8  entry9a.o(.ARM.Collect$$$$0000000B)
    __lit__00000000                          0x080001bc   Data           4  entry2.o(.ARM.Collect$$$$00002712)
    .ARM.Collect$$$$0000000D                 0x080001bc   Section        0  entry10a.o(.ARM.Collect$$$$0000000D)
    .ARM.Collect$$$$0000000F                 0x080001bc   Section        0  entry11a.o(.ARM.Collect$$$$0000000F)
    .ARM.Collect$$$$00002712                 0x080001bc   Section        4  entry2.o(.ARM.Collect$$$$00002712)
    $v0                                      0x080001c0   Number         0  startup_stm32f429xx.o(.text)
    .text                                    0x080001c0   Section       36  startup_stm32f429xx.o(.text)
    .text                                    0x080001e4   Section        0  uldiv.o(.text)
    .text                                    0x08000246   Section        0  toupper.o(.text)
    .text                                    0x08000252   Section        0  memcpya.o(.text)
    .text                                    0x08000276   Section        0  memseta.o(.text)
    .text                                    0x0800029a   Section        0  strlen.o(.text)
    .text                                    0x080002a8   Section        0  strcmp.o(.text)
    .text                                    0x080002c4   Section        0  strcpy.o(.text)
    .text                                    0x080002d6   Section        0  dadd.o(.text)
    .text                                    0x08000424   Section        0  ddiv.o(.text)
    .text                                    0x08000502   Section        0  dfltui.o(.text)
    .text                                    0x0800051c   Section       62  setjmp.o(.text)
    .text                                    0x0800055a   Section        0  uidiv.o(.text)
    .text                                    0x08000586   Section        0  llshl.o(.text)
    .text                                    0x080005a4   Section        0  llushr.o(.text)
    .text                                    0x080005c4   Section        0  llsshr.o(.text)
    .text                                    0x080005e8   Section        0  iusefp.o(.text)
    .text                                    0x080005e8   Section        0  depilogue.o(.text)
    .text                                    0x080006a2   Section        0  dmul.o(.text)
    .text                                    0x08000786   Section        0  dfixul.o(.text)
    .text                                    0x080007b8   Section       48  cdrcmple.o(.text)
    .text                                    0x080007e8   Section       36  init.o(.text)
    [Anonymous Symbol]                       0x0800080c   Section        0  testdb.o(.text.CU_add_suite)
    [Anonymous Symbol]                       0x0800082c   Section        0  testdb.o(.text.CU_add_suite_with_setup_and_teardown)
    [Anonymous Symbol]                       0x080008f0   Section        0  testdb.o(.text.CU_add_test)
    [Anonymous Symbol]                       0x080009c4   Section        0  testrun.o(.text.CU_assertImplementation)
    [Anonymous Symbol]                       0x08000ab4   Section        0  basic.o(.text.CU_basic_run_tests)
    [Anonymous Symbol]                       0x08000b18   Section        0  basic.o(.text.CU_basic_set_mode)
    [Anonymous Symbol]                       0x08000b30   Section        0  basic.o(.text.CU_basic_show_failures)
    [Anonymous Symbol]                       0x08000bc0   Section        0  testdb.o(.text.CU_cleanup_registry)
    [Anonymous Symbol]                       0x08000bfc   Section        0  testrun.o(.text.CU_clear_previous_results)
    [Anonymous Symbol]                       0x08000c14   Section        0  util.o(.text.CU_compare_strings)
    [Anonymous Symbol]                       0x08000cb8   Section        0  testdb.o(.text.CU_create_new_registry)
    [Anonymous Symbol]                       0x08000ce0   Section        0  testdb.o(.text.CU_destroy_existing_registry)
    [Anonymous Symbol]                       0x08000d30   Section        0  testrun.o(.text.CU_get_elapsed_time)
    [Anonymous Symbol]                       0x08000db8   Section        0  cuerror.o(.text.CU_get_error)
    [Anonymous Symbol]                       0x08000dc4   Section        0  cuerror.o(.text.CU_get_error_action)
    [Anonymous Symbol]                       0x08000dd0   Section        0  testrun.o(.text.CU_get_failure_list)
    [Anonymous Symbol]                       0x08000ddc   Section        0  testdb.o(.text.CU_get_registry)
    [Anonymous Symbol]                       0x08000de8   Section        0  testrun.o(.text.CU_get_run_results_string)
    [Anonymous Symbol]                       0x08001c9c   Section        0  testdb.o(.text.CU_initialize_registry)
    [Anonymous Symbol]                       0x08001d08   Section        0  testrun.o(.text.CU_is_test_running)
    [Anonymous Symbol]                       0x08001d14   Section        0  util.o(.text.CU_number_width)
    [Anonymous Symbol]                       0x08001d40   Section        0  testrun.o(.text.CU_print_run_results)
    [Anonymous Symbol]                       0x08001da0   Section        0  testrun.o(.text.CU_run_all_tests)
    [Anonymous Symbol]                       0x08001f08   Section        0  testrun.o(.text.CU_set_all_test_complete_handler)
    [Anonymous Symbol]                       0x08001f1c   Section        0  cuerror.o(.text.CU_set_error)
    [Anonymous Symbol]                       0x08001f78   Section        0  testdb.o(.text.CU_set_registry)
    [Anonymous Symbol]                       0x08001fc4   Section        0  testrun.o(.text.CU_set_suite_cleanup_failure_handler)
    [Anonymous Symbol]                       0x08001fd8   Section        0  testrun.o(.text.CU_set_suite_init_failure_handler)
    [Anonymous Symbol]                       0x08001fec   Section        0  testrun.o(.text.CU_set_test_complete_handler)
    [Anonymous Symbol]                       0x08002000   Section        0  testrun.o(.text.CU_set_test_start_handler)
    [Anonymous Symbol]                       0x08002014   Section        0  retarget_io.o(.text.ITM_SendChar)
    [Anonymous Symbol]                       0x08002060   Section        0  port.o(.text.PendSV_Handler)
    pxCurrentTCBConst                        0x080020c0   Number         0  port.o(.text.PendSV_Handler)
    [Anonymous Symbol]                       0x080020d0   Section        0  port.o(.text.SVC_Handler)
    pxCurrentTCBConst2                       0x080020f0   Number         0  port.o(.text.SVC_Handler)
    [Anonymous Symbol]                       0x080020f4   Section        0  cmsis_os2.o(.text.SysTick_Handler)
    [Anonymous Symbol]                       0x08002114   Section        0  system_stm32f4xx.o(.text.SystemInit)
    [Anonymous Symbol]                       0x08002128   Section        0  test_06_mutex.o(.text._Z10TEST_Mutexv)
    [Anonymous Symbol]                       0x080021c8   Section        0  test_osapi.o(.text._Z14taskOSAPI_TESTPv)
    [Anonymous Symbol]                       0x08002388   Section        0  test_02_thread_join.o(.text._Z15TEST_ThreadJoinv)
    [Anonymous Symbol]                       0x080024f0   Section        0  test_00_thread_name.o(.text._Z15TEST_ThreadNamev)
    [Anonymous Symbol]                       0x08002558   Section        0  test_05_thread_delay.o(.text._Z16TEST_ThreadDelayv)
    [Anonymous Symbol]                       0x08002600   Section        0  test_08_mortal_thread.o(.text._Z17TEST_MortalThreadv)
    [Anonymous Symbol]                       0x08002764   Section        0  test_07_recursive_mutex.o(.text._Z19TEST_RecursiveMutexv)
    [Anonymous Symbol]                       0x08002838   Section        0  test_01_thread_creation.o(.text._Z19TEST_ThreadCreationv)
    [Anonymous Symbol]                       0x080028d4   Section        0  test_04_thread_priority.o(.text._Z19TEST_ThreadPriorityv)
    [Anonymous Symbol]                       0x0800297c   Section        0  test_14_thread_stack_size.o(.text._Z20TEST_ThreadStackSizev)
    [Anonymous Symbol]                       0x08002af0   Section        0  test_11_thread_run_detailed.o(.text._Z22TEST_ThreadRunDetailedv)
    [Anonymous Symbol]                       0x08002c74   Section        0  test_12_thread_state.o(.text._Z24TEST_ThreadStateCheckingv)
    [Anonymous Symbol]                       0x08002ea4   Section        0  test_03_thread_suspend_resume.o(.text._Z24TEST_ThreadSuspendResumev)
    [Anonymous Symbol]                       0x08003038   Section        0  test_10_thread_priority_change.o(.text._Z25TEST_ThreadPriorityChangev)
    [Anonymous Symbol]                       0x080031fc   Section        0  test_13_thread_suspend_inactive.o(.text._Z26TEST_ThreadSuspendInactivev)
    [Anonymous Symbol]                       0x080032a8   Section        0  test_00_thread_name.o(.text._ZN11TestThread03jobEv)
    [Anonymous Symbol]                       0x080032b0   Section        0  test_00_thread_name.o(.text._ZN11TestThread0C2Ev)
    [Anonymous Symbol]                       0x080032e8   Section        0  test_00_thread_name.o(.text._ZN11TestThread0D0Ev)
    [Anonymous Symbol]                       0x08003300   Section        0  test_00_thread_name.o(.text._ZN11TestThread0D2Ev)
    [Anonymous Symbol]                       0x08003314   Section        0  test_01_thread_creation.o(.text._ZN11TestThread13jobEv)
    [Anonymous Symbol]                       0x08003328   Section        0  test_01_thread_creation.o(.text._ZN11TestThread1C2Ev)
    [Anonymous Symbol]                       0x0800335c   Section        0  test_01_thread_creation.o(.text._ZN11TestThread1D0Ev)
    [Anonymous Symbol]                       0x08003374   Section        0  test_01_thread_creation.o(.text._ZN11TestThread1D2Ev)
    [Anonymous Symbol]                       0x08003388   Section        0  test_02_thread_join.o(.text._ZN11TestThread23jobEv)
    [Anonymous Symbol]                       0x080033f8   Section        0  test_02_thread_join.o(.text._ZN11TestThread2C2Ev)
    [Anonymous Symbol]                       0x08003434   Section        0  test_02_thread_join.o(.text._ZN11TestThread2D0Ev)
    [Anonymous Symbol]                       0x0800344c   Section        0  test_02_thread_join.o(.text._ZN11TestThread2D2Ev)
    [Anonymous Symbol]                       0x08003460   Section        0  test_03_thread_suspend_resume.o(.text._ZN11TestThread33jobEv)
    [Anonymous Symbol]                       0x080034a4   Section        0  test_03_thread_suspend_resume.o(.text._ZN11TestThread3C2Ev)
    [Anonymous Symbol]                       0x080034e0   Section        0  test_03_thread_suspend_resume.o(.text._ZN11TestThread3D0Ev)
    [Anonymous Symbol]                       0x080034f8   Section        0  test_03_thread_suspend_resume.o(.text._ZN11TestThread3D2Ev)
    [Anonymous Symbol]                       0x0800350c   Section        0  test_04_thread_priority.o(.text._ZN11TestThread43jobEv)
    [Anonymous Symbol]                       0x08003538   Section        0  test_04_thread_priority.o(.text._ZN11TestThread4C2Ev)
    [Anonymous Symbol]                       0x08003574   Section        0  test_04_thread_priority.o(.text._ZN11TestThread4D0Ev)
    [Anonymous Symbol]                       0x0800358c   Section        0  test_04_thread_priority.o(.text._ZN11TestThread4D2Ev)
    [Anonymous Symbol]                       0x080035a0   Section        0  test_05_thread_delay.o(.text._ZN11TestThread53jobEv)
    [Anonymous Symbol]                       0x080035b8   Section        0  test_05_thread_delay.o(.text._ZN11TestThread5C2Ev)
    [Anonymous Symbol]                       0x080035f4   Section        0  test_05_thread_delay.o(.text._ZN11TestThread5D0Ev)
    [Anonymous Symbol]                       0x0800360c   Section        0  test_05_thread_delay.o(.text._ZN11TestThread5D2Ev)
    [Anonymous Symbol]                       0x08003620   Section        0  test_11_thread_run_detailed.o(.text._ZN12TestThread113jobEv)
    [Anonymous Symbol]                       0x08003658   Section        0  test_11_thread_run_detailed.o(.text._ZN12TestThread11C2Ev)
    [Anonymous Symbol]                       0x0800368c   Section        0  test_11_thread_run_detailed.o(.text._ZN12TestThread11D0Ev)
    [Anonymous Symbol]                       0x080036a4   Section        0  test_11_thread_run_detailed.o(.text._ZN12TestThread11D2Ev)
    [Anonymous Symbol]                       0x080036b8   Section        0  test_12_thread_state.o(.text._ZN12TestThread123jobEv)
    [Anonymous Symbol]                       0x080036f4   Section        0  test_12_thread_state.o(.text._ZN12TestThread12C2Ev)
    [Anonymous Symbol]                       0x08003728   Section        0  test_12_thread_state.o(.text._ZN12TestThread12D0Ev)
    [Anonymous Symbol]                       0x08003740   Section        0  test_12_thread_state.o(.text._ZN12TestThread12D2Ev)
    [Anonymous Symbol]                       0x08003754   Section        0  test_13_thread_suspend_inactive.o(.text._ZN12TestThread133jobEv)
    [Anonymous Symbol]                       0x0800375c   Section        0  test_13_thread_suspend_inactive.o(.text._ZN12TestThread13C2Ev)
    [Anonymous Symbol]                       0x08003790   Section        0  test_13_thread_suspend_inactive.o(.text._ZN12TestThread13D0Ev)
    [Anonymous Symbol]                       0x080037a8   Section        0  test_13_thread_suspend_inactive.o(.text._ZN12TestThread13D2Ev)
    [Anonymous Symbol]                       0x080037bc   Section        0  test_14_thread_stack_size.o(.text._ZN12TestThread143jobEv)
    [Anonymous Symbol]                       0x080037e8   Section        0  test_14_thread_stack_size.o(.text._ZN12TestThread14C2Ev)
    [Anonymous Symbol]                       0x0800381c   Section        0  test_14_thread_stack_size.o(.text._ZN12TestThread14D0Ev)
    [Anonymous Symbol]                       0x08003834   Section        0  test_14_thread_stack_size.o(.text._ZN12TestThread14D2Ev)
    [Anonymous Symbol]                       0x08003848   Section        0  test_10_thread_priority_change.o(.text._ZN13TestThread10A3jobEv)
    [Anonymous Symbol]                       0x080038b0   Section        0  test_10_thread_priority_change.o(.text._ZN13TestThread10AC2Ev)
    [Anonymous Symbol]                       0x080038ec   Section        0  test_10_thread_priority_change.o(.text._ZN13TestThread10AD0Ev)
    [Anonymous Symbol]                       0x08003904   Section        0  test_10_thread_priority_change.o(.text._ZN13TestThread10AD2Ev)
    [Anonymous Symbol]                       0x08003918   Section        0  test_10_thread_priority_change.o(.text._ZN13TestThread10B3jobEv)
    [Anonymous Symbol]                       0x08003980   Section        0  test_10_thread_priority_change.o(.text._ZN13TestThread10BC2Ev)
    [Anonymous Symbol]                       0x080039bc   Section        0  test_10_thread_priority_change.o(.text._ZN13TestThread10BD0Ev)
    [Anonymous Symbol]                       0x080039d4   Section        0  test_10_thread_priority_change.o(.text._ZN13TestThread10BD2Ev)
    [Anonymous Symbol]                       0x080039e8   Section        0  test_08_mortal_thread.o(.text._ZN14MyMortalThread3endEv)
    [Anonymous Symbol]                       0x080039fc   Section        0  test_08_mortal_thread.o(.text._ZN14MyMortalThread4loopEv)
    [Anonymous Symbol]                       0x08003a1c   Section        0  test_08_mortal_thread.o(.text._ZN14MyMortalThread5beginEv)
    [Anonymous Symbol]                       0x08003a30   Section        0  test_08_mortal_thread.o(.text._ZN14MyMortalThreadC2Ev)
    [Anonymous Symbol]                       0x08003a60   Section        0  test_08_mortal_thread.o(.text._ZN14MyMortalThreadD0Ev)
    [Anonymous Symbol]                       0x08003a78   Section        0  test_08_mortal_thread.o(.text._ZN14MyMortalThreadD2Ev)
    [Anonymous Symbol]                       0x08003a8c   Section        0  test_08_mortal_thread.o(.text._ZN5osapi12MortalThread3jobEv)
    [Anonymous Symbol]                       0x08003ac0   Section        0  test_08_mortal_thread.o(.text._ZN5osapi12MortalThread4killEv)
    [Anonymous Symbol]                       0x08003ad0   Section        0  test_08_mortal_thread.o(.text._ZN5osapi12MortalThreadC2EijPKc)
    [Anonymous Symbol]                       0x08003b08   Section        0  test_08_mortal_thread.o(.text._ZN5osapi12MortalThreadD0Ev)
    [Anonymous Symbol]                       0x08003b10   Section        0  test_08_mortal_thread.o(.text._ZN5osapi12MortalThreadD2Ev)
    [Anonymous Symbol]                       0x08003b30   Section        0  osapi_freertos.o(.text._ZN5osapi13getSystemTimeEv)
    [Anonymous Symbol]                       0x08003b38   Section        0  test_07_recursive_mutex.o(.text._ZN5osapi14RecursiveMutex4lockEj)
    [Anonymous Symbol]                       0x08003b74   Section        0  test_07_recursive_mutex.o(.text._ZN5osapi14RecursiveMutex6unlockEv)
    [Anonymous Symbol]                       0x08003ba0   Section        0  test_00_thread_name.o(.text._ZN5osapi15ThreadInterfaceC2Ev)
    [Anonymous Symbol]                       0x08003bb8   Section        0  test_00_thread_name.o(.text._ZN5osapi15ThreadInterfaceD0Ev)
    [Anonymous Symbol]                       0x08003bc0   Section        0  test_00_thread_name.o(.text._ZN5osapi15ThreadInterfaceD2Ev)
    [Anonymous Symbol]                       0x08003bcc   Section        0  test_06_mutex.o(.text._ZN5osapi5Mutex4lockEj)
    [Anonymous Symbol]                       0x08003bfc   Section        0  test_06_mutex.o(.text._ZN5osapi5Mutex6unlockEv)
    [Anonymous Symbol]                       0x08003c0c   Section        0  test_00_thread_name.o(.text._ZN5osapi6Thread10isJoinableEv)
    [Anonymous Symbol]                       0x08003c20   Section        0  test_00_thread_name.o(.text._ZN5osapi6Thread11getPriorityEv)
    [Anonymous Symbol]                       0x08003c34   Section        0  test_00_thread_name.o(.text._ZN5osapi6Thread11setPriorityEi)
    [Anonymous Symbol]                       0x08003c6c   Section        0  test_00_thread_name.o(.text._ZN5osapi6Thread14threadFunctionEPv)
    [Anonymous Symbol]                       0x08003ca8   Section        0  test_00_thread_name.o(.text._ZN5osapi6Thread16getUsedStackSizeEv)
    [Anonymous Symbol]                       0x08003cdc   Section        0  test_00_thread_name.o(.text._ZN5osapi6Thread17getTotalStackSizeEv)
    [Anonymous Symbol]                       0x08003ce8   Section        0  test_00_thread_name.o(.text._ZN5osapi6Thread3runEv)
    [Anonymous Symbol]                       0x08003d48   Section        0  test_00_thread_name.o(.text._ZN5osapi6Thread4joinEj)
    [Anonymous Symbol]                       0x08003d90   Section        0  test_00_thread_name.o(.text._ZN5osapi6Thread5sleepEj)
    [Anonymous Symbol]                       0x08003da4   Section        0  test_00_thread_name.o(.text._ZN5osapi6Thread6resumeEv)
    [Anonymous Symbol]                       0x08003ddc   Section        0  test_00_thread_name.o(.text._ZN5osapi6Thread7getNameEv)
    [Anonymous Symbol]                       0x08003de8   Section        0  test_00_thread_name.o(.text._ZN5osapi6Thread7suspendEv)
    [Anonymous Symbol]                       0x08003e30   Section        0  test_00_thread_name.o(.text._ZN5osapi6Thread8getStateEv)
    [Anonymous Symbol]                       0x08003ec8   Section        0  test_00_thread_name.o(.text._ZN5osapi6Thread9isRunningEv)
    [Anonymous Symbol]                       0x08003f30   Section        0  test_00_thread_name.o(.text._ZN5osapi6ThreadC2EijNS_8JoinableEPKc)
    [Anonymous Symbol]                       0x08003f98   Section        0  test_00_thread_name.o(.text._ZN5osapi6ThreadD0Ev)
    [Anonymous Symbol]                       0x08003fa0   Section        0  test_00_thread_name.o(.text._ZN5osapi6ThreadD2Ev)
    [Anonymous Symbol]                       0x08003fb4   Section        0  new.cpp.o(.text._ZdlPv)
    [Anonymous Symbol]                       0x08003fb8   Section        0  retarget_io.o(.text.__aeabi_assert)
    [Anonymous Symbol]                       0x08004074   Section        0  cxa_virtual.cpp.o(.text.__cxa_pure_virtual)
    [Anonymous Symbol]                       0x0800409c   Section        0  retarget_io.o(.text.abort)
    [Anonymous Symbol]                       0x080040a0   Section        0  abort_message.cpp.o(.text.abort_message)
    add_failure                              0x080040a5   Thumb Code   334  testrun.o(.text.add_failure)
    [Anonymous Symbol]                       0x080040a4   Section        0  testrun.o(.text.add_failure)
    basic_all_tests_complete_message_handler 0x080041f5   Thumb Code    46  basic.o(.text.basic_all_tests_complete_message_handler)
    [Anonymous Symbol]                       0x080041f4   Section        0  basic.o(.text.basic_all_tests_complete_message_handler)
    basic_initialize                         0x08004225   Thumb Code   174  basic.o(.text.basic_initialize)
    [Anonymous Symbol]                       0x08004224   Section        0  basic.o(.text.basic_initialize)
    basic_run_all_tests                      0x080042d5   Thumb Code    66  basic.o(.text.basic_run_all_tests)
    [Anonymous Symbol]                       0x080042d4   Section        0  basic.o(.text.basic_run_all_tests)
    basic_suite_cleanup_failure_message_handler 0x08004319   Thumb Code   118  basic.o(.text.basic_suite_cleanup_failure_message_handler)
    [Anonymous Symbol]                       0x08004318   Section        0  basic.o(.text.basic_suite_cleanup_failure_message_handler)
    basic_suite_init_failure_message_handler 0x08004391   Thumb Code   118  basic.o(.text.basic_suite_init_failure_message_handler)
    [Anonymous Symbol]                       0x08004390   Section        0  basic.o(.text.basic_suite_init_failure_message_handler)
    basic_test_complete_message_handler      0x08004409   Thumb Code   430  basic.o(.text.basic_test_complete_message_handler)
    [Anonymous Symbol]                       0x08004408   Section        0  basic.o(.text.basic_test_complete_message_handler)
    basic_test_start_message_handler         0x080045b9   Thumb Code   294  basic.o(.text.basic_test_start_message_handler)
    [Anonymous Symbol]                       0x080045b8   Section        0  basic.o(.text.basic_test_start_message_handler)
    cleanup_failure_list                     0x080046e1   Thumb Code    90  testrun.o(.text.cleanup_failure_list)
    [Anonymous Symbol]                       0x080046e0   Section        0  testrun.o(.text.cleanup_failure_list)
    cleanup_suite                            0x0800473d   Thumb Code   118  testdb.o(.text.cleanup_suite)
    [Anonymous Symbol]                       0x0800473c   Section        0  testdb.o(.text.cleanup_suite)
    cleanup_test                             0x080047b5   Thumb Code    66  testdb.o(.text.cleanup_test)
    [Anonymous Symbol]                       0x080047b4   Section        0  testdb.o(.text.cleanup_test)
    cleanup_test_registry                    0x080047f9   Thumb Code   100  testdb.o(.text.cleanup_test_registry)
    [Anonymous Symbol]                       0x080047f8   Section        0  testdb.o(.text.cleanup_test_registry)
    clear_previous_results                   0x0800485d   Thumb Code   150  testrun.o(.text.clear_previous_results)
    [Anonymous Symbol]                       0x0800485c   Section        0  testrun.o(.text.clear_previous_results)
    create_suite                             0x080048f5   Thumb Code   166  testdb.o(.text.create_suite)
    [Anonymous Symbol]                       0x080048f4   Section        0  testdb.o(.text.create_suite)
    create_test                              0x0800499d   Thumb Code   136  testdb.o(.text.create_test)
    [Anonymous Symbol]                       0x0800499c   Section        0  testdb.o(.text.create_test)
    [Anonymous Symbol]                       0x08004a24   Section        0  tasks.o(.text.eTaskGetState)
    [Anonymous Symbol]                       0x08004b18   Section        0  main.o(.text.exit)
    [Anonymous Symbol]                       0x08004b20   Section        0  retarget_io.o(.text.fputc)
    get_error_desc                           0x08004b51   Thumb Code    92  cuerror.o(.text.get_error_desc)
    [Anonymous Symbol]                       0x08004b50   Section        0  cuerror.o(.text.get_error_desc)
    insert_suite                             0x08004bad   Thumb Code   222  testdb.o(.text.insert_suite)
    [Anonymous Symbol]                       0x08004bac   Section        0  testdb.o(.text.insert_suite)
    insert_test                              0x08004c8d   Thumb Code   284  testdb.o(.text.insert_test)
    [Anonymous Symbol]                       0x08004c8c   Section        0  testdb.o(.text.insert_test)
    [Anonymous Symbol]                       0x08004da8   Section        0  main.o(.text.main)
    prvAddCurrentTaskToDelayedList           0x08004de9   Thumb Code   212  tasks.o(.text.prvAddCurrentTaskToDelayedList)
    [Anonymous Symbol]                       0x08004de8   Section        0  tasks.o(.text.prvAddCurrentTaskToDelayedList)
    prvAddNewTaskToReadyList                 0x08004ebd   Thumb Code   290  tasks.o(.text.prvAddNewTaskToReadyList)
    [Anonymous Symbol]                       0x08004ebc   Section        0  tasks.o(.text.prvAddNewTaskToReadyList)
    prvCheckForValidListAndQueue             0x08004fe1   Thumb Code   126  timers.o(.text.prvCheckForValidListAndQueue)
    [Anonymous Symbol]                       0x08004fe0   Section        0  timers.o(.text.prvCheckForValidListAndQueue)
    prvCheckTasksWaitingTermination          0x08005061   Thumb Code    90  tasks.o(.text.prvCheckTasksWaitingTermination)
    [Anonymous Symbol]                       0x08005060   Section        0  tasks.o(.text.prvCheckTasksWaitingTermination)
    prvCopyDataFromQueue                     0x080050bd   Thumb Code    66  queue.o(.text.prvCopyDataFromQueue)
    [Anonymous Symbol]                       0x080050bc   Section        0  queue.o(.text.prvCopyDataFromQueue)
    prvCopyDataToQueue                       0x08005101   Thumb Code   204  queue.o(.text.prvCopyDataToQueue)
    [Anonymous Symbol]                       0x08005100   Section        0  queue.o(.text.prvCopyDataToQueue)
    prvDeleteTCB                             0x080051cd   Thumb Code    60  tasks.o(.text.prvDeleteTCB)
    [Anonymous Symbol]                       0x080051cc   Section        0  tasks.o(.text.prvDeleteTCB)
    prvGetDisinheritPriorityAfterTimeout     0x08005209   Thumb Code    38  queue.o(.text.prvGetDisinheritPriorityAfterTimeout)
    [Anonymous Symbol]                       0x08005208   Section        0  queue.o(.text.prvGetDisinheritPriorityAfterTimeout)
    prvGetNextExpireTime                     0x08005231   Thumb Code    64  timers.o(.text.prvGetNextExpireTime)
    [Anonymous Symbol]                       0x08005230   Section        0  timers.o(.text.prvGetNextExpireTime)
    prvHeapInit                              0x08005271   Thumb Code   188  heap_4.o(.text.prvHeapInit)
    [Anonymous Symbol]                       0x08005270   Section        0  heap_4.o(.text.prvHeapInit)
    prvIdleTask                              0x0800532d   Thumb Code    56  tasks.o(.text.prvIdleTask)
    [Anonymous Symbol]                       0x0800532c   Section        0  tasks.o(.text.prvIdleTask)
    prvInitialiseNewQueue                    0x08005365   Thumb Code    72  queue.o(.text.prvInitialiseNewQueue)
    [Anonymous Symbol]                       0x08005364   Section        0  queue.o(.text.prvInitialiseNewQueue)
    prvInitialiseNewTask                     0x080053ad   Thumb Code   258  tasks.o(.text.prvInitialiseNewTask)
    [Anonymous Symbol]                       0x080053ac   Section        0  tasks.o(.text.prvInitialiseNewTask)
    prvInitialiseTaskLists                   0x080054b1   Thumb Code   142  tasks.o(.text.prvInitialiseTaskLists)
    [Anonymous Symbol]                       0x080054b0   Section        0  tasks.o(.text.prvInitialiseTaskLists)
    prvInsertBlockIntoFreeList               0x08005541   Thumb Code   198  heap_4.o(.text.prvInsertBlockIntoFreeList)
    [Anonymous Symbol]                       0x08005540   Section        0  heap_4.o(.text.prvInsertBlockIntoFreeList)
    prvInsertTimerInActiveList               0x08005609   Thumb Code   134  timers.o(.text.prvInsertTimerInActiveList)
    [Anonymous Symbol]                       0x08005608   Section        0  timers.o(.text.prvInsertTimerInActiveList)
    prvIsQueueEmpty                          0x08005691   Thumb Code    40  queue.o(.text.prvIsQueueEmpty)
    [Anonymous Symbol]                       0x08005690   Section        0  queue.o(.text.prvIsQueueEmpty)
    prvIsQueueFull                           0x080056b9   Thumb Code    46  queue.o(.text.prvIsQueueFull)
    [Anonymous Symbol]                       0x080056b8   Section        0  queue.o(.text.prvIsQueueFull)
    prvPortStartFirstTask                    0x080056e9   Thumb Code    40  port.o(.text.prvPortStartFirstTask)
    [Anonymous Symbol]                       0x080056e8   Section        0  port.o(.text.prvPortStartFirstTask)
    prvProcessExpiredTimer                   0x08005711   Thumb Code   114  timers.o(.text.prvProcessExpiredTimer)
    [Anonymous Symbol]                       0x08005710   Section        0  timers.o(.text.prvProcessExpiredTimer)
    prvProcessReceivedCommands               0x08005785   Thumb Code   314  timers.o(.text.prvProcessReceivedCommands)
    [Anonymous Symbol]                       0x08005784   Section        0  timers.o(.text.prvProcessReceivedCommands)
    prvProcessTimerOrBlockTask               0x080058c1   Thumb Code   154  timers.o(.text.prvProcessTimerOrBlockTask)
    [Anonymous Symbol]                       0x080058c0   Section        0  timers.o(.text.prvProcessTimerOrBlockTask)
    prvResetNextTaskUnblockTime              0x0800595d   Thumb Code    60  tasks.o(.text.prvResetNextTaskUnblockTime)
    [Anonymous Symbol]                       0x0800595c   Section        0  tasks.o(.text.prvResetNextTaskUnblockTime)
    prvSampleTimeNow                         0x08005999   Thumb Code    68  timers.o(.text.prvSampleTimeNow)
    [Anonymous Symbol]                       0x08005998   Section        0  timers.o(.text.prvSampleTimeNow)
    prvSwitchTimerLists                      0x080059dd   Thumb Code   184  timers.o(.text.prvSwitchTimerLists)
    [Anonymous Symbol]                       0x080059dc   Section        0  timers.o(.text.prvSwitchTimerLists)
    prvTaskCheckFreeStackSpace               0x08005a95   Thumb Code    48  tasks.o(.text.prvTaskCheckFreeStackSpace)
    [Anonymous Symbol]                       0x08005a94   Section        0  tasks.o(.text.prvTaskCheckFreeStackSpace)
    prvTaskExitError                         0x08005ac5   Thumb Code    38  port.o(.text.prvTaskExitError)
    [Anonymous Symbol]                       0x08005ac4   Section        0  port.o(.text.prvTaskExitError)
    prvTaskIsTaskSuspended                   0x08005aed   Thumb Code    78  tasks.o(.text.prvTaskIsTaskSuspended)
    [Anonymous Symbol]                       0x08005aec   Section        0  tasks.o(.text.prvTaskIsTaskSuspended)
    prvTimerTask                             0x08005b3d   Thumb Code    30  timers.o(.text.prvTimerTask)
    [Anonymous Symbol]                       0x08005b3c   Section        0  timers.o(.text.prvTimerTask)
    prvUnlockQueue                           0x08005b5d   Thumb Code   174  queue.o(.text.prvUnlockQueue)
    [Anonymous Symbol]                       0x08005b5c   Section        0  queue.o(.text.prvUnlockQueue)
    [Anonymous Symbol]                       0x08005c0c   Section        0  heap_4.o(.text.pvPortMalloc)
    [Anonymous Symbol]                       0x08005dc0   Section        0  tasks.o(.text.pvTaskIncrementMutexHeldCount)
    [Anonymous Symbol]                       0x08005dec   Section        0  port.o(.text.pxPortInitialiseStack)
    run_single_suite                         0x08005e4d   Thumb Code   862  testrun.o(.text.run_single_suite)
    [Anonymous Symbol]                       0x08005e4c   Section        0  testrun.o(.text.run_single_suite)
    run_single_test                          0x080061ad   Thumb Code   590  testrun.o(.text.run_single_test)
    [Anonymous Symbol]                       0x080061ac   Section        0  testrun.o(.text.run_single_test)
    stdout_putchar                           0x080063fd   Thumb Code    16  retarget_io.o(.text.stdout_putchar)
    [Anonymous Symbol]                       0x080063fc   Section        0  retarget_io.o(.text.stdout_putchar)
    suite_exists                             0x0800640d   Thumb Code   138  testdb.o(.text.suite_exists)
    [Anonymous Symbol]                       0x0800640c   Section        0  testdb.o(.text.suite_exists)
    test_exists                              0x08006499   Thumb Code   138  testdb.o(.text.test_exists)
    [Anonymous Symbol]                       0x08006498   Section        0  testdb.o(.text.test_exists)
    [Anonymous Symbol]                       0x08006524   Section        0  list.o(.text.uxListRemove)
    [Anonymous Symbol]                       0x0800656c   Section        0  tasks.o(.text.uxTaskGetNumberOfTasks)
    [Anonymous Symbol]                       0x08006578   Section        0  tasks.o(.text.uxTaskGetStackHighWaterMark)
    [Anonymous Symbol]                       0x080065b0   Section        0  tasks.o(.text.uxTaskPriorityGet)
    [Anonymous Symbol]                       0x080065e8   Section        0  cmsis_os2.o(.text.vApplicationGetIdleTaskMemory)
    [Anonymous Symbol]                       0x08006614   Section        0  cmsis_os2.o(.text.vApplicationGetTimerTaskMemory)
    [Anonymous Symbol]                       0x08006640   Section        0  cmsis_os2.o(.text.vApplicationStackOverflowHook)
    [Anonymous Symbol]                       0x0800664c   Section        0  list.o(.text.vListInitialise)
    [Anonymous Symbol]                       0x0800667c   Section        0  list.o(.text.vListInitialiseItem)
    [Anonymous Symbol]                       0x0800668c   Section        0  list.o(.text.vListInsert)
    [Anonymous Symbol]                       0x080066f8   Section        0  list.o(.text.vListInsertEnd)
    vPortEnableVFP                           0x08006735   Thumb Code    20  port.o(.text.vPortEnableVFP)
    [Anonymous Symbol]                       0x08006734   Section        0  port.o(.text.vPortEnableVFP)
    [Anonymous Symbol]                       0x08006748   Section        0  port.o(.text.vPortEnterCritical)
    [Anonymous Symbol]                       0x08006778   Section        0  port.o(.text.vPortExitCritical)
    [Anonymous Symbol]                       0x080067a0   Section        0  heap_4.o(.text.vPortFree)
    [Anonymous Symbol]                       0x08006824   Section        0  port.o(.text.vPortSetupTimerInterrupt)
    [Anonymous Symbol]                       0x08006868   Section        0  queue.o(.text.vQueueWaitForMessageRestricted)
    [Anonymous Symbol]                       0x080068cc   Section        0  tasks.o(.text.vTaskDelay)
    [Anonymous Symbol]                       0x08006918   Section        0  tasks.o(.text.vTaskDelete)
    [Anonymous Symbol]                       0x08006a04   Section        0  tasks.o(.text.vTaskInternalSetTimeOutState)
    [Anonymous Symbol]                       0x08006a28   Section        0  tasks.o(.text.vTaskMissedYield)
    [Anonymous Symbol]                       0x08006a38   Section        0  tasks.o(.text.vTaskPlaceOnEventList)
    [Anonymous Symbol]                       0x08006a60   Section        0  tasks.o(.text.vTaskPlaceOnEventListRestricted)
    [Anonymous Symbol]                       0x08006a98   Section        0  tasks.o(.text.vTaskPriorityDisinheritAfterTimeout)
    [Anonymous Symbol]                       0x08006b84   Section        0  tasks.o(.text.vTaskPrioritySet)
    [Anonymous Symbol]                       0x08006d04   Section        0  tasks.o(.text.vTaskResume)
    [Anonymous Symbol]                       0x08006dc0   Section        0  tasks.o(.text.vTaskStartScheduler)
    [Anonymous Symbol]                       0x08006e8c   Section        0  tasks.o(.text.vTaskSuspend)
    [Anonymous Symbol]                       0x08006fb0   Section        0  tasks.o(.text.vTaskSuspendAll)
    __tagsym$$used.0                         0x08006fc0   Number         0  tasks.o(.text.vTaskSwitchContext)
    [Anonymous Symbol]                       0x08006fc0   Section        0  tasks.o(.text.vTaskSwitchContext)
    [Anonymous Symbol]                       0x080070c4   Section        0  port.o(.text.xPortStartScheduler)
    [Anonymous Symbol]                       0x08007118   Section        0  port.o(.text.xPortSysTickHandler)
    [Anonymous Symbol]                       0x08007154   Section        0  queue.o(.text.xQueueGenericCreate)
    [Anonymous Symbol]                       0x080071ac   Section        0  queue.o(.text.xQueueGenericCreateStatic)
    [Anonymous Symbol]                       0x080071f8   Section        0  queue.o(.text.xQueueGenericReset)
    [Anonymous Symbol]                       0x08007298   Section        0  queue.o(.text.xQueueGenericSend)
    [Anonymous Symbol]                       0x08007404   Section        0  queue.o(.text.xQueueGenericSendFromISR)
    [Anonymous Symbol]                       0x080074c4   Section        0  queue.o(.text.xQueueReceive)
    [Anonymous Symbol]                       0x08007618   Section        0  queue.o(.text.xQueueSemaphoreTake)
    [Anonymous Symbol]                       0x080077b8   Section        0  tasks.o(.text.xTaskCheckForTimeOut)
    [Anonymous Symbol]                       0x08007854   Section        0  tasks.o(.text.xTaskCreate)
    [Anonymous Symbol]                       0x080078f4   Section        0  tasks.o(.text.xTaskCreateStatic)
    [Anonymous Symbol]                       0x08007968   Section        0  tasks.o(.text.xTaskGetSchedulerState)
    [Anonymous Symbol]                       0x080079a0   Section        0  tasks.o(.text.xTaskGetTickCount)
    [Anonymous Symbol]                       0x080079b4   Section        0  tasks.o(.text.xTaskIncrementTick)
    [Anonymous Symbol]                       0x08007b54   Section        0  tasks.o(.text.xTaskPriorityDisinherit)
    [Anonymous Symbol]                       0x08007bfc   Section        0  tasks.o(.text.xTaskPriorityInherit)
    [Anonymous Symbol]                       0x08007d0c   Section        0  tasks.o(.text.xTaskRemoveFromEventList)
    [Anonymous Symbol]                       0x08007dc0   Section        0  tasks.o(.text.xTaskResumeAll)
    [Anonymous Symbol]                       0x08007f24   Section        0  timers.o(.text.xTimerCreateTimerTask)
    [Anonymous Symbol]                       0x08007f9c   Section        0  timers.o(.text.xTimerGenericCommand)
    i.__0fprintf                             0x08008030   Section        0  printfa.o(i.__0fprintf)
    i.__0printf                              0x0800804c   Section        0  printfa.o(i.__0printf)
    i.__0snprintf                            0x0800806c   Section        0  printfa.o(i.__0snprintf)
    i.__aligned_malloc                       0x080080a0   Section        0  malloca.o(i.__aligned_malloc)
    i.__free$memalign                        0x08008140   Section        0  malloca.o(i.__free$memalign)
    i.__malloc$memalign                      0x08008190   Section        0  malloca.o(i.__malloc$memalign)
    i.__scatterload_copy                     0x08008196   Section       14  handlers.o(i.__scatterload_copy)
    i.__scatterload_null                     0x080081a4   Section        2  handlers.o(i.__scatterload_null)
    i.__scatterload_zeroinit                 0x080081a6   Section       14  handlers.o(i.__scatterload_zeroinit)
    _fp_digits                               0x080081b5   Thumb Code   366  printfa.o(i._fp_digits)
    i._fp_digits                             0x080081b4   Section        0  printfa.o(i._fp_digits)
    _printf_core                             0x08008339   Thumb Code  1744  printfa.o(i._printf_core)
    i._printf_core                           0x08008338   Section        0  printfa.o(i._printf_core)
    _printf_post_padding                     0x08008a15   Thumb Code    36  printfa.o(i._printf_post_padding)
    i._printf_post_padding                   0x08008a14   Section        0  printfa.o(i._printf_post_padding)
    _printf_pre_padding                      0x08008a39   Thumb Code    46  printfa.o(i._printf_pre_padding)
    i._printf_pre_padding                    0x08008a38   Section        0  printfa.o(i._printf_pre_padding)
    _snputc                                  0x08008a67   Thumb Code    22  printfa.o(i._snputc)
    i._snputc                                0x08008a66   Section        0  printfa.o(i._snputc)
    i.fputs                                  0x08008a7c   Section        0  fputs.o(i.fputs)
    .L.str                                   0x08008f2c   Data          15  main.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x08008f2c   Section        0  main.o(.rodata.str1.1)
    .L.str.18                                0x08008f39   Data           2  main.o(.rodata.str1.1)
    .L.str.21                                0x08008f39   Data           2  main.o(.rodata.str1.1)
    .L.str.1                                 0x08008f3b   Data           5  main.o(.rodata.str1.1)
    .L.str.4                                 0x08008f40   Data          39  basic.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x08008f40   Section        0  basic.o(.rodata.str1.1)
    .L.str.19                                0x08008f64   Data           3  basic.o(.rodata.str1.1)
    .L.str.20                                0x08008f64   Data           3  basic.o(.rodata.str1.1)
    .L.str                                   0x08008f67   Data           6  basic.o(.rodata.str1.1)
    .L.str.5                                 0x08008f6d   Data          50  basic.o(.rodata.str1.1)
    .L.str.20                                0x08008f9d   Data           2  basic.o(.rodata.str1.1)
    .L.str.22                                0x08008f9f   Data          49  basic.o(.rodata.str1.1)
    .L.str.23                                0x08008fd0   Data          42  basic.o(.rodata.str1.1)
    .L.str.14                                0x08008ffa   Data          14  basic.o(.rodata.str1.1)
    .L.str.1                                 0x08009008   Data          48  basic.o(.rodata.str1.1)
    .L.str.6                                 0x08009038   Data          30  basic.o(.rodata.str1.1)
    .L.str.18                                0x08009056   Data          33  basic.o(.rodata.str1.1)
    .L.str.17                                0x08009077   Data           7  basic.o(.rodata.str1.1)
    .L.str.8                                 0x0800907e   Data          28  basic.o(.rodata.str1.1)
    .L.str.16                                0x0800909a   Data           7  basic.o(.rodata.str1.1)
    .L.str.11                                0x080090a1   Data          22  basic.o(.rodata.str1.1)
    .L.str.10                                0x080090b7   Data          21  basic.o(.rodata.str1.1)
    .L.str.28                                0x080090cc   Data          15  basic.o(.rodata.str1.1)
    .L.str.5                                 0x080090cc   Data          15  basic.o(.rodata.str1.1)
    .L.str.7                                 0x080090cc   Data          15  basic.o(.rodata.str1.1)
    .L.str.2                                 0x080090db   Data          19  basic.o(.rodata.str1.1)
    .L.str.19                                0x080090ee   Data          21  basic.o(.rodata.str1.1)
    .L.str.12                                0x08009103   Data           8  basic.o(.rodata.str1.1)
    .L.str.8                                 0x08009108   Data           3  basic.o(.rodata.str1.1)
    .L.str.31                                0x0800910b   Data          14  basic.o(.rodata.str1.1)
    .L.str.9                                 0x0800910b   Data          14  basic.o(.rodata.str1.1)
    .L.str.9                                 0x0800910b   Data          14  basic.o(.rodata.str1.1)
    .L.str                                   0x08009119   Data          32  cuerror.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x08009119   Section        0  cuerror.o(.rodata.str1.1)
    .L.str                                   0x08009363   Data          33  testdb.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x08009363   Section        0  testdb.o(.rodata.str1.1)
    .L.str.1                                 0x08009384   Data          33  testdb.o(.rodata.str1.1)
    .L.str.4                                 0x080093a5   Data          20  testdb.o(.rodata.str1.1)
    .L.str.7                                 0x080093b9   Data          16  testdb.o(.rodata.str1.1)
    .L.str.6                                 0x080093c9   Data          19  testdb.o(.rodata.str1.1)
    .L.str.8                                 0x080093dc   Data          20  testdb.o(.rodata.str1.1)
    .L.str.12                                0x080093f0   Data          18  testdb.o(.rodata.str1.1)
    .L.str.10                                0x08009402   Data          21  testdb.o(.rodata.str1.1)
    .L.str.11                                0x08009417   Data          21  testdb.o(.rodata.str1.1)
    .L.str.11                                0x0800942c   Data          18  testdb.o(.rodata.str1.1)
    .L.str.3                                 0x0800942c   Data          18  testdb.o(.rodata.str1.1)
    .L.str.2                                 0x0800943e   Data          19  testdb.o(.rodata.str1.1)
    .L.str.3                                 0x08009450   Data           1  testdb.o(.rodata.str1.1)
    .L.str.3                                 0x08009450   Data           1  testdb.o(.rodata.str1.1)
    .L.str.3                                 0x08009450   Data           1  testdb.o(.rodata.str1.1)
    .L.str.3                                 0x08009450   Data           1  testdb.o(.rodata.str1.1)
    .L.str.3                                 0x08009450   Data           1  testdb.o(.rodata.str1.1)
    .L.str.3                                 0x08009450   Data           1  testdb.o(.rodata.str1.1)
    .L.str.3                                 0x08009450   Data           1  testdb.o(.rodata.str1.1)
    .L.str.3                                 0x08009450   Data           1  testdb.o(.rodata.str1.1)
    .L.str.3                                 0x08009450   Data           1  testdb.o(.rodata.str1.1)
    .L.str.3                                 0x08009450   Data           1  testdb.o(.rodata.str1.1)
    .L.str.3                                 0x08009450   Data           1  testdb.o(.rodata.str1.1)
    .L.str.3                                 0x08009450   Data           1  testdb.o(.rodata.str1.1)
    .L.str.3                                 0x08009450   Data           1  testdb.o(.rodata.str1.1)
    .L.str.3                                 0x08009450   Data           1  testdb.o(.rodata.str1.1)
    .L.str.3                                 0x08009450   Data           1  testdb.o(.rodata.str1.1)
    .L.str.25                                0x08009451   Data          16  testrun.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x08009451   Section        0  testrun.o(.rodata.str1.1)
    .L.str.6                                 0x08009461   Data          22  testrun.o(.rodata.str1.1)
    .L.str.9                                 0x08009477   Data          44  testrun.o(.rodata.str1.1)
    .L.str.13                                0x080094a3   Data          13  testrun.o(.rodata.str1.1)
    .L.str.22                                0x080094b0   Data           4  testrun.o(.rodata.str1.1)
    .L.str.1                                 0x080094b4   Data          34  testrun.o(.rodata.str1.1)
    .L.str.18                                0x080094d6   Data           7  testrun.o(.rodata.str1.1)
    .L.str.5                                 0x080094dd   Data          44  testrun.o(.rodata.str1.1)
    .L.str.17                                0x08009509   Data           7  testrun.o(.rodata.str1.1)
    .L.str.7                                 0x08009510   Data          13  testrun.o(.rodata.str1.1)
    .L.str.14                                0x0800951d   Data           5  testrun.o(.rodata.str1.1)
    .L.str.27                                0x08009522   Data          18  testrun.o(.rodata.str1.1)
    .L.str                                   0x08009534   Data          20  testrun.o(.rodata.str1.1)
    .L.str.13                                0x08009542   Data           6  testrun.o(.rodata.str1.1)
    .L.str.30                                0x08009548   Data          33  testrun.o(.rodata.str1.1)
    .L.str.19                                0x08009569   Data           9  testrun.o(.rodata.str1.1)
    .L.str.3                                 0x08009572   Data          15  testrun.o(.rodata.str1.1)
    .L.str.29                                0x08009581   Data          14  testrun.o(.rodata.str1.1)
    .L.str.15                                0x0800958f   Data           6  testrun.o(.rodata.str1.1)
    .L.str.4                                 0x08009595   Data          13  testrun.o(.rodata.str1.1)
    .L.str.16                                0x080095a2   Data           4  testrun.o(.rodata.str1.1)
    .L.str.12                                0x080095a6   Data         101  testrun.o(.rodata.str1.1)
    .L.str.26                                0x0800960b   Data           9  testrun.o(.rodata.str1.1)
    .L.str.21                                0x08009614   Data           7  testrun.o(.rodata.str1.1)
    .L.str.24                                0x0800961b   Data           8  testrun.o(.rodata.str1.1)
    .L.str.23                                0x08009623   Data           6  testrun.o(.rodata.str1.1)
    .L.str.2                                 0x08009629   Data          19  testrun.o(.rodata.str1.1)
    .L.str.15                                0x08009637   Data           5  testrun.o(.rodata.str1.1)
    .L.str.10                                0x0800963c   Data          20  testrun.o(.rodata.str1.1)
    .L.str.1                                 0x08009650   Data          31  util.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x08009650   Section        0  util.o(.rodata.str1.1)
    .L.str                                   0x0800966f   Data          14  util.o(.rodata.str1.1)
    .L.str.4                                 0x0800967d   Data           3  util.o(.rodata.str1.1)
    .L.str.2                                 0x08009680   Data          15  util.o(.rodata.str1.1)
    .L.str.3                                 0x0800968c   Data          17  util.o(.rodata.str1.1)
    .L.str                                   0x0800968f   Data          50  test_00_thread_name.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x0800968f   Section        0  test_00_thread_name.o(.rodata.str1.1)
    .L.str.1                                 0x080096c1   Data          35  test_00_thread_name.o(.rodata.str1.1)
    .L.str.2                                 0x080096ee   Data          35  test_00_thread_name.o(.rodata.str1.1)
    .L.str                                   0x08009711   Data          50  test_01_thread_creation.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x08009711   Section        0  test_01_thread_creation.o(.rodata.str1.1)
    .L.str.1                                 0x08009743   Data          16  test_01_thread_creation.o(.rodata.str1.1)
    .L.str.1                                 0x08009743   Data          16  test_01_thread_creation.o(.rodata.str1.1)
    .L.str.4                                 0x08009743   Data          16  test_01_thread_creation.o(.rodata.str1.1)
    .L.str.4                                 0x08009743   Data          16  test_01_thread_creation.o(.rodata.str1.1)
    .L.str.5                                 0x08009743   Data          16  test_01_thread_creation.o(.rodata.str1.1)
    .L.str.11                                0x08009753   Data           8  test_01_thread_creation.o(.rodata.str1.1)
    .L.str.12                                0x08009753   Data           8  test_01_thread_creation.o(.rodata.str1.1)
    .L.str.5                                 0x08009753   Data           8  test_01_thread_creation.o(.rodata.str1.1)
    .L.str.5                                 0x08009753   Data           8  test_01_thread_creation.o(.rodata.str1.1)
    .L.str.5                                 0x08009753   Data           8  test_01_thread_creation.o(.rodata.str1.1)
    .L.str.6                                 0x08009753   Data           8  test_01_thread_creation.o(.rodata.str1.1)
    .L.str.9                                 0x08009753   Data           8  test_01_thread_creation.o(.rodata.str1.1)
    .L.str.9                                 0x08009753   Data           8  test_01_thread_creation.o(.rodata.str1.1)
    .L.str.9                                 0x08009753   Data           8  test_01_thread_creation.o(.rodata.str1.1)
    .L.str.9                                 0x08009753   Data           8  test_01_thread_creation.o(.rodata.str1.1)
    .L.str.9                                 0x08009753   Data           8  test_01_thread_creation.o(.rodata.str1.1)
    .L.str.1                                 0x0800975b   Data          14  test_01_thread_creation.o(.rodata.str1.1)
    .L.str.4                                 0x0800975b   Data          14  test_01_thread_creation.o(.rodata.str1.1)
    .L.str.5                                 0x0800975b   Data          14  test_01_thread_creation.o(.rodata.str1.1)
    .L.str.7                                 0x0800975b   Data          14  test_01_thread_creation.o(.rodata.str1.1)
    .L.str.2                                 0x08009769   Data          39  test_01_thread_creation.o(.rodata.str1.1)
    .L.str                                   0x08009790   Data          50  test_02_thread_join.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x08009790   Section        0  test_02_thread_join.o(.rodata.str1.1)
    .L.str.4                                 0x080097c2   Data          23  test_02_thread_join.o(.rodata.str1.1)
    .L.str.1                                 0x080097d9   Data          22  test_02_thread_join.o(.rodata.str1.1)
    .L.str.6                                 0x080097ef   Data          21  test_02_thread_join.o(.rodata.str1.1)
    .L.str.7                                 0x08009804   Data          14  test_02_thread_join.o(.rodata.str1.1)
    .L.str.8                                 0x08009812   Data          14  test_02_thread_join.o(.rodata.str1.1)
    .L.str.2                                 0x08009820   Data          35  test_02_thread_join.o(.rodata.str1.1)
    .L.str                                   0x08009843   Data          50  test_03_thread_suspend_resume.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x08009843   Section        0  test_03_thread_suspend_resume.o(.rodata.str1.1)
    .L.str.4                                 0x08009875   Data          20  test_03_thread_suspend_resume.o(.rodata.str1.1)
    .L.str.7                                 0x08009875   Data          20  test_03_thread_suspend_resume.o(.rodata.str1.1)
    .L.str.6                                 0x08009889   Data          19  test_03_thread_suspend_resume.o(.rodata.str1.1)
    .L.str.9                                 0x08009889   Data          19  test_03_thread_suspend_resume.o(.rodata.str1.1)
    .L.str.7                                 0x0800989c   Data          21  test_03_thread_suspend_resume.o(.rodata.str1.1)
    .L.str.7                                 0x0800989c   Data          21  test_03_thread_suspend_resume.o(.rodata.str1.1)
    .L.str.5                                 0x080098b1   Data          14  test_03_thread_suspend_resume.o(.rodata.str1.1)
    .L.str.8                                 0x080098bf   Data          14  test_03_thread_suspend_resume.o(.rodata.str1.1)
    .L.str.2                                 0x080098cd   Data          45  test_03_thread_suspend_resume.o(.rodata.str1.1)
    .L.str                                   0x080098fa   Data          50  test_04_thread_priority.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x080098fa   Section        0  test_04_thread_priority.o(.rodata.str1.1)
    .L.str.4                                 0x0800992c   Data          21  test_04_thread_priority.o(.rodata.str1.1)
    .L.str.1                                 0x08009941   Data          25  test_04_thread_priority.o(.rodata.str1.1)
    .L.str.2                                 0x0800995a   Data          39  test_04_thread_priority.o(.rodata.str1.1)
    .L.str                                   0x08009981   Data          50  test_05_thread_delay.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x08009981   Section        0  test_05_thread_delay.o(.rodata.str1.1)
    .L.str.4                                 0x080099b3   Data          20  test_05_thread_delay.o(.rodata.str1.1)
    .L.str.1                                 0x080099c7   Data          20  test_05_thread_delay.o(.rodata.str1.1)
    .L.str.2                                 0x080099db   Data          36  test_05_thread_delay.o(.rodata.str1.1)
    .L.str                                   0x080099ff   Data          50  test_06_mutex.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x080099ff   Section        0  test_06_mutex.o(.rodata.str1.1)
    .L.str.4                                 0x08009a31   Data          21  test_06_mutex.o(.rodata.str1.1)
    .L.str.1                                 0x08009a46   Data          20  test_06_mutex.o(.rodata.str1.1)
    .L.str.1                                 0x08009a46   Data          20  test_06_mutex.o(.rodata.str1.1)
    .L.str.2                                 0x08009a5a   Data          29  test_06_mutex.o(.rodata.str1.1)
    .L.str                                   0x08009a77   Data          50  test_07_recursive_mutex.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x08009a77   Section        0  test_07_recursive_mutex.o(.rodata.str1.1)
    .L.str.2                                 0x08009aa9   Data          39  test_07_recursive_mutex.o(.rodata.str1.1)
    .L.str                                   0x08009ad0   Data          50  test_08_mortal_thread.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x08009ad0   Section        0  test_08_mortal_thread.o(.rodata.str1.1)
    .L.str.6                                 0x08009b02   Data          17  test_08_mortal_thread.o(.rodata.str1.1)
    .L.str.8                                 0x08009b13   Data          17  test_08_mortal_thread.o(.rodata.str1.1)
    .L.str.4                                 0x08009b24   Data          19  test_08_mortal_thread.o(.rodata.str1.1)
    .L.str.5                                 0x08009b37   Data          18  test_08_mortal_thread.o(.rodata.str1.1)
    .L.str.2                                 0x08009b49   Data          37  test_08_mortal_thread.o(.rodata.str1.1)
    .L.str.8                                 0x08009b6e   Data          25  test_osapi.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x08009b6e   Section        0  test_osapi.o(.rodata.str1.1)
    .L.str.1                                 0x08009b87   Data          25  test_osapi.o(.rodata.str1.1)
    .L.str.11                                0x08009ba0   Data          25  test_osapi.o(.rodata.str1.1)
    .L.str.3                                 0x08009bb9   Data          25  test_osapi.o(.rodata.str1.1)
    .L.str.15                                0x08009bd2   Data          25  test_osapi.o(.rodata.str1.1)
    .L.str.6                                 0x08009beb   Data          25  test_osapi.o(.rodata.str1.1)
    .L.str.14                                0x08009c04   Data          25  test_osapi.o(.rodata.str1.1)
    .L.str.4                                 0x08009c1d   Data          25  test_osapi.o(.rodata.str1.1)
    .L.str.9                                 0x08009c36   Data          25  test_osapi.o(.rodata.str1.1)
    .L.str.13                                0x08009c4f   Data          25  test_osapi.o(.rodata.str1.1)
    .L.str.2                                 0x08009c68   Data          25  test_osapi.o(.rodata.str1.1)
    .L.str.5                                 0x08009c81   Data          25  test_osapi.o(.rodata.str1.1)
    .L.str.17                                0x08009c9a   Data          25  test_osapi.o(.rodata.str1.1)
    .L.str.16                                0x08009cb3   Data          25  test_osapi.o(.rodata.str1.1)
    .L.str.10                                0x08009ccc   Data          21  test_osapi.o(.rodata.str1.1)
    .L.str                                   0x08009ce1   Data          14  test_osapi.o(.rodata.str1.1)
    .L.str.12                                0x08009cef   Data          25  test_osapi.o(.rodata.str1.1)
    .L.str.7                                 0x08009d08   Data          13  test_osapi.o(.rodata.str1.1)
    .L.str                                   0x08009d15   Data          50  test_14_thread_stack_size.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x08009d15   Section        0  test_14_thread_stack_size.o(.rodata.str1.1)
    .L.str.6                                 0x08009d47   Data          25  test_14_thread_stack_size.o(.rodata.str1.1)
    .L.str.4                                 0x08009d60   Data          26  test_14_thread_stack_size.o(.rodata.str1.1)
    .L.str.7                                 0x08009d7a   Data          27  test_14_thread_stack_size.o(.rodata.str1.1)
    .L.str.1                                 0x08009d95   Data          29  test_14_thread_stack_size.o(.rodata.str1.1)
    .L.str.11                                0x08009db2   Data          20  test_14_thread_stack_size.o(.rodata.str1.1)
    .L.str.8                                 0x08009db2   Data          20  test_14_thread_stack_size.o(.rodata.str1.1)
    .L.str.2                                 0x08009dc6   Data          41  test_14_thread_stack_size.o(.rodata.str1.1)
    .L.str                                   0x08009def   Data          50  test_13_thread_suspend_inactive.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x08009def   Section        0  test_13_thread_suspend_inactive.o(.rodata.str1.1)
    .L.str.4                                 0x08009e21   Data          21  test_13_thread_suspend_inactive.o(.rodata.str1.1)
    .L.str.5                                 0x08009e36   Data          20  test_13_thread_suspend_inactive.o(.rodata.str1.1)
    .L.str.1                                 0x08009e4a   Data          32  test_13_thread_suspend_inactive.o(.rodata.str1.1)
    .L.str.1                                 0x08009e4a   Data          32  test_13_thread_suspend_inactive.o(.rodata.str1.1)
    .L.str.2                                 0x08009e6a   Data          47  test_13_thread_suspend_inactive.o(.rodata.str1.1)
    .L.str                                   0x08009e99   Data          53  test_12_thread_state.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x08009e99   Section        0  test_12_thread_state.o(.rodata.str1.1)
    .L.str.8                                 0x08009ece   Data          33  test_12_thread_state.o(.rodata.str1.1)
    .L.str.10                                0x08009eef   Data          31  test_12_thread_state.o(.rodata.str1.1)
    .L.str.6                                 0x08009f0e   Data          29  test_12_thread_state.o(.rodata.str1.1)
    .L.str.5                                 0x08009f2b   Data          27  test_12_thread_state.o(.rodata.str1.1)
    .L.str.2                                 0x08009f46   Data          36  test_12_thread_state.o(.rodata.str1.1)
    .L.str                                   0x08009f6a   Data          53  test_11_thread_run_detailed.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x08009f6a   Section        0  test_11_thread_run_detailed.o(.rodata.str1.1)
    .L.str.1                                 0x08009f9f   Data          23  test_11_thread_run_detailed.o(.rodata.str1.1)
    .L.str.6                                 0x08009fb6   Data          17  test_11_thread_run_detailed.o(.rodata.str1.1)
    .L.str.5                                 0x08009fc7   Data          40  test_11_thread_run_detailed.o(.rodata.str1.1)
    .L.str.8                                 0x08009fef   Data          20  test_11_thread_run_detailed.o(.rodata.str1.1)
    .L.str.2                                 0x0800a003   Data          43  test_11_thread_run_detailed.o(.rodata.str1.1)
    .L.str                                   0x0800a02e   Data          53  test_10_thread_priority_change.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x0800a02e   Section        0  test_10_thread_priority_change.o(.rodata.str1.1)
    .L.str.5                                 0x0800a063   Data          22  test_10_thread_priority_change.o(.rodata.str1.1)
    .L.str.6                                 0x0800a079   Data          22  test_10_thread_priority_change.o(.rodata.str1.1)
    .L.str.9                                 0x0800a08f   Data          21  test_10_thread_priority_change.o(.rodata.str1.1)
    .L.str.10                                0x0800a0a4   Data          21  test_10_thread_priority_change.o(.rodata.str1.1)
    .L.str.7                                 0x0800a0b9   Data          25  test_10_thread_priority_change.o(.rodata.str1.1)
    .L.str.1                                 0x0800a0d2   Data          27  test_10_thread_priority_change.o(.rodata.str1.1)
    .L.str.8                                 0x0800a0ed   Data          25  test_10_thread_priority_change.o(.rodata.str1.1)
    .L.str.4                                 0x0800a106   Data          27  test_10_thread_priority_change.o(.rodata.str1.1)
    .L.str.2                                 0x0800a121   Data          46  test_10_thread_priority_change.o(.rodata.str1.1)
    .L.str                                   0x0800a14f   Data          23  retarget_io.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x0800a14f   Section        0  retarget_io.o(.rodata.str1.1)
    .L.str.1                                 0x0800a166   Data           8  retarget_io.o(.rodata.str1.1)
    .L.str.2                                 0x0800a16e   Data           8  retarget_io.o(.rodata.str1.1)
    .L.str                                   0x0800a176   Data           5  tasks.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x0800a176   Section        0  tasks.o(.rodata.str1.1)
    .L.str                                   0x0800a17b   Data           8  timers.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x0800a17b   Section        0  timers.o(.rodata.str1.1)
    .data                                    0x20000000   Section        4  stdout.o(.data)
    .data                                    0x20000004   Section        4  stderr.o(.data)
    .data                                    0x20000008   Section        4  mvars.o(.data)
    .data                                    0x2000000c   Section        4  mvars.o(.data)
    osapiInitialPriorityA                    0x20000014   Data           4  test_10_thread_priority_change.o(.data._ZL21osapiInitialPriorityA)
    [Anonymous Symbol]                       0x20000014   Section        0  test_10_thread_priority_change.o(.data._ZL21osapiInitialPriorityA)
    osapiInitialPriorityB                    0x20000018   Data           4  test_10_thread_priority_change.o(.data._ZL21osapiInitialPriorityB)
    [Anonymous Symbol]                       0x20000018   Section        0  test_10_thread_priority_change.o(.data._ZL21osapiInitialPriorityB)
    runFlag                                  0x2000001c   Data           4  test_14_thread_stack_size.o(.data._ZL7runFlag)
    [Anonymous Symbol]                       0x2000001c   Section        0  test_14_thread_stack_size.o(.data._ZL7runFlag)
    runFlag                                  0x20000020   Data           4  test_12_thread_state.o(.data._ZL7runFlag)
    [Anonymous Symbol]                       0x20000020   Section        0  test_12_thread_state.o(.data._ZL7runFlag)
    runFlag                                  0x20000024   Data           4  test_11_thread_run_detailed.o(.data._ZL7runFlag)
    [Anonymous Symbol]                       0x20000024   Section        0  test_11_thread_run_detailed.o(.data._ZL7runFlag)
    runFlag                                  0x20000028   Data           4  test_10_thread_priority_change.o(.data._ZL7runFlag)
    [Anonymous Symbol]                       0x20000028   Section        0  test_10_thread_priority_change.o(.data._ZL7runFlag)
    testName                                 0x2000002c   Data           4  test_00_thread_name.o(.data._ZL8testName)
    [Anonymous Symbol]                       0x2000002c   Section        0  test_00_thread_name.o(.data._ZL8testName)
    f_failure_on_inactive                    0x20000030   Data           4  testrun.o(.data.f_failure_on_inactive)
    [Anonymous Symbol]                       0x20000030   Section        0  testrun.o(.data.f_failure_on_inactive)
    get_error_desc.ErrorDescription          0x20000034   Data         180  cuerror.o(.data.get_error_desc.ErrorDescription)
    [Anonymous Symbol]                       0x20000034   Section        0  cuerror.o(.data.get_error_desc.ErrorDescription)
    uxCriticalNesting                        0x200000e8   Data           4  port.o(.data.uxCriticalNesting)
    [Anonymous Symbol]                       0x200000e8   Section        0  port.o(.data.uxCriticalNesting)
    testFlagEnd                              0x200000f0   Data           4  test_08_mortal_thread.o(.bss._ZL11testFlagEnd)
    [Anonymous Symbol]                       0x200000f0   Section        0  test_08_mortal_thread.o(.bss._ZL11testFlagEnd)
    testFlagLoop                             0x200000f4   Data           4  test_08_mortal_thread.o(.bss._ZL12testFlagLoop)
    [Anonymous Symbol]                       0x200000f4   Section        0  test_08_mortal_thread.o(.bss._ZL12testFlagLoop)
    testFlagBegin                            0x200000f8   Data           4  test_08_mortal_thread.o(.bss._ZL13testFlagBegin)
    [Anonymous Symbol]                       0x200000f8   Section        0  test_08_mortal_thread.o(.bss._ZL13testFlagBegin)
    priorityDifferenceA                      0x200000fc   Data           4  test_10_thread_priority_change.o(.bss._ZL19priorityDifferenceA)
    [Anonymous Symbol]                       0x200000fc   Section        0  test_10_thread_priority_change.o(.bss._ZL19priorityDifferenceA)
    priorityDifferenceB                      0x20000100   Data           4  test_10_thread_priority_change.o(.bss._ZL19priorityDifferenceB)
    [Anonymous Symbol]                       0x20000100   Section        0  test_10_thread_priority_change.o(.bss._ZL19priorityDifferenceB)
    m                                        0x20000104   Data           1  test_06_mutex.o(.bss._ZL1m)
    [Anonymous Symbol]                       0x20000104   Section        0  test_06_mutex.o(.bss._ZL1m)
    m                                        0x20000108   Data           8  test_07_recursive_mutex.o(.bss._ZL1m)
    [Anonymous Symbol]                       0x20000108   Section        0  test_07_recursive_mutex.o(.bss._ZL1m)
    runFlag                                  0x20000110   Data           4  test_02_thread_join.o(.bss._ZL7runFlag)
    [Anonymous Symbol]                       0x20000110   Section        0  test_02_thread_join.o(.bss._ZL7runFlag)
    runFlag                                  0x20000114   Data           4  test_03_thread_suspend_resume.o(.bss._ZL7runFlag)
    [Anonymous Symbol]                       0x20000114   Section        0  test_03_thread_suspend_resume.o(.bss._ZL7runFlag)
    runFlag                                  0x20000118   Data           4  test_04_thread_priority.o(.bss._ZL7runFlag)
    [Anonymous Symbol]                       0x20000118   Section        0  test_04_thread_priority.o(.bss._ZL7runFlag)
    runState                                 0x2000011c   Data           1  test_12_thread_state.o(.bss._ZL8runState)
    [Anonymous Symbol]                       0x2000011c   Section        0  test_12_thread_state.o(.bss._ZL8runState)
    testFlag                                 0x20000120   Data           4  test_01_thread_creation.o(.bss._ZL8testFlag)
    [Anonymous Symbol]                       0x20000120   Section        0  test_01_thread_creation.o(.bss._ZL8testFlag)
    testFlag                                 0x20000124   Data           4  test_02_thread_join.o(.bss._ZL8testFlag)
    [Anonymous Symbol]                       0x20000124   Section        0  test_02_thread_join.o(.bss._ZL8testFlag)
    testFlag                                 0x20000128   Data           4  test_03_thread_suspend_resume.o(.bss._ZL8testFlag)
    [Anonymous Symbol]                       0x20000128   Section        0  test_03_thread_suspend_resume.o(.bss._ZL8testFlag)
    testFlag                                 0x2000012c   Data           4  test_11_thread_run_detailed.o(.bss._ZL8testFlag)
    [Anonymous Symbol]                       0x2000012c   Section        0  test_11_thread_run_detailed.o(.bss._ZL8testFlag)
    f_bTestIsRunning                         0x20000130   Data           4  testrun.o(.bss.f_bTestIsRunning)
    [Anonymous Symbol]                       0x20000130   Section        0  testrun.o(.bss.f_bTestIsRunning)
    f_failure_list                           0x20000134   Data           4  testrun.o(.bss.f_failure_list)
    [Anonymous Symbol]                       0x20000134   Section        0  testrun.o(.bss.f_failure_list)
    f_last_failure                           0x20000138   Data           4  testrun.o(.bss.f_last_failure)
    [Anonymous Symbol]                       0x20000138   Section        0  testrun.o(.bss.f_last_failure)
    f_pAllTestsCompleteMessageHandler        0x2000013c   Data           4  testrun.o(.bss.f_pAllTestsCompleteMessageHandler)
    [Anonymous Symbol]                       0x2000013c   Section        0  testrun.o(.bss.f_pAllTestsCompleteMessageHandler)
    f_pCurSuite                              0x20000140   Data           4  testrun.o(.bss.f_pCurSuite)
    [Anonymous Symbol]                       0x20000140   Section        0  testrun.o(.bss.f_pCurSuite)
    f_pCurTest                               0x20000144   Data           4  testrun.o(.bss.f_pCurTest)
    [Anonymous Symbol]                       0x20000144   Section        0  testrun.o(.bss.f_pCurTest)
    f_pRunningSuite                          0x20000148   Data           4  basic.o(.bss.f_pRunningSuite)
    [Anonymous Symbol]                       0x20000148   Section        0  basic.o(.bss.f_pRunningSuite)
    f_pSuiteCleanupFailureMessageHandler     0x2000014c   Data           4  testrun.o(.bss.f_pSuiteCleanupFailureMessageHandler)
    [Anonymous Symbol]                       0x2000014c   Section        0  testrun.o(.bss.f_pSuiteCleanupFailureMessageHandler)
    f_pSuiteCompleteMessageHandler           0x20000150   Data           4  testrun.o(.bss.f_pSuiteCompleteMessageHandler)
    [Anonymous Symbol]                       0x20000150   Section        0  testrun.o(.bss.f_pSuiteCompleteMessageHandler)
    f_pSuiteInitFailureMessageHandler        0x20000154   Data           4  testrun.o(.bss.f_pSuiteInitFailureMessageHandler)
    [Anonymous Symbol]                       0x20000154   Section        0  testrun.o(.bss.f_pSuiteInitFailureMessageHandler)
    f_pSuiteStartMessageHandler              0x20000158   Data           4  testrun.o(.bss.f_pSuiteStartMessageHandler)
    [Anonymous Symbol]                       0x20000158   Section        0  testrun.o(.bss.f_pSuiteStartMessageHandler)
    f_pTestCompleteMessageHandler            0x2000015c   Data           4  testrun.o(.bss.f_pTestCompleteMessageHandler)
    [Anonymous Symbol]                       0x2000015c   Section        0  testrun.o(.bss.f_pTestCompleteMessageHandler)
    f_pTestRegistry                          0x20000160   Data           4  testdb.o(.bss.f_pTestRegistry)
    [Anonymous Symbol]                       0x20000160   Section        0  testdb.o(.bss.f_pTestRegistry)
    f_pTestStartMessageHandler               0x20000164   Data           4  testrun.o(.bss.f_pTestStartMessageHandler)
    [Anonymous Symbol]                       0x20000164   Section        0  testrun.o(.bss.f_pTestStartMessageHandler)
    f_run_mode                               0x20000168   Data           1  basic.o(.bss.f_run_mode)
    [Anonymous Symbol]                       0x20000168   Section        0  basic.o(.bss.f_run_mode)
    f_run_summary                            0x20000170   Data          96  testrun.o(.bss.f_run_summary)
    [Anonymous Symbol]                       0x20000170   Section        0  testrun.o(.bss.f_run_summary)
    f_start_time                             0x200001d0   Data           4  testrun.o(.bss.f_start_time)
    [Anonymous Symbol]                       0x200001d0   Section        0  testrun.o(.bss.f_start_time)
    g_error_action                           0x200001d4   Data           1  cuerror.o(.bss.g_error_action)
    [Anonymous Symbol]                       0x200001d4   Section        0  cuerror.o(.bss.g_error_action)
    g_error_number                           0x200001d5   Data           1  cuerror.o(.bss.g_error_number)
    [Anonymous Symbol]                       0x200001d5   Section        0  cuerror.o(.bss.g_error_number)
    prvCheckForValidListAndQueue.ucStaticTimerQueueStorage 0x200001d6   Data          80  timers.o(.bss.prvCheckForValidListAndQueue.ucStaticTimerQueueStorage)
    [Anonymous Symbol]                       0x200001d6   Section        0  timers.o(.bss.prvCheckForValidListAndQueue.ucStaticTimerQueueStorage)
    prvCheckForValidListAndQueue.xStaticTimerQueue 0x20000228   Data          80  timers.o(.bss.prvCheckForValidListAndQueue.xStaticTimerQueue)
    [Anonymous Symbol]                       0x20000228   Section        0  timers.o(.bss.prvCheckForValidListAndQueue.xStaticTimerQueue)
    prvSampleTimeNow.xLastTime               0x20000278   Data           4  timers.o(.bss.prvSampleTimeNow.xLastTime)
    [Anonymous Symbol]                       0x20000278   Section        0  timers.o(.bss.prvSampleTimeNow.xLastTime)
    pxCurrentTimerList                       0x20000280   Data           4  timers.o(.bss.pxCurrentTimerList)
    [Anonymous Symbol]                       0x20000280   Section        0  timers.o(.bss.pxCurrentTimerList)
    pxDelayedTaskList                        0x20000284   Data           4  tasks.o(.bss.pxDelayedTaskList)
    [Anonymous Symbol]                       0x20000284   Section        0  tasks.o(.bss.pxDelayedTaskList)
    pxEnd                                    0x20000288   Data           4  heap_4.o(.bss.pxEnd)
    [Anonymous Symbol]                       0x20000288   Section        0  heap_4.o(.bss.pxEnd)
    pxOverflowDelayedTaskList                0x2000028c   Data           4  tasks.o(.bss.pxOverflowDelayedTaskList)
    [Anonymous Symbol]                       0x2000028c   Section        0  tasks.o(.bss.pxOverflowDelayedTaskList)
    pxOverflowTimerList                      0x20000290   Data           4  timers.o(.bss.pxOverflowTimerList)
    [Anonymous Symbol]                       0x20000290   Section        0  timers.o(.bss.pxOverflowTimerList)
    pxReadyTasksLists                        0x20000294   Data        1120  tasks.o(.bss.pxReadyTasksLists)
    [Anonymous Symbol]                       0x20000294   Section        0  tasks.o(.bss.pxReadyTasksLists)
    ucHeap                                   0x200006f4   Data        8192  heap_4.o(.bss.ucHeap)
    [Anonymous Symbol]                       0x200006f4   Section        0  heap_4.o(.bss.ucHeap)
    uxCurrentNumberOfTasks                   0x200026f4   Data           4  tasks.o(.bss.uxCurrentNumberOfTasks)
    [Anonymous Symbol]                       0x200026f4   Section        0  tasks.o(.bss.uxCurrentNumberOfTasks)
    uxDeletedTasksWaitingCleanUp             0x200026f8   Data           4  tasks.o(.bss.uxDeletedTasksWaitingCleanUp)
    [Anonymous Symbol]                       0x200026f8   Section        0  tasks.o(.bss.uxDeletedTasksWaitingCleanUp)
    uxSchedulerSuspended                     0x200026fc   Data           4  tasks.o(.bss.uxSchedulerSuspended)
    [Anonymous Symbol]                       0x200026fc   Section        0  tasks.o(.bss.uxSchedulerSuspended)
    uxTaskNumber                             0x20002700   Data           4  tasks.o(.bss.uxTaskNumber)
    [Anonymous Symbol]                       0x20002700   Section        0  tasks.o(.bss.uxTaskNumber)
    uxTopReadyPriority                       0x20002704   Data           4  tasks.o(.bss.uxTopReadyPriority)
    [Anonymous Symbol]                       0x20002704   Section        0  tasks.o(.bss.uxTopReadyPriority)
    vApplicationGetIdleTaskMemory.Idle_Stack 0x20002708   Data         512  cmsis_os2.o(.bss.vApplicationGetIdleTaskMemory.Idle_Stack)
    [Anonymous Symbol]                       0x20002708   Section        0  cmsis_os2.o(.bss.vApplicationGetIdleTaskMemory.Idle_Stack)
    vApplicationGetIdleTaskMemory.Idle_TCB   0x20002908   Data          92  cmsis_os2.o(.bss.vApplicationGetIdleTaskMemory.Idle_TCB)
    [Anonymous Symbol]                       0x20002908   Section        0  cmsis_os2.o(.bss.vApplicationGetIdleTaskMemory.Idle_TCB)
    vApplicationGetTimerTaskMemory.Timer_Stack 0x20002964   Data         320  cmsis_os2.o(.bss.vApplicationGetTimerTaskMemory.Timer_Stack)
    [Anonymous Symbol]                       0x20002964   Section        0  cmsis_os2.o(.bss.vApplicationGetTimerTaskMemory.Timer_Stack)
    vApplicationGetTimerTaskMemory.Timer_TCB 0x20002aa4   Data          92  cmsis_os2.o(.bss.vApplicationGetTimerTaskMemory.Timer_TCB)
    [Anonymous Symbol]                       0x20002aa4   Section        0  cmsis_os2.o(.bss.vApplicationGetTimerTaskMemory.Timer_TCB)
    xActiveTimerList1                        0x20002b00   Data          20  timers.o(.bss.xActiveTimerList1)
    [Anonymous Symbol]                       0x20002b00   Section        0  timers.o(.bss.xActiveTimerList1)
    xActiveTimerList2                        0x20002b14   Data          20  timers.o(.bss.xActiveTimerList2)
    [Anonymous Symbol]                       0x20002b14   Section        0  timers.o(.bss.xActiveTimerList2)
    xBlockAllocatedBit                       0x20002b28   Data           4  heap_4.o(.bss.xBlockAllocatedBit)
    [Anonymous Symbol]                       0x20002b28   Section        0  heap_4.o(.bss.xBlockAllocatedBit)
    xDelayedTaskList1                        0x20002b2c   Data          20  tasks.o(.bss.xDelayedTaskList1)
    [Anonymous Symbol]                       0x20002b2c   Section        0  tasks.o(.bss.xDelayedTaskList1)
    xDelayedTaskList2                        0x20002b40   Data          20  tasks.o(.bss.xDelayedTaskList2)
    [Anonymous Symbol]                       0x20002b40   Section        0  tasks.o(.bss.xDelayedTaskList2)
    xFreeBytesRemaining                      0x20002b54   Data           4  heap_4.o(.bss.xFreeBytesRemaining)
    [Anonymous Symbol]                       0x20002b54   Section        0  heap_4.o(.bss.xFreeBytesRemaining)
    xIdleTaskHandle                          0x20002b58   Data           4  tasks.o(.bss.xIdleTaskHandle)
    [Anonymous Symbol]                       0x20002b58   Section        0  tasks.o(.bss.xIdleTaskHandle)
    xMinimumEverFreeBytesRemaining           0x20002b5c   Data           4  heap_4.o(.bss.xMinimumEverFreeBytesRemaining)
    [Anonymous Symbol]                       0x20002b5c   Section        0  heap_4.o(.bss.xMinimumEverFreeBytesRemaining)
    xNextTaskUnblockTime                     0x20002b60   Data           4  tasks.o(.bss.xNextTaskUnblockTime)
    [Anonymous Symbol]                       0x20002b60   Section        0  tasks.o(.bss.xNextTaskUnblockTime)
    xNumOfOverflows                          0x20002b64   Data           4  tasks.o(.bss.xNumOfOverflows)
    [Anonymous Symbol]                       0x20002b64   Section        0  tasks.o(.bss.xNumOfOverflows)
    xNumberOfSuccessfulAllocations           0x20002b68   Data           4  heap_4.o(.bss.xNumberOfSuccessfulAllocations)
    [Anonymous Symbol]                       0x20002b68   Section        0  heap_4.o(.bss.xNumberOfSuccessfulAllocations)
    xNumberOfSuccessfulFrees                 0x20002b6c   Data           4  heap_4.o(.bss.xNumberOfSuccessfulFrees)
    [Anonymous Symbol]                       0x20002b6c   Section        0  heap_4.o(.bss.xNumberOfSuccessfulFrees)
    xPendedTicks                             0x20002b70   Data           4  tasks.o(.bss.xPendedTicks)
    [Anonymous Symbol]                       0x20002b70   Section        0  tasks.o(.bss.xPendedTicks)
    xPendingReadyList                        0x20002b74   Data          20  tasks.o(.bss.xPendingReadyList)
    [Anonymous Symbol]                       0x20002b74   Section        0  tasks.o(.bss.xPendingReadyList)
    xSchedulerRunning                        0x20002b88   Data           4  tasks.o(.bss.xSchedulerRunning)
    [Anonymous Symbol]                       0x20002b88   Section        0  tasks.o(.bss.xSchedulerRunning)
    xStart                                   0x20002b8c   Data           8  heap_4.o(.bss.xStart)
    [Anonymous Symbol]                       0x20002b8c   Section        0  heap_4.o(.bss.xStart)
    xSuspendedTaskList                       0x20002b94   Data          20  tasks.o(.bss.xSuspendedTaskList)
    [Anonymous Symbol]                       0x20002b94   Section        0  tasks.o(.bss.xSuspendedTaskList)
    xTasksWaitingTermination                 0x20002ba8   Data          20  tasks.o(.bss.xTasksWaitingTermination)
    [Anonymous Symbol]                       0x20002ba8   Section        0  tasks.o(.bss.xTasksWaitingTermination)
    xTickCount                               0x20002bbc   Data           4  tasks.o(.bss.xTickCount)
    [Anonymous Symbol]                       0x20002bbc   Section        0  tasks.o(.bss.xTickCount)
    xTimerQueue                              0x20002bc0   Data           4  timers.o(.bss.xTimerQueue)
    [Anonymous Symbol]                       0x20002bc0   Section        0  timers.o(.bss.xTimerQueue)
    xTimerTaskHandle                         0x20002bc4   Data           4  timers.o(.bss.xTimerTaskHandle)
    [Anonymous Symbol]                       0x20002bc4   Section        0  timers.o(.bss.xTimerTaskHandle)
    xYieldPending                            0x20002bc8   Data           4  tasks.o(.bss.xYieldPending)
    [Anonymous Symbol]                       0x20002bc8   Section        0  tasks.o(.bss.xYieldPending)
    HEAP                                     0x20002bd0   Section     8192  startup_stm32f429xx.o(HEAP)
    STACK                                    0x20004bd0   Section     1024  startup_stm32f429xx.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$E$P$D$K$B$S$7EM$VFPi3$EXTD16$VFPS$VFMA$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OSPACE$ROPI$EBA8$MICROLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __alloca_longjmp                          - Undefined Weak Reference
    __alloca_setjmp                           - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __decompress                              - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _microlib_exit                            - Undefined Weak Reference
    __Vectors_Size                           0x000001ac   Number         0  startup_stm32f429xx.o ABSOLUTE
    __Vectors                                0x08000000   Data           4  startup_stm32f429xx.o(RESET)
    __Vectors_End                            0x080001ac   Data           0  startup_stm32f429xx.o(RESET)
    __main                                   0x080001ad   Thumb Code     0  entry.o(.ARM.Collect$$$$00000000)
    _main_stk                                0x080001ad   Thumb Code     0  entry2.o(.ARM.Collect$$$$00000001)
    _main_scatterload                        0x080001b1   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    __main_after_scatterload                 0x080001b5   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    _main_clock                              0x080001b5   Thumb Code     0  entry7b.o(.ARM.Collect$$$$00000008)
    _main_cpp_init                           0x080001b5   Thumb Code     0  entry8b.o(.ARM.Collect$$$$0000000A)
    _main_init                               0x080001b5   Thumb Code     0  entry9a.o(.ARM.Collect$$$$0000000B)
    __rt_final_cpp                           0x080001bd   Thumb Code     0  entry10a.o(.ARM.Collect$$$$0000000D)
    __rt_final_exit                          0x080001bd   Thumb Code     0  entry11a.o(.ARM.Collect$$$$0000000F)
    Reset_Handler                            0x080001c1   Thumb Code     8  startup_stm32f429xx.o(.text)
    NMI_Handler                              0x080001c9   Thumb Code     2  startup_stm32f429xx.o(.text)
    HardFault_Handler                        0x080001cb   Thumb Code     2  startup_stm32f429xx.o(.text)
    MemManage_Handler                        0x080001cd   Thumb Code     2  startup_stm32f429xx.o(.text)
    BusFault_Handler                         0x080001cf   Thumb Code     2  startup_stm32f429xx.o(.text)
    UsageFault_Handler                       0x080001d1   Thumb Code     2  startup_stm32f429xx.o(.text)
    DebugMon_Handler                         0x080001d5   Thumb Code     2  startup_stm32f429xx.o(.text)
    ADC_IRQHandler                           0x080001db   Thumb Code     0  startup_stm32f429xx.o(.text)
    CAN1_RX0_IRQHandler                      0x080001db   Thumb Code     0  startup_stm32f429xx.o(.text)
    CAN1_RX1_IRQHandler                      0x080001db   Thumb Code     0  startup_stm32f429xx.o(.text)
    CAN1_SCE_IRQHandler                      0x080001db   Thumb Code     0  startup_stm32f429xx.o(.text)
    CAN1_TX_IRQHandler                       0x080001db   Thumb Code     0  startup_stm32f429xx.o(.text)
    CAN2_RX0_IRQHandler                      0x080001db   Thumb Code     0  startup_stm32f429xx.o(.text)
    CAN2_RX1_IRQHandler                      0x080001db   Thumb Code     0  startup_stm32f429xx.o(.text)
    CAN2_SCE_IRQHandler                      0x080001db   Thumb Code     0  startup_stm32f429xx.o(.text)
    CAN2_TX_IRQHandler                       0x080001db   Thumb Code     0  startup_stm32f429xx.o(.text)
    DCMI_IRQHandler                          0x080001db   Thumb Code     0  startup_stm32f429xx.o(.text)
    DMA1_Stream0_IRQHandler                  0x080001db   Thumb Code     0  startup_stm32f429xx.o(.text)
    DMA1_Stream1_IRQHandler                  0x080001db   Thumb Code     0  startup_stm32f429xx.o(.text)
    DMA1_Stream2_IRQHandler                  0x080001db   Thumb Code     0  startup_stm32f429xx.o(.text)
    DMA1_Stream3_IRQHandler                  0x080001db   Thumb Code     0  startup_stm32f429xx.o(.text)
    DMA1_Stream4_IRQHandler                  0x080001db   Thumb Code     0  startup_stm32f429xx.o(.text)
    DMA1_Stream5_IRQHandler                  0x080001db   Thumb Code     0  startup_stm32f429xx.o(.text)
    DMA1_Stream6_IRQHandler                  0x080001db   Thumb Code     0  startup_stm32f429xx.o(.text)
    DMA1_Stream7_IRQHandler                  0x080001db   Thumb Code     0  startup_stm32f429xx.o(.text)
    DMA2D_IRQHandler                         0x080001db   Thumb Code     0  startup_stm32f429xx.o(.text)
    DMA2_Stream0_IRQHandler                  0x080001db   Thumb Code     0  startup_stm32f429xx.o(.text)
    DMA2_Stream1_IRQHandler                  0x080001db   Thumb Code     0  startup_stm32f429xx.o(.text)
    DMA2_Stream2_IRQHandler                  0x080001db   Thumb Code     0  startup_stm32f429xx.o(.text)
    DMA2_Stream3_IRQHandler                  0x080001db   Thumb Code     0  startup_stm32f429xx.o(.text)
    DMA2_Stream4_IRQHandler                  0x080001db   Thumb Code     0  startup_stm32f429xx.o(.text)
    DMA2_Stream5_IRQHandler                  0x080001db   Thumb Code     0  startup_stm32f429xx.o(.text)
    DMA2_Stream6_IRQHandler                  0x080001db   Thumb Code     0  startup_stm32f429xx.o(.text)
    DMA2_Stream7_IRQHandler                  0x080001db   Thumb Code     0  startup_stm32f429xx.o(.text)
    ETH_IRQHandler                           0x080001db   Thumb Code     0  startup_stm32f429xx.o(.text)
    ETH_WKUP_IRQHandler                      0x080001db   Thumb Code     0  startup_stm32f429xx.o(.text)
    EXTI0_IRQHandler                         0x080001db   Thumb Code     0  startup_stm32f429xx.o(.text)
    EXTI15_10_IRQHandler                     0x080001db   Thumb Code     0  startup_stm32f429xx.o(.text)
    EXTI1_IRQHandler                         0x080001db   Thumb Code     0  startup_stm32f429xx.o(.text)
    EXTI2_IRQHandler                         0x080001db   Thumb Code     0  startup_stm32f429xx.o(.text)
    EXTI3_IRQHandler                         0x080001db   Thumb Code     0  startup_stm32f429xx.o(.text)
    EXTI4_IRQHandler                         0x080001db   Thumb Code     0  startup_stm32f429xx.o(.text)
    EXTI9_5_IRQHandler                       0x080001db   Thumb Code     0  startup_stm32f429xx.o(.text)
    FLASH_IRQHandler                         0x080001db   Thumb Code     0  startup_stm32f429xx.o(.text)
    FMC_IRQHandler                           0x080001db   Thumb Code     0  startup_stm32f429xx.o(.text)
    FPU_IRQHandler                           0x080001db   Thumb Code     0  startup_stm32f429xx.o(.text)
    HASH_RNG_IRQHandler                      0x080001db   Thumb Code     0  startup_stm32f429xx.o(.text)
    I2C1_ER_IRQHandler                       0x080001db   Thumb Code     0  startup_stm32f429xx.o(.text)
    I2C1_EV_IRQHandler                       0x080001db   Thumb Code     0  startup_stm32f429xx.o(.text)
    I2C2_ER_IRQHandler                       0x080001db   Thumb Code     0  startup_stm32f429xx.o(.text)
    I2C2_EV_IRQHandler                       0x080001db   Thumb Code     0  startup_stm32f429xx.o(.text)
    I2C3_ER_IRQHandler                       0x080001db   Thumb Code     0  startup_stm32f429xx.o(.text)
    I2C3_EV_IRQHandler                       0x080001db   Thumb Code     0  startup_stm32f429xx.o(.text)
    LTDC_ER_IRQHandler                       0x080001db   Thumb Code     0  startup_stm32f429xx.o(.text)
    LTDC_IRQHandler                          0x080001db   Thumb Code     0  startup_stm32f429xx.o(.text)
    OTG_FS_IRQHandler                        0x080001db   Thumb Code     0  startup_stm32f429xx.o(.text)
    OTG_FS_WKUP_IRQHandler                   0x080001db   Thumb Code     0  startup_stm32f429xx.o(.text)
    OTG_HS_EP1_IN_IRQHandler                 0x080001db   Thumb Code     0  startup_stm32f429xx.o(.text)
    OTG_HS_EP1_OUT_IRQHandler                0x080001db   Thumb Code     0  startup_stm32f429xx.o(.text)
    OTG_HS_IRQHandler                        0x080001db   Thumb Code     0  startup_stm32f429xx.o(.text)
    OTG_HS_WKUP_IRQHandler                   0x080001db   Thumb Code     0  startup_stm32f429xx.o(.text)
    PVD_IRQHandler                           0x080001db   Thumb Code     0  startup_stm32f429xx.o(.text)
    RCC_IRQHandler                           0x080001db   Thumb Code     0  startup_stm32f429xx.o(.text)
    RTC_Alarm_IRQHandler                     0x080001db   Thumb Code     0  startup_stm32f429xx.o(.text)
    RTC_WKUP_IRQHandler                      0x080001db   Thumb Code     0  startup_stm32f429xx.o(.text)
    SAI1_IRQHandler                          0x080001db   Thumb Code     0  startup_stm32f429xx.o(.text)
    SDIO_IRQHandler                          0x080001db   Thumb Code     0  startup_stm32f429xx.o(.text)
    SPI1_IRQHandler                          0x080001db   Thumb Code     0  startup_stm32f429xx.o(.text)
    SPI2_IRQHandler                          0x080001db   Thumb Code     0  startup_stm32f429xx.o(.text)
    SPI3_IRQHandler                          0x080001db   Thumb Code     0  startup_stm32f429xx.o(.text)
    SPI4_IRQHandler                          0x080001db   Thumb Code     0  startup_stm32f429xx.o(.text)
    SPI5_IRQHandler                          0x080001db   Thumb Code     0  startup_stm32f429xx.o(.text)
    SPI6_IRQHandler                          0x080001db   Thumb Code     0  startup_stm32f429xx.o(.text)
    TAMP_STAMP_IRQHandler                    0x080001db   Thumb Code     0  startup_stm32f429xx.o(.text)
    TIM1_BRK_TIM9_IRQHandler                 0x080001db   Thumb Code     0  startup_stm32f429xx.o(.text)
    TIM1_CC_IRQHandler                       0x080001db   Thumb Code     0  startup_stm32f429xx.o(.text)
    TIM1_TRG_COM_TIM11_IRQHandler            0x080001db   Thumb Code     0  startup_stm32f429xx.o(.text)
    TIM1_UP_TIM10_IRQHandler                 0x080001db   Thumb Code     0  startup_stm32f429xx.o(.text)
    TIM2_IRQHandler                          0x080001db   Thumb Code     0  startup_stm32f429xx.o(.text)
    TIM3_IRQHandler                          0x080001db   Thumb Code     0  startup_stm32f429xx.o(.text)
    TIM4_IRQHandler                          0x080001db   Thumb Code     0  startup_stm32f429xx.o(.text)
    TIM5_IRQHandler                          0x080001db   Thumb Code     0  startup_stm32f429xx.o(.text)
    TIM6_DAC_IRQHandler                      0x080001db   Thumb Code     0  startup_stm32f429xx.o(.text)
    TIM7_IRQHandler                          0x080001db   Thumb Code     0  startup_stm32f429xx.o(.text)
    TIM8_BRK_TIM12_IRQHandler                0x080001db   Thumb Code     0  startup_stm32f429xx.o(.text)
    TIM8_CC_IRQHandler                       0x080001db   Thumb Code     0  startup_stm32f429xx.o(.text)
    TIM8_TRG_COM_TIM14_IRQHandler            0x080001db   Thumb Code     0  startup_stm32f429xx.o(.text)
    TIM8_UP_TIM13_IRQHandler                 0x080001db   Thumb Code     0  startup_stm32f429xx.o(.text)
    UART4_IRQHandler                         0x080001db   Thumb Code     0  startup_stm32f429xx.o(.text)
    UART5_IRQHandler                         0x080001db   Thumb Code     0  startup_stm32f429xx.o(.text)
    UART7_IRQHandler                         0x080001db   Thumb Code     0  startup_stm32f429xx.o(.text)
    UART8_IRQHandler                         0x080001db   Thumb Code     0  startup_stm32f429xx.o(.text)
    USART1_IRQHandler                        0x080001db   Thumb Code     0  startup_stm32f429xx.o(.text)
    USART2_IRQHandler                        0x080001db   Thumb Code     0  startup_stm32f429xx.o(.text)
    USART3_IRQHandler                        0x080001db   Thumb Code     0  startup_stm32f429xx.o(.text)
    USART6_IRQHandler                        0x080001db   Thumb Code     0  startup_stm32f429xx.o(.text)
    WWDG_IRQHandler                          0x080001db   Thumb Code     0  startup_stm32f429xx.o(.text)
    __aeabi_uldivmod                         0x080001e5   Thumb Code    98  uldiv.o(.text)
    toupper                                  0x08000247   Thumb Code    12  toupper.o(.text)
    __aeabi_memcpy                           0x08000253   Thumb Code    36  memcpya.o(.text)
    __aeabi_memcpy4                          0x08000253   Thumb Code     0  memcpya.o(.text)
    __aeabi_memcpy8                          0x08000253   Thumb Code     0  memcpya.o(.text)
    __aeabi_memset                           0x08000277   Thumb Code    14  memseta.o(.text)
    __aeabi_memset4                          0x08000277   Thumb Code     0  memseta.o(.text)
    __aeabi_memset8                          0x08000277   Thumb Code     0  memseta.o(.text)
    __aeabi_memclr                           0x08000285   Thumb Code     4  memseta.o(.text)
    __aeabi_memclr4                          0x08000285   Thumb Code     0  memseta.o(.text)
    __aeabi_memclr8                          0x08000285   Thumb Code     0  memseta.o(.text)
    _memset$wrapper                          0x08000289   Thumb Code    18  memseta.o(.text)
    strlen                                   0x0800029b   Thumb Code    14  strlen.o(.text)
    strcmp                                   0x080002a9   Thumb Code    28  strcmp.o(.text)
    strcpy                                   0x080002c5   Thumb Code    18  strcpy.o(.text)
    __aeabi_dadd                             0x080002d7   Thumb Code   322  dadd.o(.text)
    __aeabi_dsub                             0x08000419   Thumb Code     6  dadd.o(.text)
    __aeabi_drsub                            0x0800041f   Thumb Code     6  dadd.o(.text)
    __aeabi_ddiv                             0x08000425   Thumb Code   222  ddiv.o(.text)
    __aeabi_ui2d                             0x08000503   Thumb Code    26  dfltui.o(.text)
    setjmp                                   0x0800051d   Thumb Code    26  setjmp.o(.text)
    longjmp                                  0x08000537   Thumb Code    36  setjmp.o(.text)
    __aeabi_uidiv                            0x0800055b   Thumb Code     0  uidiv.o(.text)
    __aeabi_uidivmod                         0x0800055b   Thumb Code    44  uidiv.o(.text)
    __aeabi_llsl                             0x08000587   Thumb Code    30  llshl.o(.text)
    _ll_shift_l                              0x08000587   Thumb Code     0  llshl.o(.text)
    __aeabi_llsr                             0x080005a5   Thumb Code    32  llushr.o(.text)
    _ll_ushift_r                             0x080005a5   Thumb Code     0  llushr.o(.text)
    __aeabi_lasr                             0x080005c5   Thumb Code    36  llsshr.o(.text)
    _ll_sshift_r                             0x080005c5   Thumb Code     0  llsshr.o(.text)
    __I$use$fp                               0x080005e9   Thumb Code     0  iusefp.o(.text)
    _double_round                            0x080005e9   Thumb Code    30  depilogue.o(.text)
    _double_epilogue                         0x08000607   Thumb Code   156  depilogue.o(.text)
    __aeabi_dmul                             0x080006a3   Thumb Code   228  dmul.o(.text)
    __aeabi_d2ulz                            0x08000787   Thumb Code    48  dfixul.o(.text)
    __aeabi_cdrcmple                         0x080007b9   Thumb Code    48  cdrcmple.o(.text)
    __scatterload                            0x080007e9   Thumb Code    28  init.o(.text)
    __scatterload_rt2                        0x080007e9   Thumb Code     0  init.o(.text)
    CU_add_suite                             0x0800080d   Thumb Code    32  testdb.o(.text.CU_add_suite)
    CU_add_suite_with_setup_and_teardown     0x0800082d   Thumb Code   196  testdb.o(.text.CU_add_suite_with_setup_and_teardown)
    CU_add_test                              0x080008f1   Thumb Code   210  testdb.o(.text.CU_add_test)
    CU_assertImplementation                  0x080009c5   Thumb Code   238  testrun.o(.text.CU_assertImplementation)
    CU_basic_run_tests                       0x08000ab5   Thumb Code   100  basic.o(.text.CU_basic_run_tests)
    CU_basic_set_mode                        0x08000b19   Thumb Code    24  basic.o(.text.CU_basic_set_mode)
    CU_basic_show_failures                   0x08000b31   Thumb Code   144  basic.o(.text.CU_basic_show_failures)
    CU_cleanup_registry                      0x08000bc1   Thumb Code    58  testdb.o(.text.CU_cleanup_registry)
    CU_clear_previous_results                0x08000bfd   Thumb Code    24  testrun.o(.text.CU_clear_previous_results)
    CU_compare_strings                       0x08000c15   Thumb Code   164  util.o(.text.CU_compare_strings)
    CU_create_new_registry                   0x08000cb9   Thumb Code    40  testdb.o(.text.CU_create_new_registry)
    CU_destroy_existing_registry             0x08000ce1   Thumb Code    74  testdb.o(.text.CU_destroy_existing_registry)
    CU_get_elapsed_time                      0x08000d31   Thumb Code   136  testrun.o(.text.CU_get_elapsed_time)
    CU_get_error                             0x08000db9   Thumb Code    12  cuerror.o(.text.CU_get_error)
    CU_get_error_action                      0x08000dc5   Thumb Code    12  cuerror.o(.text.CU_get_error_action)
    CU_get_failure_list                      0x08000dd1   Thumb Code    12  testrun.o(.text.CU_get_failure_list)
    CU_get_registry                          0x08000ddd   Thumb Code    12  testdb.o(.text.CU_get_registry)
    CU_get_run_results_string                0x08000de9   Thumb Code  3764  testrun.o(.text.CU_get_run_results_string)
    CU_initialize_registry                   0x08001c9d   Thumb Code   108  testdb.o(.text.CU_initialize_registry)
    CU_is_test_running                       0x08001d09   Thumb Code    12  testrun.o(.text.CU_is_test_running)
    CU_number_width                          0x08001d15   Thumb Code    44  util.o(.text.CU_number_width)
    CU_print_run_results                     0x08001d41   Thumb Code    94  testrun.o(.text.CU_print_run_results)
    CU_run_all_tests                         0x08001da1   Thumb Code   360  testrun.o(.text.CU_run_all_tests)
    CU_set_all_test_complete_handler         0x08001f09   Thumb Code    20  testrun.o(.text.CU_set_all_test_complete_handler)
    CU_set_error                             0x08001f1d   Thumb Code    92  cuerror.o(.text.CU_set_error)
    CU_set_registry                          0x08001f79   Thumb Code    74  testdb.o(.text.CU_set_registry)
    CU_set_suite_cleanup_failure_handler     0x08001fc5   Thumb Code    20  testrun.o(.text.CU_set_suite_cleanup_failure_handler)
    CU_set_suite_init_failure_handler        0x08001fd9   Thumb Code    20  testrun.o(.text.CU_set_suite_init_failure_handler)
    CU_set_test_complete_handler             0x08001fed   Thumb Code    20  testrun.o(.text.CU_set_test_complete_handler)
    CU_set_test_start_handler                0x08002001   Thumb Code    20  testrun.o(.text.CU_set_test_start_handler)
    ITM_SendChar                             0x08002015   Thumb Code    66  retarget_io.o(.text.ITM_SendChar)
    PendSV_Handler                           0x08002061   Thumb Code   100  port.o(.text.PendSV_Handler)
    SVC_Handler                              0x080020d1   Thumb Code    36  port.o(.text.SVC_Handler)
    SysTick_Handler                          0x080020f5   Thumb Code    30  cmsis_os2.o(.text.SysTick_Handler)
    SystemInit                               0x08002115   Thumb Code    18  system_stm32f4xx.o(.text.SystemInit)
    TEST_Mutex()                             0x08002129   Thumb Code   160  test_06_mutex.o(.text._Z10TEST_Mutexv)
    taskOSAPI_TEST(void*)                    0x080021c9   Thumb Code   448  test_osapi.o(.text._Z14taskOSAPI_TESTPv)
    TEST_ThreadJoin()                        0x08002389   Thumb Code   360  test_02_thread_join.o(.text._Z15TEST_ThreadJoinv)
    TEST_ThreadName()                        0x080024f1   Thumb Code   104  test_00_thread_name.o(.text._Z15TEST_ThreadNamev)
    TEST_ThreadDelay()                       0x08002559   Thumb Code   166  test_05_thread_delay.o(.text._Z16TEST_ThreadDelayv)
    TEST_MortalThread()                      0x08002601   Thumb Code   354  test_08_mortal_thread.o(.text._Z17TEST_MortalThreadv)
    TEST_RecursiveMutex()                    0x08002765   Thumb Code   212  test_07_recursive_mutex.o(.text._Z19TEST_RecursiveMutexv)
    TEST_ThreadCreation()                    0x08002839   Thumb Code   154  test_01_thread_creation.o(.text._Z19TEST_ThreadCreationv)
    TEST_ThreadPriority()                    0x080028d5   Thumb Code   166  test_04_thread_priority.o(.text._Z19TEST_ThreadPriorityv)
    TEST_ThreadStackSize()                   0x0800297d   Thumb Code   372  test_14_thread_stack_size.o(.text._Z20TEST_ThreadStackSizev)
    TEST_ThreadRunDetailed()                 0x08002af1   Thumb Code   386  test_11_thread_run_detailed.o(.text._Z22TEST_ThreadRunDetailedv)
    TEST_ThreadStateChecking()               0x08002c75   Thumb Code   558  test_12_thread_state.o(.text._Z24TEST_ThreadStateCheckingv)
    TEST_ThreadSuspendResume()               0x08002ea5   Thumb Code   404  test_03_thread_suspend_resume.o(.text._Z24TEST_ThreadSuspendResumev)
    TEST_ThreadPriorityChange()              0x08003039   Thumb Code   450  test_10_thread_priority_change.o(.text._Z25TEST_ThreadPriorityChangev)
    TEST_ThreadSuspendInactive()             0x080031fd   Thumb Code   172  test_13_thread_suspend_inactive.o(.text._Z26TEST_ThreadSuspendInactivev)
    TestThread0::job()                       0x080032a9   Thumb Code     8  test_00_thread_name.o(.text._ZN11TestThread03jobEv)
    TestThread0::TestThread0__sub_object()   0x080032b1   Thumb Code    54  test_00_thread_name.o(.text._ZN11TestThread0C2Ev)
    TestThread0::~TestThread0__deallocating() 0x080032e9   Thumb Code    24  test_00_thread_name.o(.text._ZN11TestThread0D0Ev)
    TestThread0::~TestThread0__sub_object()  0x08003301   Thumb Code    20  test_00_thread_name.o(.text._ZN11TestThread0D2Ev)
    TestThread1::job()                       0x08003315   Thumb Code    20  test_01_thread_creation.o(.text._ZN11TestThread13jobEv)
    TestThread1::TestThread1__sub_object()   0x08003329   Thumb Code    52  test_01_thread_creation.o(.text._ZN11TestThread1C2Ev)
    TestThread1::~TestThread1__deallocating() 0x0800335d   Thumb Code    24  test_01_thread_creation.o(.text._ZN11TestThread1D0Ev)
    TestThread1::~TestThread1__sub_object()  0x08003375   Thumb Code    20  test_01_thread_creation.o(.text._ZN11TestThread1D2Ev)
    TestThread2::job()                       0x08003389   Thumb Code   112  test_02_thread_join.o(.text._ZN11TestThread23jobEv)
    TestThread2::TestThread2__sub_object()   0x080033f9   Thumb Code    60  test_02_thread_join.o(.text._ZN11TestThread2C2Ev)
    TestThread2::~TestThread2__deallocating() 0x08003435   Thumb Code    24  test_02_thread_join.o(.text._ZN11TestThread2D0Ev)
    TestThread2::~TestThread2__sub_object()  0x0800344d   Thumb Code    20  test_02_thread_join.o(.text._ZN11TestThread2D2Ev)
    TestThread3::job()                       0x08003461   Thumb Code    66  test_03_thread_suspend_resume.o(.text._ZN11TestThread33jobEv)
    TestThread3::TestThread3__sub_object()   0x080034a5   Thumb Code    60  test_03_thread_suspend_resume.o(.text._ZN11TestThread3C2Ev)
    TestThread3::~TestThread3__deallocating() 0x080034e1   Thumb Code    24  test_03_thread_suspend_resume.o(.text._ZN11TestThread3D0Ev)
    TestThread3::~TestThread3__sub_object()  0x080034f9   Thumb Code    20  test_03_thread_suspend_resume.o(.text._ZN11TestThread3D2Ev)
    TestThread4::job()                       0x0800350d   Thumb Code    42  test_04_thread_priority.o(.text._ZN11TestThread43jobEv)
    TestThread4::TestThread4__sub_object()   0x08003539   Thumb Code    60  test_04_thread_priority.o(.text._ZN11TestThread4C2Ev)
    TestThread4::~TestThread4__deallocating() 0x08003575   Thumb Code    24  test_04_thread_priority.o(.text._ZN11TestThread4D0Ev)
    TestThread4::~TestThread4__sub_object()  0x0800358d   Thumb Code    20  test_04_thread_priority.o(.text._ZN11TestThread4D2Ev)
    TestThread5::job()                       0x080035a1   Thumb Code    22  test_05_thread_delay.o(.text._ZN11TestThread53jobEv)
    TestThread5::TestThread5__sub_object()   0x080035b9   Thumb Code    60  test_05_thread_delay.o(.text._ZN11TestThread5C2Ev)
    TestThread5::~TestThread5__deallocating() 0x080035f5   Thumb Code    24  test_05_thread_delay.o(.text._ZN11TestThread5D0Ev)
    TestThread5::~TestThread5__sub_object()  0x0800360d   Thumb Code    20  test_05_thread_delay.o(.text._ZN11TestThread5D2Ev)
    TestThread11::job()                      0x08003621   Thumb Code    54  test_11_thread_run_detailed.o(.text._ZN12TestThread113jobEv)
    TestThread11::TestThread11__sub_object() 0x08003659   Thumb Code    52  test_11_thread_run_detailed.o(.text._ZN12TestThread11C2Ev)
    TestThread11::~TestThread11__deallocating() 0x0800368d   Thumb Code    24  test_11_thread_run_detailed.o(.text._ZN12TestThread11D0Ev)
    TestThread11::~TestThread11__sub_object() 0x080036a5   Thumb Code    20  test_11_thread_run_detailed.o(.text._ZN12TestThread11D2Ev)
    TestThread12::job()                      0x080036b9   Thumb Code    58  test_12_thread_state.o(.text._ZN12TestThread123jobEv)
    TestThread12::TestThread12__sub_object() 0x080036f5   Thumb Code    52  test_12_thread_state.o(.text._ZN12TestThread12C2Ev)
    TestThread12::~TestThread12__deallocating() 0x08003729   Thumb Code    24  test_12_thread_state.o(.text._ZN12TestThread12D0Ev)
    TestThread12::~TestThread12__sub_object() 0x08003741   Thumb Code    20  test_12_thread_state.o(.text._ZN12TestThread12D2Ev)
    TestThread13::job()                      0x08003755   Thumb Code     8  test_13_thread_suspend_inactive.o(.text._ZN12TestThread133jobEv)
    TestThread13::TestThread13__sub_object() 0x0800375d   Thumb Code    52  test_13_thread_suspend_inactive.o(.text._ZN12TestThread13C2Ev)
    TestThread13::~TestThread13__deallocating() 0x08003791   Thumb Code    24  test_13_thread_suspend_inactive.o(.text._ZN12TestThread13D0Ev)
    TestThread13::~TestThread13__sub_object() 0x080037a9   Thumb Code    20  test_13_thread_suspend_inactive.o(.text._ZN12TestThread13D2Ev)
    TestThread14::job()                      0x080037bd   Thumb Code    42  test_14_thread_stack_size.o(.text._ZN12TestThread143jobEv)
    TestThread14::TestThread14__sub_object() 0x080037e9   Thumb Code    52  test_14_thread_stack_size.o(.text._ZN12TestThread14C2Ev)
    TestThread14::~TestThread14__deallocating() 0x0800381d   Thumb Code    24  test_14_thread_stack_size.o(.text._ZN12TestThread14D0Ev)
    TestThread14::~TestThread14__sub_object() 0x08003835   Thumb Code    20  test_14_thread_stack_size.o(.text._ZN12TestThread14D2Ev)
    TestThread10A::job()                     0x08003849   Thumb Code   104  test_10_thread_priority_change.o(.text._ZN13TestThread10A3jobEv)
    TestThread10A::TestThread10A__sub_object() 0x080038b1   Thumb Code    60  test_10_thread_priority_change.o(.text._ZN13TestThread10AC2Ev)
    TestThread10A::~TestThread10A__deallocating() 0x080038ed   Thumb Code    24  test_10_thread_priority_change.o(.text._ZN13TestThread10AD0Ev)
    TestThread10A::~TestThread10A__sub_object() 0x08003905   Thumb Code    20  test_10_thread_priority_change.o(.text._ZN13TestThread10AD2Ev)
    TestThread10B::job()                     0x08003919   Thumb Code   104  test_10_thread_priority_change.o(.text._ZN13TestThread10B3jobEv)
    TestThread10B::TestThread10B__sub_object() 0x08003981   Thumb Code    60  test_10_thread_priority_change.o(.text._ZN13TestThread10BC2Ev)
    TestThread10B::~TestThread10B__deallocating() 0x080039bd   Thumb Code    24  test_10_thread_priority_change.o(.text._ZN13TestThread10BD0Ev)
    TestThread10B::~TestThread10B__sub_object() 0x080039d5   Thumb Code    20  test_10_thread_priority_change.o(.text._ZN13TestThread10BD2Ev)
    MyMortalThread::end()                    0x080039e9   Thumb Code    20  test_08_mortal_thread.o(.text._ZN14MyMortalThread3endEv)
    MyMortalThread::loop()                   0x080039fd   Thumb Code    32  test_08_mortal_thread.o(.text._ZN14MyMortalThread4loopEv)
    MyMortalThread::begin()                  0x08003a1d   Thumb Code    20  test_08_mortal_thread.o(.text._ZN14MyMortalThread5beginEv)
    MyMortalThread::MyMortalThread__sub_object() 0x08003a31   Thumb Code    46  test_08_mortal_thread.o(.text._ZN14MyMortalThreadC2Ev)
    MyMortalThread::~MyMortalThread__deallocating() 0x08003a61   Thumb Code    24  test_08_mortal_thread.o(.text._ZN14MyMortalThreadD0Ev)
    MyMortalThread::~MyMortalThread__sub_object() 0x08003a79   Thumb Code    20  test_08_mortal_thread.o(.text._ZN14MyMortalThreadD2Ev)
    osapi::MortalThread::job()               0x08003a8d   Thumb Code    50  test_08_mortal_thread.o(.text._ZN5osapi12MortalThread3jobEv)
    osapi::MortalThread::kill()              0x08003ac1   Thumb Code    14  test_08_mortal_thread.o(.text._ZN5osapi12MortalThread4killEv)
    osapi::MortalThread::MortalThread__sub_object(int, unsigned int, char const*) 0x08003ad1   Thumb Code    56  test_08_mortal_thread.o(.text._ZN5osapi12MortalThreadC2EijPKc)
    osapi::MortalThread::~MortalThread__deallocating() 0x08003b09   Thumb Code     6  test_08_mortal_thread.o(.text._ZN5osapi12MortalThreadD0Ev)
    osapi::MortalThread::~MortalThread__sub_object() 0x08003b11   Thumb Code    32  test_08_mortal_thread.o(.text._ZN5osapi12MortalThreadD2Ev)
    osapi::getSystemTime()                   0x08003b31   Thumb Code     8  osapi_freertos.o(.text._ZN5osapi13getSystemTimeEv)
    osapi::RecursiveMutex::lock(unsigned int) 0x08003b39   Thumb Code    60  test_07_recursive_mutex.o(.text._ZN5osapi14RecursiveMutex4lockEj)
    osapi::RecursiveMutex::unlock()          0x08003b75   Thumb Code    42  test_07_recursive_mutex.o(.text._ZN5osapi14RecursiveMutex6unlockEv)
    osapi::ThreadInterface::ThreadInterface__sub_object() 0x08003ba1   Thumb Code    22  test_00_thread_name.o(.text._ZN5osapi15ThreadInterfaceC2Ev)
    osapi::ThreadInterface::~ThreadInterface__deallocating() 0x08003bb9   Thumb Code     6  test_00_thread_name.o(.text._ZN5osapi15ThreadInterfaceD0Ev)
    osapi::ThreadInterface::~ThreadInterface__sub_object() 0x08003bc1   Thumb Code    10  test_00_thread_name.o(.text._ZN5osapi15ThreadInterfaceD2Ev)
    osapi::Mutex::lock(unsigned int)         0x08003bcd   Thumb Code    46  test_06_mutex.o(.text._ZN5osapi5Mutex4lockEj)
    osapi::Mutex::unlock()                   0x08003bfd   Thumb Code    14  test_06_mutex.o(.text._ZN5osapi5Mutex6unlockEv)
    osapi::Thread::isJoinable()              0x08003c0d   Thumb Code    18  test_00_thread_name.o(.text._ZN5osapi6Thread10isJoinableEv)
    osapi::Thread::getPriority()             0x08003c21   Thumb Code    18  test_00_thread_name.o(.text._ZN5osapi6Thread11getPriorityEv)
    osapi::Thread::setPriority(int)          0x08003c35   Thumb Code    56  test_00_thread_name.o(.text._ZN5osapi6Thread11setPriorityEi)
    osapi::Thread::threadFunction(void*)     0x08003c6d   Thumb Code    60  test_00_thread_name.o(.text._ZN5osapi6Thread14threadFunctionEPv)
    osapi::Thread::getUsedStackSize()        0x08003ca9   Thumb Code    50  test_00_thread_name.o(.text._ZN5osapi6Thread16getUsedStackSizeEv)
    osapi::Thread::getTotalStackSize()       0x08003cdd   Thumb Code    12  test_00_thread_name.o(.text._ZN5osapi6Thread17getTotalStackSizeEv)
    osapi::Thread::run()                     0x08003ce9   Thumb Code    94  test_00_thread_name.o(.text._ZN5osapi6Thread3runEv)
    osapi::Thread::join(unsigned int)        0x08003d49   Thumb Code    70  test_00_thread_name.o(.text._ZN5osapi6Thread4joinEj)
    osapi::Thread::sleep(unsigned int)       0x08003d91   Thumb Code    18  test_00_thread_name.o(.text._ZN5osapi6Thread5sleepEj)
    osapi::Thread::resume()                  0x08003da5   Thumb Code    54  test_00_thread_name.o(.text._ZN5osapi6Thread6resumeEv)
    osapi::Thread::getName()                 0x08003ddd   Thumb Code    12  test_00_thread_name.o(.text._ZN5osapi6Thread7getNameEv)
    osapi::Thread::suspend()                 0x08003de9   Thumb Code    70  test_00_thread_name.o(.text._ZN5osapi6Thread7suspendEv)
    osapi::Thread::getState()                0x08003e31   Thumb Code   152  test_00_thread_name.o(.text._ZN5osapi6Thread8getStateEv)
    osapi::Thread::isRunning()               0x08003ec9   Thumb Code   104  test_00_thread_name.o(.text._ZN5osapi6Thread9isRunningEv)
    osapi::Thread::Thread__sub_object(int, unsigned int, osapi::Joinable, char const*) 0x08003f31   Thumb Code   104  test_00_thread_name.o(.text._ZN5osapi6ThreadC2EijNS_8JoinableEPKc)
    osapi::Thread::~Thread__deallocating()   0x08003f99   Thumb Code     6  test_00_thread_name.o(.text._ZN5osapi6ThreadD0Ev)
    osapi::Thread::~Thread__sub_object()     0x08003fa1   Thumb Code    20  test_00_thread_name.o(.text._ZN5osapi6ThreadD2Ev)
    operator delete(void*)                   0x08003fb5   Thumb Code     4  new.cpp.o(.text._ZdlPv)
    __aeabi_assert                           0x08003fb9   Thumb Code   188  retarget_io.o(.text.__aeabi_assert)
    __cxa_pure_virtual                       0x08004075   Thumb Code     8  cxa_virtual.cpp.o(.text.__cxa_pure_virtual)
    abort                                    0x0800409d   Thumb Code     4  retarget_io.o(.text.abort)
    abort_message                            0x080040a1   Thumb Code     4  abort_message.cpp.o(.text.abort_message)
    eTaskGetState                            0x08004a25   Thumb Code   244  tasks.o(.text.eTaskGetState)
    exit                                     0x08004b19   Thumb Code     8  main.o(.text.exit)
    fputc                                    0x08004b21   Thumb Code    48  retarget_io.o(.text.fputc)
    main                                     0x08004da9   Thumb Code    62  main.o(.text.main)
    pvPortMalloc                             0x08005c0d   Thumb Code   434  heap_4.o(.text.pvPortMalloc)
    pvTaskIncrementMutexHeldCount            0x08005dc1   Thumb Code    44  tasks.o(.text.pvTaskIncrementMutexHeldCount)
    pxPortInitialiseStack                    0x08005ded   Thumb Code    94  port.o(.text.pxPortInitialiseStack)
    uxListRemove                             0x08006525   Thumb Code    72  list.o(.text.uxListRemove)
    uxTaskGetNumberOfTasks                   0x0800656d   Thumb Code    12  tasks.o(.text.uxTaskGetNumberOfTasks)
    uxTaskGetStackHighWaterMark              0x08006579   Thumb Code    56  tasks.o(.text.uxTaskGetStackHighWaterMark)
    uxTaskPriorityGet                        0x080065b1   Thumb Code    56  tasks.o(.text.uxTaskPriorityGet)
    vApplicationGetIdleTaskMemory            0x080065e9   Thumb Code    42  cmsis_os2.o(.text.vApplicationGetIdleTaskMemory)
    vApplicationGetTimerTaskMemory           0x08006615   Thumb Code    42  cmsis_os2.o(.text.vApplicationGetTimerTaskMemory)
    vApplicationStackOverflowHook            0x08006641   Thumb Code    10  cmsis_os2.o(.text.vApplicationStackOverflowHook)
    vListInitialise                          0x0800664d   Thumb Code    46  list.o(.text.vListInitialise)
    vListInitialiseItem                      0x0800667d   Thumb Code    14  list.o(.text.vListInitialiseItem)
    vListInsert                              0x0800668d   Thumb Code   106  list.o(.text.vListInsert)
    vListInsertEnd                           0x080066f9   Thumb Code    58  list.o(.text.vListInsertEnd)
    vPortEnterCritical                       0x08006749   Thumb Code    48  port.o(.text.vPortEnterCritical)
    vPortExitCritical                        0x08006779   Thumb Code    38  port.o(.text.vPortExitCritical)
    vPortFree                                0x080067a1   Thumb Code   132  heap_4.o(.text.vPortFree)
    vPortSetupTimerInterrupt                 0x08006825   Thumb Code    68  port.o(.text.vPortSetupTimerInterrupt)
    vQueueWaitForMessageRestricted           0x08006869   Thumb Code   100  queue.o(.text.vQueueWaitForMessageRestricted)
    vTaskDelay                               0x080068cd   Thumb Code    74  tasks.o(.text.vTaskDelay)
    vTaskDelete                              0x08006919   Thumb Code   234  tasks.o(.text.vTaskDelete)
    vTaskInternalSetTimeOutState             0x08006a05   Thumb Code    36  tasks.o(.text.vTaskInternalSetTimeOutState)
    vTaskMissedYield                         0x08006a29   Thumb Code    14  tasks.o(.text.vTaskMissedYield)
    vTaskPlaceOnEventList                    0x08006a39   Thumb Code    38  tasks.o(.text.vTaskPlaceOnEventList)
    vTaskPlaceOnEventListRestricted          0x08006a61   Thumb Code    54  tasks.o(.text.vTaskPlaceOnEventListRestricted)
    vTaskPriorityDisinheritAfterTimeout      0x08006a99   Thumb Code   236  tasks.o(.text.vTaskPriorityDisinheritAfterTimeout)
    vTaskPrioritySet                         0x08006b85   Thumb Code   382  tasks.o(.text.vTaskPrioritySet)
    vTaskResume                              0x08006d05   Thumb Code   186  tasks.o(.text.vTaskResume)
    vTaskStartScheduler                      0x08006dc1   Thumb Code   204  tasks.o(.text.vTaskStartScheduler)
    vTaskSuspend                             0x08006e8d   Thumb Code   292  tasks.o(.text.vTaskSuspend)
    vTaskSuspendAll                          0x08006fb1   Thumb Code    16  tasks.o(.text.vTaskSuspendAll)
    vTaskSwitchContext                       0x08006fc1   Thumb Code   260  tasks.o(.text.vTaskSwitchContext)
    xPortStartScheduler                      0x080070c5   Thumb Code    84  port.o(.text.xPortStartScheduler)
    xPortSysTickHandler                      0x08007119   Thumb Code    60  port.o(.text.xPortSysTickHandler)
    xQueueGenericCreate                      0x08007155   Thumb Code    88  queue.o(.text.xQueueGenericCreate)
    xQueueGenericCreateStatic                0x080071ad   Thumb Code    74  queue.o(.text.xQueueGenericCreateStatic)
    xQueueGenericReset                       0x080071f9   Thumb Code   158  queue.o(.text.xQueueGenericReset)
    xQueueGenericSend                        0x08007299   Thumb Code   362  queue.o(.text.xQueueGenericSend)
    xQueueGenericSendFromISR                 0x08007405   Thumb Code   190  queue.o(.text.xQueueGenericSendFromISR)
    xQueueReceive                            0x080074c5   Thumb Code   338  queue.o(.text.xQueueReceive)
    xQueueSemaphoreTake                      0x08007619   Thumb Code   414  queue.o(.text.xQueueSemaphoreTake)
    xTaskCheckForTimeOut                     0x080077b9   Thumb Code   154  tasks.o(.text.xTaskCheckForTimeOut)
    xTaskCreate                              0x08007855   Thumb Code   158  tasks.o(.text.xTaskCreate)
    xTaskCreateStatic                        0x080078f5   Thumb Code   114  tasks.o(.text.xTaskCreateStatic)
    xTaskGetSchedulerState                   0x08007969   Thumb Code    56  tasks.o(.text.xTaskGetSchedulerState)
    xTaskGetTickCount                        0x080079a1   Thumb Code    20  tasks.o(.text.xTaskGetTickCount)
    xTaskIncrementTick                       0x080079b5   Thumb Code   414  tasks.o(.text.xTaskIncrementTick)
    xTaskPriorityDisinherit                  0x08007b55   Thumb Code   166  tasks.o(.text.xTaskPriorityDisinherit)
    xTaskPriorityInherit                     0x08007bfd   Thumb Code   270  tasks.o(.text.xTaskPriorityInherit)
    xTaskRemoveFromEventList                 0x08007d0d   Thumb Code   178  tasks.o(.text.xTaskRemoveFromEventList)
    xTaskResumeAll                           0x08007dc1   Thumb Code   354  tasks.o(.text.xTaskResumeAll)
    xTimerCreateTimerTask                    0x08007f25   Thumb Code   120  timers.o(.text.xTimerCreateTimerTask)
    xTimerGenericCommand                     0x08007f9d   Thumb Code   148  timers.o(.text.xTimerGenericCommand)
    __0fprintf                               0x08008031   Thumb Code    22  printfa.o(i.__0fprintf)
    __1fprintf                               0x08008031   Thumb Code     0  printfa.o(i.__0fprintf)
    __2fprintf                               0x08008031   Thumb Code     0  printfa.o(i.__0fprintf)
    __c89fprintf                             0x08008031   Thumb Code     0  printfa.o(i.__0fprintf)
    fprintf                                  0x08008031   Thumb Code     0  printfa.o(i.__0fprintf)
    __0printf                                0x0800804d   Thumb Code    22  printfa.o(i.__0printf)
    __1printf                                0x0800804d   Thumb Code     0  printfa.o(i.__0printf)
    __2printf                                0x0800804d   Thumb Code     0  printfa.o(i.__0printf)
    __c89printf                              0x0800804d   Thumb Code     0  printfa.o(i.__0printf)
    printf                                   0x0800804d   Thumb Code     0  printfa.o(i.__0printf)
    __0snprintf                              0x0800806d   Thumb Code    48  printfa.o(i.__0snprintf)
    __1snprintf                              0x0800806d   Thumb Code     0  printfa.o(i.__0snprintf)
    __2snprintf                              0x0800806d   Thumb Code     0  printfa.o(i.__0snprintf)
    __c89snprintf                            0x0800806d   Thumb Code     0  printfa.o(i.__0snprintf)
    snprintf                                 0x0800806d   Thumb Code     0  printfa.o(i.__0snprintf)
    __aligned_malloc                         0x080080a1   Thumb Code   142  malloca.o(i.__aligned_malloc)
    free                                     0x08008141   Thumb Code    76  malloca.o(i.__free$memalign)
    malloc                                   0x08008191   Thumb Code     6  malloca.o(i.__malloc$memalign)
    __scatterload_copy                       0x08008197   Thumb Code    14  handlers.o(i.__scatterload_copy)
    __scatterload_null                       0x080081a5   Thumb Code     2  handlers.o(i.__scatterload_null)
    __scatterload_zeroinit                   0x080081a7   Thumb Code    14  handlers.o(i.__scatterload_zeroinit)
    fputs                                    0x08008a7d   Thumb Code    24  fputs.o(i.fputs)
    vtable for TestThread0                   0x08008a94   Data          72  test_00_thread_name.o(.rodata._ZTV11TestThread0)
    vtable for TestThread1                   0x08008adc   Data          72  test_01_thread_creation.o(.rodata._ZTV11TestThread1)
    vtable for TestThread2                   0x08008b24   Data          72  test_02_thread_join.o(.rodata._ZTV11TestThread2)
    vtable for TestThread3                   0x08008b6c   Data          72  test_03_thread_suspend_resume.o(.rodata._ZTV11TestThread3)
    vtable for TestThread4                   0x08008bb4   Data          72  test_04_thread_priority.o(.rodata._ZTV11TestThread4)
    vtable for TestThread5                   0x08008bfc   Data          72  test_05_thread_delay.o(.rodata._ZTV11TestThread5)
    vtable for TestThread11                  0x08008c44   Data          72  test_11_thread_run_detailed.o(.rodata._ZTV12TestThread11)
    vtable for TestThread12                  0x08008c8c   Data          72  test_12_thread_state.o(.rodata._ZTV12TestThread12)
    vtable for TestThread13                  0x08008cd4   Data          72  test_13_thread_suspend_inactive.o(.rodata._ZTV12TestThread13)
    vtable for TestThread14                  0x08008d1c   Data          72  test_14_thread_stack_size.o(.rodata._ZTV12TestThread14)
    vtable for TestThread10A                 0x08008d64   Data          72  test_10_thread_priority_change.o(.rodata._ZTV13TestThread10A)
    vtable for TestThread10B                 0x08008dac   Data          72  test_10_thread_priority_change.o(.rodata._ZTV13TestThread10B)
    vtable for MyMortalThread                0x08008df4   Data          84  test_08_mortal_thread.o(.rodata._ZTV14MyMortalThread)
    vtable for osapi::MortalThread           0x08008e48   Data          84  test_08_mortal_thread.o(.rodata._ZTVN5osapi12MortalThreadE)
    vtable for osapi::ThreadInterface        0x08008e9c   Data          72  test_00_thread_name.o(.rodata._ZTVN5osapi15ThreadInterfaceE)
    vtable for osapi::Thread                 0x08008ee4   Data          72  test_00_thread_name.o(.rodata._ZTVN5osapi6ThreadE)
    uxTopUsedPriority                        0x0800a184   Data           4  tasks.o(.rodata.uxTopUsedPriority)
    Region$$Table$$Base                      0x0800a188   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x0800a1a8   Number         0  anon$$obj.o(Region$$Table)
    __stdout                                 0x20000000   Data           4  stdout.o(.data)
    __stderr                                 0x20000004   Data           4  stderr.o(.data)
    __microlib_freelist                      0x20000008   Data           4  mvars.o(.data)
    __microlib_freelist_initialised          0x2000000c   Data           4  mvars.o(.data)
    SystemCoreClock                          0x20000010   Data           4  system_stm32f4xx.o(.data.SystemCoreClock)
    pxCurrentTCB                             0x2000027c   Data           4  tasks.o(.bss.pxCurrentTCB)
    __heap_base                              0x20002bd0   Data           0  startup_stm32f429xx.o(HEAP)
    __heap_limit                             0x20004bd0   Data           0  startup_stm32f429xx.o(HEAP)
    __initial_sp                             0x20004fd0   Data           0  startup_stm32f429xx.o(STACK)



==============================================================================

Memory Map of the image

  Image Entry point : 0x080001ad

  Load Region LR_IROM1 (Base: 0x08000000, Size: 0x0000a298, Max: 0x00200000, ABSOLUTE)

    Execution Region ER_IROM1 (Exec base: 0x08000000, Load base: 0x08000000, Size: 0x0000a1a8, Max: 0x00200000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x08000000   0x08000000   0x000001ac   Data   RO         1185    RESET               startup_stm32f429xx.o
    0x080001ac   0x080001ac   0x00000000   Code   RO         1680  * .ARM.Collect$$$$00000000  mc_w.l(entry.o)
    0x080001ac   0x080001ac   0x00000004   Code   RO         1821    .ARM.Collect$$$$00000001  mc_w.l(entry2.o)
    0x080001b0   0x080001b0   0x00000004   Code   RO         1824    .ARM.Collect$$$$00000004  mc_w.l(entry5.o)
    0x080001b4   0x080001b4   0x00000000   Code   RO         1826    .ARM.Collect$$$$00000008  mc_w.l(entry7b.o)
    0x080001b4   0x080001b4   0x00000000   Code   RO         1828    .ARM.Collect$$$$0000000A  mc_w.l(entry8b.o)
    0x080001b4   0x080001b4   0x00000008   Code   RO         1829    .ARM.Collect$$$$0000000B  mc_w.l(entry9a.o)
    0x080001bc   0x080001bc   0x00000000   Code   RO         1831    .ARM.Collect$$$$0000000D  mc_w.l(entry10a.o)
    0x080001bc   0x080001bc   0x00000000   Code   RO         1833    .ARM.Collect$$$$0000000F  mc_w.l(entry11a.o)
    0x080001bc   0x080001bc   0x00000004   Code   RO         1822    .ARM.Collect$$$$00002712  mc_w.l(entry2.o)
    0x080001c0   0x080001c0   0x00000024   Code   RO         1186    .text               startup_stm32f429xx.o
    0x080001e4   0x080001e4   0x00000062   Code   RO         1691    .text               mc_w.l(uldiv.o)
    0x08000246   0x08000246   0x0000000c   Code   RO         1721    .text               mc_w.l(toupper.o)
    0x08000252   0x08000252   0x00000024   Code   RO         1725    .text               mc_w.l(memcpya.o)
    0x08000276   0x08000276   0x00000024   Code   RO         1727    .text               mc_w.l(memseta.o)
    0x0800029a   0x0800029a   0x0000000e   Code   RO         1729    .text               mc_w.l(strlen.o)
    0x080002a8   0x080002a8   0x0000001c   Code   RO         1731    .text               mc_w.l(strcmp.o)
    0x080002c4   0x080002c4   0x00000012   Code   RO         1733    .text               mc_w.l(strcpy.o)
    0x080002d6   0x080002d6   0x0000014e   Code   RO         1793    .text               mf_w.l(dadd.o)
    0x08000424   0x08000424   0x000000de   Code   RO         1795    .text               mf_w.l(ddiv.o)
    0x08000502   0x08000502   0x0000001a   Code   RO         1797    .text               mf_w.l(dfltui.o)
    0x0800051c   0x0800051c   0x0000003e   Code   RO         1799    .text               mf_w.l(setjmp.o)
    0x0800055a   0x0800055a   0x0000002c   Code   RO         1844    .text               mc_w.l(uidiv.o)
    0x08000586   0x08000586   0x0000001e   Code   RO         1846    .text               mc_w.l(llshl.o)
    0x080005a4   0x080005a4   0x00000020   Code   RO         1848    .text               mc_w.l(llushr.o)
    0x080005c4   0x080005c4   0x00000024   Code   RO         1850    .text               mc_w.l(llsshr.o)
    0x080005e8   0x080005e8   0x00000000   Code   RO         1856    .text               mc_w.l(iusefp.o)
    0x080005e8   0x080005e8   0x000000ba   Code   RO         1857    .text               mf_w.l(depilogue.o)
    0x080006a2   0x080006a2   0x000000e4   Code   RO         1859    .text               mf_w.l(dmul.o)
    0x08000786   0x08000786   0x00000030   Code   RO         1861    .text               mf_w.l(dfixul.o)
    0x080007b6   0x080007b6   0x00000002   PAD
    0x080007b8   0x080007b8   0x00000030   Code   RO         1863    .text               mf_w.l(cdrcmple.o)
    0x080007e8   0x080007e8   0x00000024   Code   RO         1876    .text               mc_w.l(init.o)
    0x0800080c   0x0800080c   0x00000020   Code   RO          101    .text.CU_add_suite  testdb.o
    0x0800082c   0x0800082c   0x000000c4   Code   RO           93    .text.CU_add_suite_with_setup_and_teardown  testdb.o
    0x080008f0   0x080008f0   0x000000d2   Code   RO          123    .text.CU_add_test   testdb.o
    0x080009c2   0x080009c2   0x00000002   PAD
    0x080009c4   0x080009c4   0x000000ee   Code   RO          168    .text.CU_assertImplementation  testrun.o
    0x08000ab2   0x08000ab2   0x00000002   PAD
    0x08000ab4   0x08000ab4   0x00000064   Code   RO           15    .text.CU_basic_run_tests  basic.o
    0x08000b18   0x08000b18   0x00000018   Code   RO           29    .text.CU_basic_set_mode  basic.o
    0x08000b30   0x08000b30   0x00000090   Code   RO           33    .text.CU_basic_show_failures  basic.o
    0x08000bc0   0x08000bc0   0x0000003a   Code   RO           81    .text.CU_cleanup_registry  testdb.o
    0x08000bfa   0x08000bfa   0x00000002   PAD
    0x08000bfc   0x08000bfc   0x00000018   Code   RO          238    .text.CU_clear_previous_results  testrun.o
    0x08000c14   0x08000c14   0x000000a4   Code   RO          285    .text.CU_compare_strings  util.o
    0x08000cb8   0x08000cb8   0x00000028   Code   RO           83    .text.CU_create_new_registry  testdb.o
    0x08000ce0   0x08000ce0   0x0000004a   Code   RO           87    .text.CU_destroy_existing_registry  testdb.o
    0x08000d2a   0x08000d2a   0x00000006   PAD
    0x08000d30   0x08000d30   0x00000088   Code   RO          220    .text.CU_get_elapsed_time  testrun.o
    0x08000db8   0x08000db8   0x0000000c   Code   RO           59    .text.CU_get_error  cuerror.o
    0x08000dc4   0x08000dc4   0x0000000c   Code   RO           65    .text.CU_get_error_action  cuerror.o
    0x08000dd0   0x08000dd0   0x0000000c   Code   RO          222    .text.CU_get_failure_list  testrun.o
    0x08000ddc   0x08000ddc   0x0000000c   Code   RO           89    .text.CU_get_registry  testdb.o
    0x08000de8   0x08000de8   0x00000eb4   Code   RO          252    .text.CU_get_run_results_string  testrun.o
    0x08001c9c   0x08001c9c   0x0000006c   Code   RO           79    .text.CU_initialize_registry  testdb.o
    0x08001d08   0x08001d08   0x0000000c   Code   RO          244    .text.CU_is_test_running  testrun.o
    0x08001d14   0x08001d14   0x0000002c   Code   RO          293    .text.CU_number_width  util.o
    0x08001d40   0x08001d40   0x0000005e   Code   RO          250    .text.CU_print_run_results  testrun.o
    0x08001d9e   0x08001d9e   0x00000002   PAD
    0x08001da0   0x08001da0   0x00000168   Code   RO          226    .text.CU_run_all_tests  testrun.o
    0x08001f08   0x08001f08   0x00000014   Code   RO          180    .text.CU_set_all_test_complete_handler  testrun.o
    0x08001f1c   0x08001f1c   0x0000005c   Code   RO           55    .text.CU_set_error  cuerror.o
    0x08001f78   0x08001f78   0x0000004a   Code   RO           91    .text.CU_set_registry  testdb.o
    0x08001fc2   0x08001fc2   0x00000002   PAD
    0x08001fc4   0x08001fc4   0x00000014   Code   RO          184    .text.CU_set_suite_cleanup_failure_handler  testrun.o
    0x08001fd8   0x08001fd8   0x00000014   Code   RO          182    .text.CU_set_suite_init_failure_handler  testrun.o
    0x08001fec   0x08001fec   0x00000014   Code   RO          176    .text.CU_set_test_complete_handler  testrun.o
    0x08002000   0x08002000   0x00000014   Code   RO          174    .text.CU_set_test_start_handler  testrun.o
    0x08002014   0x08002014   0x00000042   Code   RO          873    .text.ITM_SendChar  retarget_io.o
    0x08002056   0x08002056   0x0000000a   PAD
    0x08002060   0x08002060   0x00000064   Code   RO         1281    .text.PendSV_Handler  port.o
    0x080020c4   0x080020c4   0x0000000c   PAD
    0x080020d0   0x080020d0   0x00000024   Code   RO         1265    .text.SVC_Handler   port.o
    0x080020f4   0x080020f4   0x0000001e   Code   RO          668    .text.SysTick_Handler  cmsis_os2.o
    0x08002112   0x08002112   0x00000002   PAD
    0x08002114   0x08002114   0x00000012   Code   RO         1192    .text.SystemInit    system_stm32f4xx.o
    0x08002126   0x08002126   0x00000002   PAD
    0x08002128   0x08002128   0x000000a0   Code   RO          477    .text._Z10TEST_Mutexv  test_06_mutex.o
    0x080021c8   0x080021c8   0x000001c0   Code   RO          544    .text._Z14taskOSAPI_TESTPv  test_osapi.o
    0x08002388   0x08002388   0x00000168   Code   RO          396    .text._Z15TEST_ThreadJoinv  test_02_thread_join.o
    0x080024f0   0x080024f0   0x00000068   Code   RO          312    .text._Z15TEST_ThreadNamev  test_00_thread_name.o
    0x08002558   0x08002558   0x000000a6   Code   RO          458    .text._Z16TEST_ThreadDelayv  test_05_thread_delay.o
    0x080025fe   0x080025fe   0x00000002   PAD
    0x08002600   0x08002600   0x00000162   Code   RO          507    .text._Z17TEST_MortalThreadv  test_08_mortal_thread.o
    0x08002762   0x08002762   0x00000002   PAD
    0x08002764   0x08002764   0x000000d4   Code   RO          492    .text._Z19TEST_RecursiveMutexv  test_07_recursive_mutex.o
    0x08002838   0x08002838   0x0000009a   Code   RO          375    .text._Z19TEST_ThreadCreationv  test_01_thread_creation.o
    0x080028d2   0x080028d2   0x00000002   PAD
    0x080028d4   0x080028d4   0x000000a6   Code   RO          438    .text._Z19TEST_ThreadPriorityv  test_04_thread_priority.o
    0x0800297a   0x0800297a   0x00000002   PAD
    0x0800297c   0x0800297c   0x00000174   Code   RO          553    .text._Z20TEST_ThreadStackSizev  test_14_thread_stack_size.o
    0x08002af0   0x08002af0   0x00000182   Code   RO          613    .text._Z22TEST_ThreadRunDetailedv  test_11_thread_run_detailed.o
    0x08002c72   0x08002c72   0x00000002   PAD
    0x08002c74   0x08002c74   0x0000022e   Code   RO          592    .text._Z24TEST_ThreadStateCheckingv  test_12_thread_state.o
    0x08002ea2   0x08002ea2   0x00000002   PAD
    0x08002ea4   0x08002ea4   0x00000194   Code   RO          417    .text._Z24TEST_ThreadSuspendResumev  test_03_thread_suspend_resume.o
    0x08003038   0x08003038   0x000001c2   Code   RO          634    .text._Z25TEST_ThreadPriorityChangev  test_10_thread_priority_change.o
    0x080031fa   0x080031fa   0x00000002   PAD
    0x080031fc   0x080031fc   0x000000ac   Code   RO          573    .text._Z26TEST_ThreadSuspendInactivev  test_13_thread_suspend_inactive.o
    0x080032a8   0x080032a8   0x00000008   Code   RO          357    .text._ZN11TestThread03jobEv  test_00_thread_name.o
    0x080032b0   0x080032b0   0x00000036   Code   RO          323    .text._ZN11TestThread0C2Ev  test_00_thread_name.o
    0x080032e6   0x080032e6   0x00000002   PAD
    0x080032e8   0x080032e8   0x00000018   Code   RO          331    .text._ZN11TestThread0D0Ev  test_00_thread_name.o
    0x08003300   0x08003300   0x00000014   Code   RO          327    .text._ZN11TestThread0D2Ev  test_00_thread_name.o
    0x08003314   0x08003314   0x00000014   Code   RO          391    .text._ZN11TestThread13jobEv  test_01_thread_creation.o
    0x08003328   0x08003328   0x00000034   Code   RO          385    .text._ZN11TestThread1C2Ev  test_01_thread_creation.o
    0x0800335c   0x0800335c   0x00000018   Code   RO          389    .text._ZN11TestThread1D0Ev  test_01_thread_creation.o
    0x08003374   0x08003374   0x00000014   Code   RO          387    .text._ZN11TestThread1D2Ev  test_01_thread_creation.o
    0x08003388   0x08003388   0x00000070   Code   RO          413    .text._ZN11TestThread23jobEv  test_02_thread_join.o
    0x080033f8   0x080033f8   0x0000003c   Code   RO          407    .text._ZN11TestThread2C2Ev  test_02_thread_join.o
    0x08003434   0x08003434   0x00000018   Code   RO          411    .text._ZN11TestThread2D0Ev  test_02_thread_join.o
    0x0800344c   0x0800344c   0x00000014   Code   RO          409    .text._ZN11TestThread2D2Ev  test_02_thread_join.o
    0x08003460   0x08003460   0x00000042   Code   RO          434    .text._ZN11TestThread33jobEv  test_03_thread_suspend_resume.o
    0x080034a2   0x080034a2   0x00000002   PAD
    0x080034a4   0x080034a4   0x0000003c   Code   RO          428    .text._ZN11TestThread3C2Ev  test_03_thread_suspend_resume.o
    0x080034e0   0x080034e0   0x00000018   Code   RO          432    .text._ZN11TestThread3D0Ev  test_03_thread_suspend_resume.o
    0x080034f8   0x080034f8   0x00000014   Code   RO          430    .text._ZN11TestThread3D2Ev  test_03_thread_suspend_resume.o
    0x0800350c   0x0800350c   0x0000002a   Code   RO          454    .text._ZN11TestThread43jobEv  test_04_thread_priority.o
    0x08003536   0x08003536   0x00000002   PAD
    0x08003538   0x08003538   0x0000003c   Code   RO          448    .text._ZN11TestThread4C2Ev  test_04_thread_priority.o
    0x08003574   0x08003574   0x00000018   Code   RO          452    .text._ZN11TestThread4D0Ev  test_04_thread_priority.o
    0x0800358c   0x0800358c   0x00000014   Code   RO          450    .text._ZN11TestThread4D2Ev  test_04_thread_priority.o
    0x080035a0   0x080035a0   0x00000016   Code   RO          473    .text._ZN11TestThread53jobEv  test_05_thread_delay.o
    0x080035b6   0x080035b6   0x00000002   PAD
    0x080035b8   0x080035b8   0x0000003c   Code   RO          467    .text._ZN11TestThread5C2Ev  test_05_thread_delay.o
    0x080035f4   0x080035f4   0x00000018   Code   RO          471    .text._ZN11TestThread5D0Ev  test_05_thread_delay.o
    0x0800360c   0x0800360c   0x00000014   Code   RO          469    .text._ZN11TestThread5D2Ev  test_05_thread_delay.o
    0x08003620   0x08003620   0x00000036   Code   RO          630    .text._ZN12TestThread113jobEv  test_11_thread_run_detailed.o
    0x08003656   0x08003656   0x00000002   PAD
    0x08003658   0x08003658   0x00000034   Code   RO          624    .text._ZN12TestThread11C2Ev  test_11_thread_run_detailed.o
    0x0800368c   0x0800368c   0x00000018   Code   RO          628    .text._ZN12TestThread11D0Ev  test_11_thread_run_detailed.o
    0x080036a4   0x080036a4   0x00000014   Code   RO          626    .text._ZN12TestThread11D2Ev  test_11_thread_run_detailed.o
    0x080036b8   0x080036b8   0x0000003a   Code   RO          609    .text._ZN12TestThread123jobEv  test_12_thread_state.o
    0x080036f2   0x080036f2   0x00000002   PAD
    0x080036f4   0x080036f4   0x00000034   Code   RO          603    .text._ZN12TestThread12C2Ev  test_12_thread_state.o
    0x08003728   0x08003728   0x00000018   Code   RO          607    .text._ZN12TestThread12D0Ev  test_12_thread_state.o
    0x08003740   0x08003740   0x00000014   Code   RO          605    .text._ZN12TestThread12D2Ev  test_12_thread_state.o
    0x08003754   0x08003754   0x00000008   Code   RO          588    .text._ZN12TestThread133jobEv  test_13_thread_suspend_inactive.o
    0x0800375c   0x0800375c   0x00000034   Code   RO          582    .text._ZN12TestThread13C2Ev  test_13_thread_suspend_inactive.o
    0x08003790   0x08003790   0x00000018   Code   RO          586    .text._ZN12TestThread13D0Ev  test_13_thread_suspend_inactive.o
    0x080037a8   0x080037a8   0x00000014   Code   RO          584    .text._ZN12TestThread13D2Ev  test_13_thread_suspend_inactive.o
    0x080037bc   0x080037bc   0x0000002a   Code   RO          569    .text._ZN12TestThread143jobEv  test_14_thread_stack_size.o
    0x080037e6   0x080037e6   0x00000002   PAD
    0x080037e8   0x080037e8   0x00000034   Code   RO          563    .text._ZN12TestThread14C2Ev  test_14_thread_stack_size.o
    0x0800381c   0x0800381c   0x00000018   Code   RO          567    .text._ZN12TestThread14D0Ev  test_14_thread_stack_size.o
    0x08003834   0x08003834   0x00000014   Code   RO          565    .text._ZN12TestThread14D2Ev  test_14_thread_stack_size.o
    0x08003848   0x08003848   0x00000068   Code   RO          658    .text._ZN13TestThread10A3jobEv  test_10_thread_priority_change.o
    0x080038b0   0x080038b0   0x0000003c   Code   RO          648    .text._ZN13TestThread10AC2Ev  test_10_thread_priority_change.o
    0x080038ec   0x080038ec   0x00000018   Code   RO          656    .text._ZN13TestThread10AD0Ev  test_10_thread_priority_change.o
    0x08003904   0x08003904   0x00000014   Code   RO          654    .text._ZN13TestThread10AD2Ev  test_10_thread_priority_change.o
    0x08003918   0x08003918   0x00000068   Code   RO          662    .text._ZN13TestThread10B3jobEv  test_10_thread_priority_change.o
    0x08003980   0x08003980   0x0000003c   Code   RO          650    .text._ZN13TestThread10BC2Ev  test_10_thread_priority_change.o
    0x080039bc   0x080039bc   0x00000018   Code   RO          660    .text._ZN13TestThread10BD0Ev  test_10_thread_priority_change.o
    0x080039d4   0x080039d4   0x00000014   Code   RO          652    .text._ZN13TestThread10BD2Ev  test_10_thread_priority_change.o
    0x080039e8   0x080039e8   0x00000014   Code   RO          535    .text._ZN14MyMortalThread3endEv  test_08_mortal_thread.o
    0x080039fc   0x080039fc   0x00000020   Code   RO          533    .text._ZN14MyMortalThread4loopEv  test_08_mortal_thread.o
    0x08003a1c   0x08003a1c   0x00000014   Code   RO          531    .text._ZN14MyMortalThread5beginEv  test_08_mortal_thread.o
    0x08003a30   0x08003a30   0x0000002e   Code   RO          519    .text._ZN14MyMortalThreadC2Ev  test_08_mortal_thread.o
    0x08003a5e   0x08003a5e   0x00000002   PAD
    0x08003a60   0x08003a60   0x00000018   Code   RO          527    .text._ZN14MyMortalThreadD0Ev  test_08_mortal_thread.o
    0x08003a78   0x08003a78   0x00000014   Code   RO          523    .text._ZN14MyMortalThreadD2Ev  test_08_mortal_thread.o
    0x08003a8c   0x08003a8c   0x00000032   Code   RO          529    .text._ZN5osapi12MortalThread3jobEv  test_08_mortal_thread.o
    0x08003abe   0x08003abe   0x00000002   PAD
    0x08003ac0   0x08003ac0   0x0000000e   Code   RO          521    .text._ZN5osapi12MortalThread4killEv  test_08_mortal_thread.o
    0x08003ace   0x08003ace   0x00000002   PAD
    0x08003ad0   0x08003ad0   0x00000038   Code   RO          525    .text._ZN5osapi12MortalThreadC2EijPKc  test_08_mortal_thread.o
    0x08003b08   0x08003b08   0x00000006   Code   RO          539    .text._ZN5osapi12MortalThreadD0Ev  test_08_mortal_thread.o
    0x08003b0e   0x08003b0e   0x00000002   PAD
    0x08003b10   0x08003b10   0x00000020   Code   RO          537    .text._ZN5osapi12MortalThreadD2Ev  test_08_mortal_thread.o
    0x08003b30   0x08003b30   0x00000008   Code   RO          304    .text._ZN5osapi13getSystemTimeEv  osapi_freertos.o
    0x08003b38   0x08003b38   0x0000003c   Code   RO          502    .text._ZN5osapi14RecursiveMutex4lockEj  test_07_recursive_mutex.o
    0x08003b74   0x08003b74   0x0000002a   Code   RO          504    .text._ZN5osapi14RecursiveMutex6unlockEv  test_07_recursive_mutex.o
    0x08003b9e   0x08003b9e   0x00000002   PAD
    0x08003ba0   0x08003ba0   0x00000016   Code   RO          359    .text._ZN5osapi15ThreadInterfaceC2Ev  test_00_thread_name.o
    0x08003bb6   0x08003bb6   0x00000002   PAD
    0x08003bb8   0x08003bb8   0x00000006   Code   RO          367    .text._ZN5osapi15ThreadInterfaceD0Ev  test_00_thread_name.o
    0x08003bbe   0x08003bbe   0x00000002   PAD
    0x08003bc0   0x08003bc0   0x0000000a   Code   RO          365    .text._ZN5osapi15ThreadInterfaceD2Ev  test_00_thread_name.o
    0x08003bca   0x08003bca   0x00000002   PAD
    0x08003bcc   0x08003bcc   0x0000002e   Code   RO          487    .text._ZN5osapi5Mutex4lockEj  test_06_mutex.o
    0x08003bfa   0x08003bfa   0x00000002   PAD
    0x08003bfc   0x08003bfc   0x0000000e   Code   RO          489    .text._ZN5osapi5Mutex6unlockEv  test_06_mutex.o
    0x08003c0a   0x08003c0a   0x00000002   PAD
    0x08003c0c   0x08003c0c   0x00000012   Code   RO          339    .text._ZN5osapi6Thread10isJoinableEv  test_00_thread_name.o
    0x08003c1e   0x08003c1e   0x00000002   PAD
    0x08003c20   0x08003c20   0x00000012   Code   RO          347    .text._ZN5osapi6Thread11getPriorityEv  test_00_thread_name.o
    0x08003c32   0x08003c32   0x00000002   PAD
    0x08003c34   0x08003c34   0x00000038   Code   RO          345    .text._ZN5osapi6Thread11setPriorityEi  test_00_thread_name.o
    0x08003c6c   0x08003c6c   0x0000003c   Code   RO          369    .text._ZN5osapi6Thread14threadFunctionEPv  test_00_thread_name.o
    0x08003ca8   0x08003ca8   0x00000032   Code   RO          353    .text._ZN5osapi6Thread16getUsedStackSizeEv  test_00_thread_name.o
    0x08003cda   0x08003cda   0x00000002   PAD
    0x08003cdc   0x08003cdc   0x0000000c   Code   RO          351    .text._ZN5osapi6Thread17getTotalStackSizeEv  test_00_thread_name.o
    0x08003ce8   0x08003ce8   0x0000005e   Code   RO          333    .text._ZN5osapi6Thread3runEv  test_00_thread_name.o
    0x08003d46   0x08003d46   0x00000002   PAD
    0x08003d48   0x08003d48   0x00000046   Code   RO          337    .text._ZN5osapi6Thread4joinEj  test_00_thread_name.o
    0x08003d8e   0x08003d8e   0x00000002   PAD
    0x08003d90   0x08003d90   0x00000012   Code   RO          355    .text._ZN5osapi6Thread5sleepEj  test_00_thread_name.o
    0x08003da2   0x08003da2   0x00000002   PAD
    0x08003da4   0x08003da4   0x00000036   Code   RO          343    .text._ZN5osapi6Thread6resumeEv  test_00_thread_name.o
    0x08003dda   0x08003dda   0x00000002   PAD
    0x08003ddc   0x08003ddc   0x0000000c   Code   RO          325    .text._ZN5osapi6Thread7getNameEv  test_00_thread_name.o
    0x08003de8   0x08003de8   0x00000046   Code   RO          341    .text._ZN5osapi6Thread7suspendEv  test_00_thread_name.o
    0x08003e2e   0x08003e2e   0x00000002   PAD
    0x08003e30   0x08003e30   0x00000098   Code   RO          349    .text._ZN5osapi6Thread8getStateEv  test_00_thread_name.o
    0x08003ec8   0x08003ec8   0x00000068   Code   RO          335    .text._ZN5osapi6Thread9isRunningEv  test_00_thread_name.o
    0x08003f30   0x08003f30   0x00000068   Code   RO          329    .text._ZN5osapi6ThreadC2EijNS_8JoinableEPKc  test_00_thread_name.o
    0x08003f98   0x08003f98   0x00000006   Code   RO          363    .text._ZN5osapi6ThreadD0Ev  test_00_thread_name.o
    0x08003f9e   0x08003f9e   0x00000002   PAD
    0x08003fa0   0x08003fa0   0x00000014   Code   RO          361    .text._ZN5osapi6ThreadD2Ev  test_00_thread_name.o
    0x08003fb4   0x08003fb4   0x00000004   Code   RO         1640    .text._ZdlPv        libcpp_w.l(new.cpp.o)
    0x08003fb8   0x08003fb8   0x000000bc   Code   RO          885    .text.__aeabi_assert  retarget_io.o
    0x08004074   0x08004074   0x00000028   Code   RO         1675    .text.__cxa_pure_virtual  libcppabi_w.l(cxa_virtual.cpp.o)
    0x0800409c   0x0800409c   0x00000004   Code   RO          887    .text.abort         retarget_io.o
    0x080040a0   0x080040a0   0x00000004   Code   RO         1802    .text.abort_message  libcppabi_w.l(abort_message.cpp.o)
    0x080040a4   0x080040a4   0x0000014e   Code   RO          170    .text.add_failure   testrun.o
    0x080041f2   0x080041f2   0x00000002   PAD
    0x080041f4   0x080041f4   0x0000002e   Code   RO           39    .text.basic_all_tests_complete_message_handler  basic.o
    0x08004222   0x08004222   0x00000002   PAD
    0x08004224   0x08004224   0x000000ae   Code   RO           17    .text.basic_initialize  basic.o
    0x080042d2   0x080042d2   0x00000002   PAD
    0x080042d4   0x080042d4   0x00000042   Code   RO           19    .text.basic_run_all_tests  basic.o
    0x08004316   0x08004316   0x00000002   PAD
    0x08004318   0x08004318   0x00000076   Code   RO           43    .text.basic_suite_cleanup_failure_message_handler  basic.o
    0x0800438e   0x0800438e   0x00000002   PAD
    0x08004390   0x08004390   0x00000076   Code   RO           41    .text.basic_suite_init_failure_message_handler  basic.o
    0x08004406   0x08004406   0x00000002   PAD
    0x08004408   0x08004408   0x000001ae   Code   RO           37    .text.basic_test_complete_message_handler  basic.o
    0x080045b6   0x080045b6   0x00000002   PAD
    0x080045b8   0x080045b8   0x00000126   Code   RO           35    .text.basic_test_start_message_handler  basic.o
    0x080046de   0x080046de   0x00000002   PAD
    0x080046e0   0x080046e0   0x0000005a   Code   RO          254    .text.cleanup_failure_list  testrun.o
    0x0800473a   0x0800473a   0x00000002   PAD
    0x0800473c   0x0800473c   0x00000076   Code   RO          155    .text.cleanup_suite  testdb.o
    0x080047b2   0x080047b2   0x00000002   PAD
    0x080047b4   0x080047b4   0x00000042   Code   RO          157    .text.cleanup_test  testdb.o
    0x080047f6   0x080047f6   0x00000002   PAD
    0x080047f8   0x080047f8   0x00000064   Code   RO          153    .text.cleanup_test_registry  testdb.o
    0x0800485c   0x0800485c   0x00000096   Code   RO          228    .text.clear_previous_results  testrun.o
    0x080048f2   0x080048f2   0x00000002   PAD
    0x080048f4   0x080048f4   0x000000a6   Code   RO           95    .text.create_suite  testdb.o
    0x0800499a   0x0800499a   0x00000002   PAD
    0x0800499c   0x0800499c   0x00000088   Code   RO          125    .text.create_test   testdb.o
    0x08004a24   0x08004a24   0x000000f4   Code   RO         1429    .text.eTaskGetState  tasks.o
    0x08004b18   0x08004b18   0x00000008   Code   RO            2    .text.exit          main.o
    0x08004b20   0x08004b20   0x00000030   Code   RO          877    .text.fputc         retarget_io.o
    0x08004b50   0x08004b50   0x0000005c   Code   RO           57    .text.get_error_desc  cuerror.o
    0x08004bac   0x08004bac   0x000000de   Code   RO           99    .text.insert_suite  testdb.o
    0x08004c8a   0x08004c8a   0x00000002   PAD
    0x08004c8c   0x08004c8c   0x0000011c   Code   RO          129    .text.insert_test   testdb.o
    0x08004da8   0x08004da8   0x0000003e   Code   RO            4    .text.main          main.o
    0x08004de6   0x08004de6   0x00000002   PAD
    0x08004de8   0x08004de8   0x000000d4   Code   RO         1423    .text.prvAddCurrentTaskToDelayedList  tasks.o
    0x08004ebc   0x08004ebc   0x00000122   Code   RO         1409    .text.prvAddNewTaskToReadyList  tasks.o
    0x08004fde   0x08004fde   0x00000002   PAD
    0x08004fe0   0x08004fe0   0x0000007e   Code   RO         1561    .text.prvCheckForValidListAndQueue  timers.o
    0x0800505e   0x0800505e   0x00000002   PAD
    0x08005060   0x08005060   0x0000005a   Code   RO         1527    .text.prvCheckTasksWaitingTermination  tasks.o
    0x080050ba   0x080050ba   0x00000002   PAD
    0x080050bc   0x080050bc   0x00000042   Code   RO         1366    .text.prvCopyDataFromQueue  queue.o
    0x080050fe   0x080050fe   0x00000002   PAD
    0x08005100   0x08005100   0x000000cc   Code   RO         1354    .text.prvCopyDataToQueue  queue.o
    0x080051cc   0x080051cc   0x0000003c   Code   RO         1415    .text.prvDeleteTCB  tasks.o
    0x08005208   0x08005208   0x00000026   Code   RO         1370    .text.prvGetDisinheritPriorityAfterTimeout  queue.o
    0x0800522e   0x0800522e   0x00000002   PAD
    0x08005230   0x08005230   0x00000040   Code   RO         1599    .text.prvGetNextExpireTime  timers.o
    0x08005270   0x08005270   0x000000bc   Code   RO         1295    .text.prvHeapInit   heap_4.o
    0x0800532c   0x0800532c   0x00000038   Code   RO         1449    .text.prvIdleTask   tasks.o
    0x08005364   0x08005364   0x00000048   Code   RO         1328    .text.prvInitialiseNewQueue  queue.o
    0x080053ac   0x080053ac   0x00000102   Code   RO         1407    .text.prvInitialiseNewTask  tasks.o
    0x080054ae   0x080054ae   0x00000002   PAD
    0x080054b0   0x080054b0   0x0000008e   Code   RO         1525    .text.prvInitialiseTaskLists  tasks.o
    0x0800553e   0x0800553e   0x00000002   PAD
    0x08005540   0x08005540   0x000000c6   Code   RO         1297    .text.prvInsertBlockIntoFreeList  heap_4.o
    0x08005606   0x08005606   0x00000002   PAD
    0x08005608   0x08005608   0x00000086   Code   RO         1611    .text.prvInsertTimerInActiveList  timers.o
    0x0800568e   0x0800568e   0x00000002   PAD
    0x08005690   0x08005690   0x00000028   Code   RO         1368    .text.prvIsQueueEmpty  queue.o
    0x080056b8   0x080056b8   0x0000002e   Code   RO         1356    .text.prvIsQueueFull  queue.o
    0x080056e6   0x080056e6   0x00000002   PAD
    0x080056e8   0x080056e8   0x00000028   Code   RO         1273    .text.prvPortStartFirstTask  port.o
    0x08005710   0x08005710   0x00000072   Code   RO         1607    .text.prvProcessExpiredTimer  timers.o
    0x08005782   0x08005782   0x00000002   PAD
    0x08005784   0x08005784   0x0000013a   Code   RO         1603    .text.prvProcessReceivedCommands  timers.o
    0x080058be   0x080058be   0x00000002   PAD
    0x080058c0   0x080058c0   0x0000009a   Code   RO         1601    .text.prvProcessTimerOrBlockTask  timers.o
    0x0800595a   0x0800595a   0x00000002   PAD
    0x0800595c   0x0800595c   0x0000003c   Code   RO         1417    .text.prvResetNextTaskUnblockTime  tasks.o
    0x08005998   0x08005998   0x00000044   Code   RO         1605    .text.prvSampleTimeNow  timers.o
    0x080059dc   0x080059dc   0x000000b8   Code   RO         1609    .text.prvSwitchTimerLists  timers.o
    0x08005a94   0x08005a94   0x00000030   Code   RO         1493    .text.prvTaskCheckFreeStackSpace  tasks.o
    0x08005ac4   0x08005ac4   0x00000026   Code   RO         1263    .text.prvTaskExitError  port.o
    0x08005aea   0x08005aea   0x00000002   PAD
    0x08005aec   0x08005aec   0x0000004e   Code   RO         1443    .text.prvTaskIsTaskSuspended  tasks.o
    0x08005b3a   0x08005b3a   0x00000002   PAD
    0x08005b3c   0x08005b3c   0x0000001e   Code   RO         1563    .text.prvTimerTask  timers.o
    0x08005b5a   0x08005b5a   0x00000002   PAD
    0x08005b5c   0x08005b5c   0x000000ae   Code   RO         1358    .text.prvUnlockQueue  queue.o
    0x08005c0a   0x08005c0a   0x00000002   PAD
    0x08005c0c   0x08005c0c   0x000001b2   Code   RO         1293    .text.pvPortMalloc  heap_4.o
    0x08005dbe   0x08005dbe   0x00000002   PAD
    0x08005dc0   0x08005dc0   0x0000002c   Code   RO         1509    .text.pvTaskIncrementMutexHeldCount  tasks.o
    0x08005dec   0x08005dec   0x0000005e   Code   RO         1261    .text.pxPortInitialiseStack  port.o
    0x08005e4a   0x08005e4a   0x00000002   PAD
    0x08005e4c   0x08005e4c   0x0000035e   Code   RO          230    .text.run_single_suite  testrun.o
    0x080061aa   0x080061aa   0x00000002   PAD
    0x080061ac   0x080061ac   0x0000024e   Code   RO          236    .text.run_single_test  testrun.o
    0x080063fa   0x080063fa   0x00000002   PAD
    0x080063fc   0x080063fc   0x00000010   Code   RO          879    .text.stdout_putchar  retarget_io.o
    0x0800640c   0x0800640c   0x0000008a   Code   RO           97    .text.suite_exists  testdb.o
    0x08006496   0x08006496   0x00000002   PAD
    0x08006498   0x08006498   0x0000008a   Code   RO          127    .text.test_exists   testdb.o
    0x08006522   0x08006522   0x00000002   PAD
    0x08006524   0x08006524   0x00000048   Code   RO         1252    .text.uxListRemove  list.o
    0x0800656c   0x0800656c   0x0000000c   Code   RO         1459    .text.uxTaskGetNumberOfTasks  tasks.o
    0x08006578   0x08006578   0x00000038   Code   RO         1495    .text.uxTaskGetStackHighWaterMark  tasks.o
    0x080065b0   0x080065b0   0x00000038   Code   RO         1431    .text.uxTaskPriorityGet  tasks.o
    0x080065e8   0x080065e8   0x0000002a   Code   RO          826    .text.vApplicationGetIdleTaskMemory  cmsis_os2.o
    0x08006612   0x08006612   0x00000002   PAD
    0x08006614   0x08006614   0x0000002a   Code   RO          828    .text.vApplicationGetTimerTaskMemory  cmsis_os2.o
    0x0800663e   0x0800663e   0x00000002   PAD
    0x08006640   0x08006640   0x0000000a   Code   RO          824    .text.vApplicationStackOverflowHook  cmsis_os2.o
    0x0800664a   0x0800664a   0x00000002   PAD
    0x0800664c   0x0800664c   0x0000002e   Code   RO         1244    .text.vListInitialise  list.o
    0x0800667a   0x0800667a   0x00000002   PAD
    0x0800667c   0x0800667c   0x0000000e   Code   RO         1246    .text.vListInitialiseItem  list.o
    0x0800668a   0x0800668a   0x00000002   PAD
    0x0800668c   0x0800668c   0x0000006a   Code   RO         1250    .text.vListInsert   list.o
    0x080066f6   0x080066f6   0x00000002   PAD
    0x080066f8   0x080066f8   0x0000003a   Code   RO         1248    .text.vListInsertEnd  list.o
    0x08006732   0x08006732   0x00000002   PAD
    0x08006734   0x08006734   0x00000014   Code   RO         1271    .text.vPortEnableVFP  port.o
    0x08006748   0x08006748   0x00000030   Code   RO         1277    .text.vPortEnterCritical  port.o
    0x08006778   0x08006778   0x00000026   Code   RO         1279    .text.vPortExitCritical  port.o
    0x0800679e   0x0800679e   0x00000002   PAD
    0x080067a0   0x080067a0   0x00000084   Code   RO         1299    .text.vPortFree     heap_4.o
    0x08006824   0x08006824   0x00000044   Code   RO         1269    .text.vPortSetupTimerInterrupt  port.o
    0x08006868   0x08006868   0x00000064   Code   RO         1396    .text.vQueueWaitForMessageRestricted  queue.o
    0x080068cc   0x080068cc   0x0000004a   Code   RO         1427    .text.vTaskDelay    tasks.o
    0x08006916   0x08006916   0x00000002   PAD
    0x08006918   0x08006918   0x000000ea   Code   RO         1413    .text.vTaskDelete   tasks.o
    0x08006a02   0x08006a02   0x00000002   PAD
    0x08006a04   0x08006a04   0x00000024   Code   RO         1481    .text.vTaskInternalSetTimeOutState  tasks.o
    0x08006a28   0x08006a28   0x0000000e   Code   RO         1485    .text.vTaskMissedYield  tasks.o
    0x08006a36   0x08006a36   0x00000002   PAD
    0x08006a38   0x08006a38   0x00000026   Code   RO         1469    .text.vTaskPlaceOnEventList  tasks.o
    0x08006a5e   0x08006a5e   0x00000002   PAD
    0x08006a60   0x08006a60   0x00000036   Code   RO         1473    .text.vTaskPlaceOnEventListRestricted  tasks.o
    0x08006a96   0x08006a96   0x00000002   PAD
    0x08006a98   0x08006a98   0x000000ec   Code   RO         1505    .text.vTaskPriorityDisinheritAfterTimeout  tasks.o
    0x08006b84   0x08006b84   0x0000017e   Code   RO         1435    .text.vTaskPrioritySet  tasks.o
    0x08006d02   0x08006d02   0x00000002   PAD
    0x08006d04   0x08006d04   0x000000ba   Code   RO         1441    .text.vTaskResume   tasks.o
    0x08006dbe   0x08006dbe   0x00000002   PAD
    0x08006dc0   0x08006dc0   0x000000cc   Code   RO         1447    .text.vTaskStartScheduler  tasks.o
    0x08006e8c   0x08006e8c   0x00000124   Code   RO         1437    .text.vTaskSuspend  tasks.o
    0x08006fb0   0x08006fb0   0x00000010   Code   RO         1421    .text.vTaskSuspendAll  tasks.o
    0x08006fc0   0x08006fc0   0x00000104   Code   RO         1439    .text.vTaskSwitchContext  tasks.o
    0x080070c4   0x080070c4   0x00000054   Code   RO         1267    .text.xPortStartScheduler  port.o
    0x08007118   0x08007118   0x0000003c   Code   RO         1283    .text.xPortSysTickHandler  port.o
    0x08007154   0x08007154   0x00000058   Code   RO         1330    .text.xQueueGenericCreate  queue.o
    0x080071ac   0x080071ac   0x0000004a   Code   RO         1326    .text.xQueueGenericCreateStatic  queue.o
    0x080071f6   0x080071f6   0x00000002   PAD
    0x080071f8   0x080071f8   0x0000009e   Code   RO         1324    .text.xQueueGenericReset  queue.o
    0x08007296   0x08007296   0x00000002   PAD
    0x08007298   0x08007298   0x0000016a   Code   RO         1344    .text.xQueueGenericSend  queue.o
    0x08007402   0x08007402   0x00000002   PAD
    0x08007404   0x08007404   0x000000be   Code   RO         1360    .text.xQueueGenericSendFromISR  queue.o
    0x080074c2   0x080074c2   0x00000002   PAD
    0x080074c4   0x080074c4   0x00000152   Code   RO         1364    .text.xQueueReceive  queue.o
    0x08007616   0x08007616   0x00000002   PAD
    0x08007618   0x08007618   0x0000019e   Code   RO         1348    .text.xQueueSemaphoreTake  queue.o
    0x080077b6   0x080077b6   0x00000002   PAD
    0x080077b8   0x080077b8   0x0000009a   Code   RO         1483    .text.xTaskCheckForTimeOut  tasks.o
    0x08007852   0x08007852   0x00000002   PAD
    0x08007854   0x08007854   0x0000009e   Code   RO         1411    .text.xTaskCreate   tasks.o
    0x080078f2   0x080078f2   0x00000002   PAD
    0x080078f4   0x080078f4   0x00000072   Code   RO         1405    .text.xTaskCreateStatic  tasks.o
    0x08007966   0x08007966   0x00000002   PAD
    0x08007968   0x08007968   0x00000038   Code   RO         1499    .text.xTaskGetSchedulerState  tasks.o
    0x080079a0   0x080079a0   0x00000014   Code   RO         1455    .text.xTaskGetTickCount  tasks.o
    0x080079b4   0x080079b4   0x0000019e   Code   RO         1453    .text.xTaskIncrementTick  tasks.o
    0x08007b52   0x08007b52   0x00000002   PAD
    0x08007b54   0x08007b54   0x000000a6   Code   RO         1503    .text.xTaskPriorityDisinherit  tasks.o
    0x08007bfa   0x08007bfa   0x00000002   PAD
    0x08007bfc   0x08007bfc   0x0000010e   Code   RO         1501    .text.xTaskPriorityInherit  tasks.o
    0x08007d0a   0x08007d0a   0x00000002   PAD
    0x08007d0c   0x08007d0c   0x000000b2   Code   RO         1475    .text.xTaskRemoveFromEventList  tasks.o
    0x08007dbe   0x08007dbe   0x00000002   PAD
    0x08007dc0   0x08007dc0   0x00000162   Code   RO         1425    .text.xTaskResumeAll  tasks.o
    0x08007f22   0x08007f22   0x00000002   PAD
    0x08007f24   0x08007f24   0x00000078   Code   RO         1559    .text.xTimerCreateTimerTask  timers.o
    0x08007f9c   0x08007f9c   0x00000094   Code   RO         1571    .text.xTimerGenericCommand  timers.o
    0x08008030   0x08008030   0x0000001c   Code   RO         1737    i.__0fprintf        mc_w.l(printfa.o)
    0x0800804c   0x0800804c   0x00000020   Code   RO         1738    i.__0printf         mc_w.l(printfa.o)
    0x0800806c   0x0800806c   0x00000034   Code   RO         1739    i.__0snprintf       mc_w.l(printfa.o)
    0x080080a0   0x080080a0   0x000000a0   Code   RO         1777    i.__aligned_malloc  mc_w.l(malloca.o)
    0x08008140   0x08008140   0x00000050   Code   RO         1778    i.__free$memalign   mc_w.l(malloca.o)
    0x08008190   0x08008190   0x00000006   Code   RO         1779    i.__malloc$memalign  mc_w.l(malloca.o)
    0x08008196   0x08008196   0x0000000e   Code   RO         1879    i.__scatterload_copy  mc_w.l(handlers.o)
    0x080081a4   0x080081a4   0x00000002   Code   RO         1880    i.__scatterload_null  mc_w.l(handlers.o)
    0x080081a6   0x080081a6   0x0000000e   Code   RO         1881    i.__scatterload_zeroinit  mc_w.l(handlers.o)
    0x080081b4   0x080081b4   0x00000184   Code   RO         1745    i._fp_digits        mc_w.l(printfa.o)
    0x08008338   0x08008338   0x000006dc   Code   RO         1746    i._printf_core      mc_w.l(printfa.o)
    0x08008a14   0x08008a14   0x00000024   Code   RO         1747    i._printf_post_padding  mc_w.l(printfa.o)
    0x08008a38   0x08008a38   0x0000002e   Code   RO         1748    i._printf_pre_padding  mc_w.l(printfa.o)
    0x08008a66   0x08008a66   0x00000016   Code   RO         1749    i._snputc           mc_w.l(printfa.o)
    0x08008a7c   0x08008a7c   0x00000018   Code   RO         1683    i.fputs             mc_w.l(fputs.o)
    0x08008a94   0x08008a94   0x00000048   Data   RO          371    .rodata._ZTV11TestThread0  test_00_thread_name.o
    0x08008adc   0x08008adc   0x00000048   Data   RO          393    .rodata._ZTV11TestThread1  test_01_thread_creation.o
    0x08008b24   0x08008b24   0x00000048   Data   RO          415    .rodata._ZTV11TestThread2  test_02_thread_join.o
    0x08008b6c   0x08008b6c   0x00000048   Data   RO          436    .rodata._ZTV11TestThread3  test_03_thread_suspend_resume.o
    0x08008bb4   0x08008bb4   0x00000048   Data   RO          456    .rodata._ZTV11TestThread4  test_04_thread_priority.o
    0x08008bfc   0x08008bfc   0x00000048   Data   RO          475    .rodata._ZTV11TestThread5  test_05_thread_delay.o
    0x08008c44   0x08008c44   0x00000048   Data   RO          632    .rodata._ZTV12TestThread11  test_11_thread_run_detailed.o
    0x08008c8c   0x08008c8c   0x00000048   Data   RO          611    .rodata._ZTV12TestThread12  test_12_thread_state.o
    0x08008cd4   0x08008cd4   0x00000048   Data   RO          590    .rodata._ZTV12TestThread13  test_13_thread_suspend_inactive.o
    0x08008d1c   0x08008d1c   0x00000048   Data   RO          571    .rodata._ZTV12TestThread14  test_14_thread_stack_size.o
    0x08008d64   0x08008d64   0x00000048   Data   RO          664    .rodata._ZTV13TestThread10A  test_10_thread_priority_change.o
    0x08008dac   0x08008dac   0x00000048   Data   RO          665    .rodata._ZTV13TestThread10B  test_10_thread_priority_change.o
    0x08008df4   0x08008df4   0x00000054   Data   RO          541    .rodata._ZTV14MyMortalThread  test_08_mortal_thread.o
    0x08008e48   0x08008e48   0x00000054   Data   RO          542    .rodata._ZTVN5osapi12MortalThreadE  test_08_mortal_thread.o
    0x08008e9c   0x08008e9c   0x00000048   Data   RO          373    .rodata._ZTVN5osapi15ThreadInterfaceE  test_00_thread_name.o
    0x08008ee4   0x08008ee4   0x00000048   Data   RO          372    .rodata._ZTVN5osapi6ThreadE  test_00_thread_name.o
    0x08008f2c   0x08008f2c   0x00000014   Data   RO            6    .rodata.str1.1      main.o
    0x08008f40   0x08008f40   0x000001d9   Data   RO           46    .rodata.str1.1      basic.o
    0x08009119   0x08009119   0x0000024a   Data   RO           68    .rodata.str1.1      cuerror.o
    0x08009363   0x08009363   0x000000ee   Data   RO          159    .rodata.str1.1      testdb.o
    0x08009451   0x08009451   0x000001ff   Data   RO          257    .rodata.str1.1      testrun.o
    0x08009650   0x08009650   0x0000003f   Data   RO          295    .rodata.str1.1      util.o
    0x0800968f   0x0800968f   0x00000082   Data   RO          314    .rodata.str1.1      test_00_thread_name.o
    0x08009711   0x08009711   0x0000007f   Data   RO          377    .rodata.str1.1      test_01_thread_creation.o
    0x08009790   0x08009790   0x000000b3   Data   RO          398    .rodata.str1.1      test_02_thread_join.o
    0x08009843   0x08009843   0x000000b7   Data   RO          419    .rodata.str1.1      test_03_thread_suspend_resume.o
    0x080098fa   0x080098fa   0x00000087   Data   RO          440    .rodata.str1.1      test_04_thread_priority.o
    0x08009981   0x08009981   0x0000007e   Data   RO          460    .rodata.str1.1      test_05_thread_delay.o
    0x080099ff   0x080099ff   0x00000078   Data   RO          479    .rodata.str1.1      test_06_mutex.o
    0x08009a77   0x08009a77   0x00000059   Data   RO          494    .rodata.str1.1      test_07_recursive_mutex.o
    0x08009ad0   0x08009ad0   0x0000009e   Data   RO          509    .rodata.str1.1      test_08_mortal_thread.o
    0x08009b6e   0x08009b6e   0x000001a7   Data   RO          546    .rodata.str1.1      test_osapi.o
    0x08009d15   0x08009d15   0x000000da   Data   RO          555    .rodata.str1.1      test_14_thread_stack_size.o
    0x08009def   0x08009def   0x000000aa   Data   RO          575    .rodata.str1.1      test_13_thread_suspend_inactive.o
    0x08009e99   0x08009e99   0x000000d1   Data   RO          594    .rodata.str1.1      test_12_thread_state.o
    0x08009f6a   0x08009f6a   0x000000c4   Data   RO          615    .rodata.str1.1      test_11_thread_run_detailed.o
    0x0800a02e   0x0800a02e   0x00000121   Data   RO          636    .rodata.str1.1      test_10_thread_priority_change.o
    0x0800a14f   0x0800a14f   0x00000027   Data   RO          890    .rodata.str1.1      retarget_io.o
    0x0800a176   0x0800a176   0x00000005   Data   RO         1545    .rodata.str1.1      tasks.o
    0x0800a17b   0x0800a17b   0x00000008   Data   RO         1614    .rodata.str1.1      timers.o
    0x0800a183   0x0800a183   0x00000001   PAD
    0x0800a184   0x0800a184   0x00000004   Data   RO         1530    .rodata.uxTopUsedPriority  tasks.o
    0x0800a188   0x0800a188   0x00000020   Data   RO         1878    Region$$Table       anon$$obj.o


    Execution Region RW_IRAM1 (Exec base: 0x20000000, Load base: 0x0800a1a8, Size: 0x00004fd0, Max: 0x00030000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x0800a1a8   0x00000004   Data   RW         1689    .data               mc_w.l(stdout.o)
    0x20000004   0x0800a1ac   0x00000004   Data   RW         1690    .data               mc_w.l(stderr.o)
    0x20000008   0x0800a1b0   0x00000004   Data   RW         1854    .data               mc_w.l(mvars.o)
    0x2000000c   0x0800a1b4   0x00000004   Data   RW         1855    .data               mc_w.l(mvars.o)
    0x20000010   0x0800a1b8   0x00000004   Data   RW         1196    .data.SystemCoreClock  system_stm32f4xx.o
    0x20000014   0x0800a1bc   0x00000004   Data   RW          637    .data._ZL21osapiInitialPriorityA  test_10_thread_priority_change.o
    0x20000018   0x0800a1c0   0x00000004   Data   RW          638    .data._ZL21osapiInitialPriorityB  test_10_thread_priority_change.o
    0x2000001c   0x0800a1c4   0x00000004   Data   RW          556    .data._ZL7runFlag   test_14_thread_stack_size.o
    0x20000020   0x0800a1c8   0x00000004   Data   RW          596    .data._ZL7runFlag   test_12_thread_state.o
    0x20000024   0x0800a1cc   0x00000004   Data   RW          617    .data._ZL7runFlag   test_11_thread_run_detailed.o
    0x20000028   0x0800a1d0   0x00000004   Data   RW          641    .data._ZL7runFlag   test_10_thread_priority_change.o
    0x2000002c   0x0800a1d4   0x00000004   Data   RW          315    .data._ZL8testName  test_00_thread_name.o
    0x20000030   0x0800a1d8   0x00000004   Data   RW          270    .data.f_failure_on_inactive  testrun.o
    0x20000034   0x0800a1dc   0x000000b4   Data   RW           70    .data.get_error_desc.ErrorDescription  cuerror.o
    0x200000e8   0x0800a290   0x00000004   Data   RW         1285    .data.uxCriticalNesting  port.o
    0x200000ec   0x0800a294   0x00000004   PAD
    0x200000f0        -       0x00000004   Zero   RW          512    .bss._ZL11testFlagEnd  test_08_mortal_thread.o
    0x200000f4        -       0x00000004   Zero   RW          511    .bss._ZL12testFlagLoop  test_08_mortal_thread.o
    0x200000f8        -       0x00000004   Zero   RW          510    .bss._ZL13testFlagBegin  test_08_mortal_thread.o
    0x200000fc        -       0x00000004   Zero   RW          639    .bss._ZL19priorityDifferenceA  test_10_thread_priority_change.o
    0x20000100        -       0x00000004   Zero   RW          640    .bss._ZL19priorityDifferenceB  test_10_thread_priority_change.o
    0x20000104        -       0x00000001   Zero   RW          480    .bss._ZL1m          test_06_mutex.o
    0x20000105   0x0800a294   0x00000003   PAD
    0x20000108        -       0x00000008   Zero   RW          495    .bss._ZL1m          test_07_recursive_mutex.o
    0x20000110        -       0x00000004   Zero   RW          400    .bss._ZL7runFlag    test_02_thread_join.o
    0x20000114        -       0x00000004   Zero   RW          421    .bss._ZL7runFlag    test_03_thread_suspend_resume.o
    0x20000118        -       0x00000004   Zero   RW          441    .bss._ZL7runFlag    test_04_thread_priority.o
    0x2000011c        -       0x00000001   Zero   RW          595    .bss._ZL8runState   test_12_thread_state.o
    0x2000011d   0x0800a294   0x00000003   PAD
    0x20000120        -       0x00000004   Zero   RW          378    .bss._ZL8testFlag   test_01_thread_creation.o
    0x20000124        -       0x00000004   Zero   RW          399    .bss._ZL8testFlag   test_02_thread_join.o
    0x20000128        -       0x00000004   Zero   RW          420    .bss._ZL8testFlag   test_03_thread_suspend_resume.o
    0x2000012c        -       0x00000004   Zero   RW          616    .bss._ZL8testFlag   test_11_thread_run_detailed.o
    0x20000130        -       0x00000004   Zero   RW          268    .bss.f_bTestIsRunning  testrun.o
    0x20000134        -       0x00000004   Zero   RW          260    .bss.f_failure_list  testrun.o
    0x20000138        -       0x00000004   Zero   RW          271    .bss.f_last_failure  testrun.o
    0x2000013c        -       0x00000004   Zero   RW          265    .bss.f_pAllTestsCompleteMessageHandler  testrun.o
    0x20000140        -       0x00000004   Zero   RW          256    .bss.f_pCurSuite    testrun.o
    0x20000144        -       0x00000004   Zero   RW          258    .bss.f_pCurTest     testrun.o
    0x20000148        -       0x00000004   Zero   RW           47    .bss.f_pRunningSuite  basic.o
    0x2000014c        -       0x00000004   Zero   RW          267    .bss.f_pSuiteCleanupFailureMessageHandler  testrun.o
    0x20000150        -       0x00000004   Zero   RW          264    .bss.f_pSuiteCompleteMessageHandler  testrun.o
    0x20000154        -       0x00000004   Zero   RW          266    .bss.f_pSuiteInitFailureMessageHandler  testrun.o
    0x20000158        -       0x00000004   Zero   RW          261    .bss.f_pSuiteStartMessageHandler  testrun.o
    0x2000015c        -       0x00000004   Zero   RW          263    .bss.f_pTestCompleteMessageHandler  testrun.o
    0x20000160        -       0x00000004   Zero   RW          160    .bss.f_pTestRegistry  testdb.o
    0x20000164        -       0x00000004   Zero   RW          262    .bss.f_pTestStartMessageHandler  testrun.o
    0x20000168        -       0x00000001   Zero   RW           45    .bss.f_run_mode     basic.o
    0x20000169   0x0800a294   0x00000007   PAD
    0x20000170        -       0x00000060   Zero   RW          259    .bss.f_run_summary  testrun.o
    0x200001d0        -       0x00000004   Zero   RW          269    .bss.f_start_time   testrun.o
    0x200001d4        -       0x00000001   Zero   RW           67    .bss.g_error_action  cuerror.o
    0x200001d5        -       0x00000001   Zero   RW           69    .bss.g_error_number  cuerror.o
    0x200001d6        -       0x00000050   Zero   RW         1622    .bss.prvCheckForValidListAndQueue.ucStaticTimerQueueStorage  timers.o
    0x20000226   0x0800a294   0x00000002   PAD
    0x20000228        -       0x00000050   Zero   RW         1621    .bss.prvCheckForValidListAndQueue.xStaticTimerQueue  timers.o
    0x20000278        -       0x00000004   Zero   RW         1618    .bss.prvSampleTimeNow.xLastTime  timers.o
    0x2000027c        -       0x00000004   Zero   RW         1529    .bss.pxCurrentTCB   tasks.o
    0x20000280        -       0x00000004   Zero   RW         1616    .bss.pxCurrentTimerList  timers.o
    0x20000284        -       0x00000004   Zero   RW         1537    .bss.pxDelayedTaskList  tasks.o
    0x20000288        -       0x00000004   Zero   RW         1309    .bss.pxEnd          heap_4.o
    0x2000028c        -       0x00000004   Zero   RW         1538    .bss.pxOverflowDelayedTaskList  tasks.o
    0x20000290        -       0x00000004   Zero   RW         1617    .bss.pxOverflowTimerList  timers.o
    0x20000294        -       0x00000460   Zero   RW         1540    .bss.pxReadyTasksLists  tasks.o
    0x200006f4        -       0x00002000   Zero   RW         1316    .bss.ucHeap         heap_4.o
    0x200026f4        -       0x00000004   Zero   RW         1534    .bss.uxCurrentNumberOfTasks  tasks.o
    0x200026f8        -       0x00000004   Zero   RW         1533    .bss.uxDeletedTasksWaitingCleanUp  tasks.o
    0x200026fc        -       0x00000004   Zero   RW         1542    .bss.uxSchedulerSuspended  tasks.o
    0x20002700        -       0x00000004   Zero   RW         1531    .bss.uxTaskNumber   tasks.o
    0x20002704        -       0x00000004   Zero   RW         1541    .bss.uxTopReadyPriority  tasks.o
    0x20002708        -       0x00000200   Zero   RW          835    .bss.vApplicationGetIdleTaskMemory.Idle_Stack  cmsis_os2.o
    0x20002908        -       0x0000005c   Zero   RW          834    .bss.vApplicationGetIdleTaskMemory.Idle_TCB  cmsis_os2.o
    0x20002964        -       0x00000140   Zero   RW          837    .bss.vApplicationGetTimerTaskMemory.Timer_Stack  cmsis_os2.o
    0x20002aa4        -       0x0000005c   Zero   RW          836    .bss.vApplicationGetTimerTaskMemory.Timer_TCB  cmsis_os2.o
    0x20002b00        -       0x00000014   Zero   RW         1619    .bss.xActiveTimerList1  timers.o
    0x20002b14        -       0x00000014   Zero   RW         1620    .bss.xActiveTimerList2  timers.o
    0x20002b28        -       0x00000004   Zero   RW         1310    .bss.xBlockAllocatedBit  heap_4.o
    0x20002b2c        -       0x00000014   Zero   RW         1550    .bss.xDelayedTaskList1  tasks.o
    0x20002b40        -       0x00000014   Zero   RW         1551    .bss.xDelayedTaskList2  tasks.o
    0x20002b54        -       0x00000004   Zero   RW         1311    .bss.xFreeBytesRemaining  heap_4.o
    0x20002b58        -       0x00000004   Zero   RW         1546    .bss.xIdleTaskHandle  tasks.o
    0x20002b5c        -       0x00000004   Zero   RW         1313    .bss.xMinimumEverFreeBytesRemaining  heap_4.o
    0x20002b60        -       0x00000004   Zero   RW         1547    .bss.xNextTaskUnblockTime  tasks.o
    0x20002b64        -       0x00000004   Zero   RW         1549    .bss.xNumOfOverflows  tasks.o
    0x20002b68        -       0x00000004   Zero   RW         1314    .bss.xNumberOfSuccessfulAllocations  heap_4.o
    0x20002b6c        -       0x00000004   Zero   RW         1315    .bss.xNumberOfSuccessfulFrees  heap_4.o
    0x20002b70        -       0x00000004   Zero   RW         1548    .bss.xPendedTicks   tasks.o
    0x20002b74        -       0x00000014   Zero   RW         1544    .bss.xPendingReadyList  tasks.o
    0x20002b88        -       0x00000004   Zero   RW         1535    .bss.xSchedulerRunning  tasks.o
    0x20002b8c        -       0x00000008   Zero   RW         1312    .bss.xStart         heap_4.o
    0x20002b94        -       0x00000014   Zero   RW         1539    .bss.xSuspendedTaskList  tasks.o
    0x20002ba8        -       0x00000014   Zero   RW         1532    .bss.xTasksWaitingTermination  tasks.o
    0x20002bbc        -       0x00000004   Zero   RW         1536    .bss.xTickCount     tasks.o
    0x20002bc0        -       0x00000004   Zero   RW         1613    .bss.xTimerQueue    timers.o
    0x20002bc4        -       0x00000004   Zero   RW         1615    .bss.xTimerTaskHandle  timers.o
    0x20002bc8        -       0x00000004   Zero   RW         1543    .bss.xYieldPending  tasks.o
    0x20002bcc   0x0800a294   0x00000004   PAD
    0x20002bd0        -       0x00002000   Zero   RW         1184    HEAP                startup_stm32f429xx.o
    0x20004bd0        -       0x00000400   Zero   RW         1183    STACK               startup_stm32f429xx.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

      1514          0        473          0          5       6033   basic.o
       124          0          0          0       1016      33272   cmsis_os2.o
       208          0        586        180          2       2491   cuerror.o
       952          0          0          0       8224       4208   heap_4.o
       296          0          0          0          0       2339   list.o
        70          0         20          0          0       7386   main.o
         8          0          0          0          0       4514   osapi_freertos.o
       626         16          0          4          0       2836   port.o
      2364          0          0          0          0      14044   queue.o
       322          0         39          0          0       2333   retarget_io.o
        36          8        428          0       9216        904   startup_stm32f429xx.o
        18          0          0          4          0       2712   system_stm32f4xx.o
      5616          0          9          0       1280      22583   tasks.o
      1166          0        346          4          0      24838   test_00_thread_name.o
       270          0        199          0          4      24898   test_01_thread_creation.o
       576          0        251          0          8      25121   test_02_thread_join.o
       574          0        255          0          8      25099   test_03_thread_suspend_resume.o
       312          0        207          0          4      24926   test_04_thread_priority.o
       292          0        198          0          0      24879   test_05_thread_delay.o
       220          0        120          0          1      25712   test_06_mutex.o
       314          0         89          0          8      18555   test_07_recursive_mutex.o
       674          0        326          0         12      26489   test_08_mortal_thread.o
       866          0        433         12          8      26122   test_10_thread_priority_change.o
       536          0        268          4          4      25143   test_11_thread_run_detailed.o
       712          0        281          4          1      25185   test_12_thread_state.o
       276          0        242          0          0      24893   test_13_thread_suspend_inactive.o
       510          0        290          4          0      25047   test_14_thread_stack_size.o
       448          0        423          0          0      17809   test_osapi.o
      2172          0        238          0          4      12232   testdb.o
      6766         16        511          4        148      13552   testrun.o
      1456         10          8          0        220      10473   timers.o
       208          0         63          0          0       2864   util.o

    ----------------------------------------------------------------------
     30744         62       6336        220      20196     509492   Object Totals
         0          0         32          0          0          0   (incl. Generated)
       242         12          1          0         23          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         4          0          0          0          0        380   new.cpp.o
         4          0          0          0          0         36   abort_message.cpp.o
        40         32          0          0          0         52   cxa_virtual.cpp.o
         0          0          0          0          0          0   entry.o
         0          0          0          0          0          0   entry10a.o
         0          0          0          0          0          0   entry11a.o
         8          4          0          0          0          0   entry2.o
         4          0          0          0          0          0   entry5.o
         0          0          0          0          0          0   entry7b.o
         0          0          0          0          0          0   entry8b.o
         8          4          0          0          0          0   entry9a.o
        24          0          0          0          0         80   fputs.o
        30          0          0          0          0          0   handlers.o
        36          8          0          0          0         68   init.o
         0          0          0          0          0          0   iusefp.o
        30          0          0          0          0         68   llshl.o
        36          0          0          0          0         68   llsshr.o
        32          0          0          0          0         68   llushr.o
       246         22          0          0          0        232   malloca.o
        36          0          0          0          0         68   memcpya.o
        36          0          0          0          0        108   memseta.o
         0          0          0          8          0          0   mvars.o
      2360        100          0          0          0        692   printfa.o
         0          0          0          4          0          0   stderr.o
         0          0          0          4          0          0   stdout.o
        28          0          0          0          0         76   strcmp.o
        18          0          0          0          0         68   strcpy.o
        14          0          0          0          0         68   strlen.o
        12          0          0          0          0         68   toupper.o
        44          0          0          0          0         80   uidiv.o
        98          0          0          0          0         92   uldiv.o
        48          0          0          0          0         68   cdrcmple.o
       334          0          0          0          0        148   dadd.o
       222          0          0          0          0        100   ddiv.o
       186          0          0          0          0        176   depilogue.o
        48          0          0          0          0         68   dfixul.o
        26          0          0          0          0         76   dfltui.o
       228          0          0          0          0         96   dmul.o
        62          0          0          0          0         92   setjmp.o

    ----------------------------------------------------------------------
      4304        170          0         16          0       3196   Library Totals
         2          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

         4          0          0          0          0        380   libcpp_w.l
        44         32          0          0          0         88   libcppabi_w.l
      3100        138          0         16          0       1904   mc_w.l
      1154          0          0          0          0        824   mf_w.l

    ----------------------------------------------------------------------
      4304        170          0         16          0       3196   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     35048        232       6336        236      20196     510776   Grand Totals
     35048        232       6336        236      20196     510776   ELF Image Totals
     35048        232       6336        236          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                41384 (  40.41kB)
    Total RW  Size (RW Data + ZI Data)             20432 (  19.95kB)
    Total ROM Size (Code + RO Data + RW Data)      41620 (  40.64kB)

==============================================================================

